// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pacote_posicao.proto

#ifndef PROTOBUF_pacote_5fposicao_2eproto__INCLUDED
#define PROTOBUF_pacote_5fposicao_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pacote_posicao {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pacote_5fposicao_2eproto();
void protobuf_AssignDesc_pacote_5fposicao_2eproto();
void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

class campo_macro;
class equip_contrato;
class equip_delta_telemetria;
class equip_evento;
class equip_evento_carga;
class equip_evento_telemetria;
class equip_flags;
class equip_posicao;
class equip_teclado;
class pacote_enriquecido;
class t32_csq_rot;
class t32_ent_gpsi;
class t32_flags;
class t32_flg_tm;
class t32_horimetro;
class t32_inf_mot;
class t32_odo_vel;
class t32_sai_cfg;
class t_telemetria;

enum dispositivo_id {
  DISP_SEM_EVENTO = 0,
  DISP_ALERTA = 1,
  DISP_ALERTA_BATERIA = 2,
  DISP_ANTI_ROUBO = 3,
  DISP_BATERIA = 4,
  DISP_BATERIA_BKP = 5,
  DISP_BLOQUEIO = 6,
  DISP_CURSO = 7,
  DISP_GPS = 8,
  DISP_GSM = 9,
  DISP_IGNICAO = 10,
  DISP_VEL_MAXIMA = 11,
  DISP_PANICO = 12,
  DISP_REBOCADO = 13,
  DISP_REBOQUE = 14,
  DISP_REQ_POSICAO = 15,
  DISP_SAIDAS = 16,
  DISP_MODO_ECONOM = 17,
  DISP_SISTEMA = 18,
  DISP_TEMPERAT = 19,
  DISP_RASTREAMENTO = 20,
  DISP_JAMMING = 21
};
bool dispositivo_id_IsValid(int value);
const dispositivo_id dispositivo_id_MIN = DISP_SEM_EVENTO;
const dispositivo_id dispositivo_id_MAX = DISP_JAMMING;
const int dispositivo_id_ARRAYSIZE = dispositivo_id_MAX + 1;

const ::google::protobuf::EnumDescriptor* dispositivo_id_descriptor();
inline const ::std::string& dispositivo_id_Name(dispositivo_id value) {
  return ::google::protobuf::internal::NameOfEnum(
    dispositivo_id_descriptor(), value);
}
inline bool dispositivo_id_Parse(
    const ::std::string& name, dispositivo_id* value) {
  return ::google::protobuf::internal::ParseNamedEnum<dispositivo_id>(
    dispositivo_id_descriptor(), name, value);
}
enum evento_id {
  EVENTO_SEM_EVENTO = 0,
  EVENTO_ALTERADO = 1,
  EVENTO_CURTO = 2,
  EVENTO_DESBLOQ = 3,
  EVENTO_EMPTY = 4,
  EVENTO_GPRS = 5,
  EVENTO_HIGH = 6,
  EVENTO_IN = 7,
  EVENTO_LOW = 8,
  EVENTO_NORMAL = 9,
  EVENTO_OFF = 10,
  EVENTO_ON = 11,
  EVENTO_OUT = 12,
  EVENTO_SATELITAL = 13,
  EVENTO_SLEEP = 14,
  EVENTO_TEMPERAT = 15,
  EVENTO_USO = 16,
  EVENTO_VIOLADO = 17,
  EVENTO_ZERO = 18
};
bool evento_id_IsValid(int value);
const evento_id evento_id_MIN = EVENTO_SEM_EVENTO;
const evento_id evento_id_MAX = EVENTO_ZERO;
const int evento_id_ARRAYSIZE = evento_id_MAX + 1;

const ::google::protobuf::EnumDescriptor* evento_id_descriptor();
inline const ::std::string& evento_id_Name(evento_id value) {
  return ::google::protobuf::internal::NameOfEnum(
    evento_id_descriptor(), value);
}
inline bool evento_id_Parse(
    const ::std::string& name, evento_id* value) {
  return ::google::protobuf::internal::ParseNamedEnum<evento_id>(
    evento_id_descriptor(), name, value);
}
enum teclado_id {
  TECLADO_TETROS_MAXI = 0,
  TECLADO_TD50 = 1,
  TECLADO_AVL = 2,
  TECLADO_TD40 = 3,
  TECLADO_ALFANUMERICO = 4,
  TECLADO_TMCD = 5,
  TECLADO = 6,
  TECLADO_TMS3 = 7,
  TECLADO_SASMDT = 8
};
bool teclado_id_IsValid(int value);
const teclado_id teclado_id_MIN = TECLADO_TETROS_MAXI;
const teclado_id teclado_id_MAX = TECLADO_SASMDT;
const int teclado_id_ARRAYSIZE = teclado_id_MAX + 1;

const ::google::protobuf::EnumDescriptor* teclado_id_descriptor();
inline const ::std::string& teclado_id_Name(teclado_id value) {
  return ::google::protobuf::internal::NameOfEnum(
    teclado_id_descriptor(), value);
}
inline bool teclado_id_Parse(
    const ::std::string& name, teclado_id* value) {
  return ::google::protobuf::internal::ParseNamedEnum<teclado_id>(
    teclado_id_descriptor(), name, value);
}
// ===================================================================

class pacote_enriquecido : public ::google::protobuf::Message {
 public:
  pacote_enriquecido();
  virtual ~pacote_enriquecido();

  pacote_enriquecido(const pacote_enriquecido& from);

  inline pacote_enriquecido& operator=(const pacote_enriquecido& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pacote_enriquecido& default_instance();

  void Swap(pacote_enriquecido* other);

  // implements Message ----------------------------------------------

  inline pacote_enriquecido* New() const { return New(NULL); }

  pacote_enriquecido* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pacote_enriquecido& from);
  void MergeFrom(const pacote_enriquecido& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(pacote_enriquecido* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pacote_posicao.equip_contrato ec = 1;
  bool has_ec() const;
  void clear_ec();
  static const int kEcFieldNumber = 1;
  const ::pacote_posicao::equip_contrato& ec() const;
  ::pacote_posicao::equip_contrato* mutable_ec();
  ::pacote_posicao::equip_contrato* release_ec();
  void set_allocated_ec(::pacote_posicao::equip_contrato* ec);

  // optional .pacote_posicao.equip_posicao ep = 2;
  bool has_ep() const;
  void clear_ep();
  static const int kEpFieldNumber = 2;
  const ::pacote_posicao::equip_posicao& ep() const;
  ::pacote_posicao::equip_posicao* mutable_ep();
  ::pacote_posicao::equip_posicao* release_ep();
  void set_allocated_ep(::pacote_posicao::equip_posicao* ep);

  // optional string texto_livre = 3;
  bool has_texto_livre() const;
  void clear_texto_livre();
  static const int kTextoLivreFieldNumber = 3;
  const ::std::string& texto_livre() const;
  void set_texto_livre(const ::std::string& value);
  void set_texto_livre(const char* value);
  void set_texto_livre(const char* value, size_t size);
  ::std::string* mutable_texto_livre();
  ::std::string* release_texto_livre();
  void set_allocated_texto_livre(::std::string* texto_livre);

  // optional .pacote_posicao.equip_teclado teclado = 4;
  bool has_teclado() const;
  void clear_teclado();
  static const int kTecladoFieldNumber = 4;
  const ::pacote_posicao::equip_teclado& teclado() const;
  ::pacote_posicao::equip_teclado* mutable_teclado();
  ::pacote_posicao::equip_teclado* release_teclado();
  void set_allocated_teclado(::pacote_posicao::equip_teclado* teclado);

  // repeated .pacote_posicao.equip_evento evento = 5;
  int evento_size() const;
  void clear_evento();
  static const int kEventoFieldNumber = 5;
  const ::pacote_posicao::equip_evento& evento(int index) const;
  ::pacote_posicao::equip_evento* mutable_evento(int index);
  ::pacote_posicao::equip_evento* add_evento();
  ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento >*
      mutable_evento();
  const ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento >&
      evento() const;

  // repeated .pacote_posicao.equip_evento_carga evento_carga = 6;
  int evento_carga_size() const;
  void clear_evento_carga();
  static const int kEventoCargaFieldNumber = 6;
  const ::pacote_posicao::equip_evento_carga& evento_carga(int index) const;
  ::pacote_posicao::equip_evento_carga* mutable_evento_carga(int index);
  ::pacote_posicao::equip_evento_carga* add_evento_carga();
  ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_carga >*
      mutable_evento_carga();
  const ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_carga >&
      evento_carga() const;

  // optional .pacote_posicao.equip_delta_telemetria delta_telemetria = 7;
  bool has_delta_telemetria() const;
  void clear_delta_telemetria();
  static const int kDeltaTelemetriaFieldNumber = 7;
  const ::pacote_posicao::equip_delta_telemetria& delta_telemetria() const;
  ::pacote_posicao::equip_delta_telemetria* mutable_delta_telemetria();
  ::pacote_posicao::equip_delta_telemetria* release_delta_telemetria();
  void set_allocated_delta_telemetria(::pacote_posicao::equip_delta_telemetria* delta_telemetria);

  // repeated .pacote_posicao.equip_evento_telemetria evento_telemetria = 8;
  int evento_telemetria_size() const;
  void clear_evento_telemetria();
  static const int kEventoTelemetriaFieldNumber = 8;
  const ::pacote_posicao::equip_evento_telemetria& evento_telemetria(int index) const;
  ::pacote_posicao::equip_evento_telemetria* mutable_evento_telemetria(int index);
  ::pacote_posicao::equip_evento_telemetria* add_evento_telemetria();
  ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_telemetria >*
      mutable_evento_telemetria();
  const ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_telemetria >&
      evento_telemetria() const;

  // optional string dump_debug = 9;
  bool has_dump_debug() const;
  void clear_dump_debug();
  static const int kDumpDebugFieldNumber = 9;
  const ::std::string& dump_debug() const;
  void set_dump_debug(const ::std::string& value);
  void set_dump_debug(const char* value);
  void set_dump_debug(const char* value, size_t size);
  ::std::string* mutable_dump_debug();
  ::std::string* release_dump_debug();
  void set_allocated_dump_debug(::std::string* dump_debug);

  // @@protoc_insertion_point(class_scope:pacote_posicao.pacote_enriquecido)
 private:
  inline void set_has_ec();
  inline void clear_has_ec();
  inline void set_has_ep();
  inline void clear_has_ep();
  inline void set_has_texto_livre();
  inline void clear_has_texto_livre();
  inline void set_has_teclado();
  inline void clear_has_teclado();
  inline void set_has_delta_telemetria();
  inline void clear_has_delta_telemetria();
  inline void set_has_dump_debug();
  inline void clear_has_dump_debug();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::pacote_posicao::equip_contrato* ec_;
  ::pacote_posicao::equip_posicao* ep_;
  ::google::protobuf::internal::ArenaStringPtr texto_livre_;
  ::pacote_posicao::equip_teclado* teclado_;
  ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento > evento_;
  ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_carga > evento_carga_;
  ::pacote_posicao::equip_delta_telemetria* delta_telemetria_;
  ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_telemetria > evento_telemetria_;
  ::google::protobuf::internal::ArenaStringPtr dump_debug_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static pacote_enriquecido* default_instance_;
};
// -------------------------------------------------------------------

class campo_macro : public ::google::protobuf::Message {
 public:
  campo_macro();
  virtual ~campo_macro();

  campo_macro(const campo_macro& from);

  inline campo_macro& operator=(const campo_macro& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const campo_macro& default_instance();

  void Swap(campo_macro* other);

  // implements Message ----------------------------------------------

  inline campo_macro* New() const { return New(NULL); }

  campo_macro* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const campo_macro& from);
  void MergeFrom(const campo_macro& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(campo_macro* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 numero_campo = 1;
  bool has_numero_campo() const;
  void clear_numero_campo();
  static const int kNumeroCampoFieldNumber = 1;
  ::google::protobuf::int32 numero_campo() const;
  void set_numero_campo(::google::protobuf::int32 value);

  // optional bytes valor = 2;
  bool has_valor() const;
  void clear_valor();
  static const int kValorFieldNumber = 2;
  const ::std::string& valor() const;
  void set_valor(const ::std::string& value);
  void set_valor(const char* value);
  void set_valor(const void* value, size_t size);
  ::std::string* mutable_valor();
  ::std::string* release_valor();
  void set_allocated_valor(::std::string* valor);

  // @@protoc_insertion_point(class_scope:pacote_posicao.campo_macro)
 private:
  inline void set_has_numero_campo();
  inline void clear_has_numero_campo();
  inline void set_has_valor();
  inline void clear_has_valor();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr valor_;
  ::google::protobuf::int32 numero_campo_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static campo_macro* default_instance_;
};
// -------------------------------------------------------------------

class equip_teclado : public ::google::protobuf::Message {
 public:
  equip_teclado();
  virtual ~equip_teclado();

  equip_teclado(const equip_teclado& from);

  inline equip_teclado& operator=(const equip_teclado& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_teclado& default_instance();

  void Swap(equip_teclado* other);

  // implements Message ----------------------------------------------

  inline equip_teclado* New() const { return New(NULL); }

  equip_teclado* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_teclado& from);
  void MergeFrom(const equip_teclado& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(equip_teclado* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 tipo_teclado = 1;
  bool has_tipo_teclado() const;
  void clear_tipo_teclado();
  static const int kTipoTecladoFieldNumber = 1;
  ::google::protobuf::int32 tipo_teclado() const;
  void set_tipo_teclado(::google::protobuf::int32 value);

  // optional int32 id_conf_leitura = 2;
  bool has_id_conf_leitura() const;
  void clear_id_conf_leitura();
  static const int kIdConfLeituraFieldNumber = 2;
  ::google::protobuf::int32 id_conf_leitura() const;
  void set_id_conf_leitura(::google::protobuf::int32 value);

  // optional int32 id_macro = 3;
  bool has_id_macro() const;
  void clear_id_macro();
  static const int kIdMacroFieldNumber = 3;
  ::google::protobuf::int32 id_macro() const;
  void set_id_macro(::google::protobuf::int32 value);

  // optional string nome_macro = 4;
  bool has_nome_macro() const;
  void clear_nome_macro();
  static const int kNomeMacroFieldNumber = 4;
  const ::std::string& nome_macro() const;
  void set_nome_macro(const ::std::string& value);
  void set_nome_macro(const char* value);
  void set_nome_macro(const char* value, size_t size);
  ::std::string* mutable_nome_macro();
  ::std::string* release_nome_macro();
  void set_allocated_nome_macro(::std::string* nome_macro);

  // optional int32 id_tecla = 5;
  bool has_id_tecla() const;
  void clear_id_tecla();
  static const int kIdTeclaFieldNumber = 5;
  ::google::protobuf::int32 id_tecla() const;
  void set_id_tecla(::google::protobuf::int32 value);

  // optional int32 id_msg_ret = 6;
  bool has_id_msg_ret() const;
  void clear_id_msg_ret();
  static const int kIdMsgRetFieldNumber = 6;
  ::google::protobuf::int32 id_msg_ret() const;
  void set_id_msg_ret(::google::protobuf::int32 value);

  // repeated .pacote_posicao.campo_macro campo = 7;
  int campo_size() const;
  void clear_campo();
  static const int kCampoFieldNumber = 7;
  const ::pacote_posicao::campo_macro& campo(int index) const;
  ::pacote_posicao::campo_macro* mutable_campo(int index);
  ::pacote_posicao::campo_macro* add_campo();
  ::google::protobuf::RepeatedPtrField< ::pacote_posicao::campo_macro >*
      mutable_campo();
  const ::google::protobuf::RepeatedPtrField< ::pacote_posicao::campo_macro >&
      campo() const;

  // @@protoc_insertion_point(class_scope:pacote_posicao.equip_teclado)
 private:
  inline void set_has_tipo_teclado();
  inline void clear_has_tipo_teclado();
  inline void set_has_id_conf_leitura();
  inline void clear_has_id_conf_leitura();
  inline void set_has_id_macro();
  inline void clear_has_id_macro();
  inline void set_has_nome_macro();
  inline void clear_has_nome_macro();
  inline void set_has_id_tecla();
  inline void clear_has_id_tecla();
  inline void set_has_id_msg_ret();
  inline void clear_has_id_msg_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 tipo_teclado_;
  ::google::protobuf::int32 id_conf_leitura_;
  ::google::protobuf::internal::ArenaStringPtr nome_macro_;
  ::google::protobuf::int32 id_macro_;
  ::google::protobuf::int32 id_tecla_;
  ::google::protobuf::RepeatedPtrField< ::pacote_posicao::campo_macro > campo_;
  ::google::protobuf::int32 id_msg_ret_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static equip_teclado* default_instance_;
};
// -------------------------------------------------------------------

class equip_evento : public ::google::protobuf::Message {
 public:
  equip_evento();
  virtual ~equip_evento();

  equip_evento(const equip_evento& from);

  inline equip_evento& operator=(const equip_evento& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_evento& default_instance();

  void Swap(equip_evento* other);

  // implements Message ----------------------------------------------

  inline equip_evento* New() const { return New(NULL); }

  equip_evento* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_evento& from);
  void MergeFrom(const equip_evento& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(equip_evento* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 dispositivo = 1;
  bool has_dispositivo() const;
  void clear_dispositivo();
  static const int kDispositivoFieldNumber = 1;
  ::google::protobuf::int32 dispositivo() const;
  void set_dispositivo(::google::protobuf::int32 value);

  // required int32 evento = 2;
  bool has_evento() const;
  void clear_evento();
  static const int kEventoFieldNumber = 2;
  ::google::protobuf::int32 evento() const;
  void set_evento(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.equip_evento)
 private:
  inline void set_has_dispositivo();
  inline void clear_has_dispositivo();
  inline void set_has_evento();
  inline void clear_has_evento();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 dispositivo_;
  ::google::protobuf::int32 evento_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static equip_evento* default_instance_;
};
// -------------------------------------------------------------------

class equip_evento_carga : public ::google::protobuf::Message {
 public:
  equip_evento_carga();
  virtual ~equip_evento_carga();

  equip_evento_carga(const equip_evento_carga& from);

  inline equip_evento_carga& operator=(const equip_evento_carga& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_evento_carga& default_instance();

  void Swap(equip_evento_carga* other);

  // implements Message ----------------------------------------------

  inline equip_evento_carga* New() const { return New(NULL); }

  equip_evento_carga* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_evento_carga& from);
  void MergeFrom(const equip_evento_carga& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(equip_evento_carga* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 entradas = 2;
  bool has_entradas() const;
  void clear_entradas();
  static const int kEntradasFieldNumber = 2;
  ::google::protobuf::int32 entradas() const;
  void set_entradas(::google::protobuf::int32 value);

  // optional int32 saidas = 3;
  bool has_saidas() const;
  void clear_saidas();
  static const int kSaidasFieldNumber = 3;
  ::google::protobuf::int32 saidas() const;
  void set_saidas(::google::protobuf::int32 value);

  // required int32 tempo = 4;
  bool has_tempo() const;
  void clear_tempo();
  static const int kTempoFieldNumber = 4;
  ::google::protobuf::int32 tempo() const;
  void set_tempo(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.equip_evento_carga)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_entradas();
  inline void clear_has_entradas();
  inline void set_has_saidas();
  inline void clear_has_saidas();
  inline void set_has_tempo();
  inline void clear_has_tempo();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 entradas_;
  ::google::protobuf::int32 saidas_;
  ::google::protobuf::int32 tempo_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static equip_evento_carga* default_instance_;
};
// -------------------------------------------------------------------

class equip_delta_telemetria : public ::google::protobuf::Message {
 public:
  equip_delta_telemetria();
  virtual ~equip_delta_telemetria();

  equip_delta_telemetria(const equip_delta_telemetria& from);

  inline equip_delta_telemetria& operator=(const equip_delta_telemetria& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_delta_telemetria& default_instance();

  void Swap(equip_delta_telemetria* other);

  // implements Message ----------------------------------------------

  inline equip_delta_telemetria* New() const { return New(NULL); }

  equip_delta_telemetria* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_delta_telemetria& from);
  void MergeFrom(const equip_delta_telemetria& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(equip_delta_telemetria* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 versao = 1;
  bool has_versao() const;
  void clear_versao();
  static const int kVersaoFieldNumber = 1;
  ::google::protobuf::int32 versao() const;
  void set_versao(::google::protobuf::int32 value);

  // required int32 dt_fx_azul = 2;
  bool has_dt_fx_azul() const;
  void clear_dt_fx_azul();
  static const int kDtFxAzulFieldNumber = 2;
  ::google::protobuf::int32 dt_fx_azul() const;
  void set_dt_fx_azul(::google::protobuf::int32 value);

  // required int32 tipo = 3;
  bool has_tipo() const;
  void clear_tipo();
  static const int kTipoFieldNumber = 3;
  ::google::protobuf::int32 tipo() const;
  void set_tipo(::google::protobuf::int32 value);

  // required int32 dt_fx_vermelho = 4;
  bool has_dt_fx_vermelho() const;
  void clear_dt_fx_vermelho();
  static const int kDtFxVermelhoFieldNumber = 4;
  ::google::protobuf::int32 dt_fx_vermelho() const;
  void set_dt_fx_vermelho(::google::protobuf::int32 value);

  // required int32 vel_max = 5;
  bool has_vel_max() const;
  void clear_vel_max();
  static const int kVelMaxFieldNumber = 5;
  ::google::protobuf::int32 vel_max() const;
  void set_vel_max(::google::protobuf::int32 value);

  // required int32 dt_fx_amarelo = 6;
  bool has_dt_fx_amarelo() const;
  void clear_dt_fx_amarelo();
  static const int kDtFxAmareloFieldNumber = 6;
  ::google::protobuf::int32 dt_fx_amarelo() const;
  void set_dt_fx_amarelo(::google::protobuf::int32 value);

  // required int32 vel_media = 7;
  bool has_vel_media() const;
  void clear_vel_media();
  static const int kVelMediaFieldNumber = 7;
  ::google::protobuf::int32 vel_media() const;
  void set_vel_media(::google::protobuf::int32 value);

  // required int32 dt_odometro = 8;
  bool has_dt_odometro() const;
  void clear_dt_odometro();
  static const int kDtOdometroFieldNumber = 8;
  ::google::protobuf::int32 dt_odometro() const;
  void set_dt_odometro(::google::protobuf::int32 value);

  // required int32 dt_intervalo = 9;
  bool has_dt_intervalo() const;
  void clear_dt_intervalo();
  static const int kDtIntervaloFieldNumber = 9;
  ::google::protobuf::int32 dt_intervalo() const;
  void set_dt_intervalo(::google::protobuf::int32 value);

  // optional int32 dt_motor_giro = 10;
  bool has_dt_motor_giro() const;
  void clear_dt_motor_giro();
  static const int kDtMotorGiroFieldNumber = 10;
  ::google::protobuf::int32 dt_motor_giro() const;
  void set_dt_motor_giro(::google::protobuf::int32 value);

  // required int32 dt_fx_verde = 11;
  bool has_dt_fx_verde() const;
  void clear_dt_fx_verde();
  static const int kDtFxVerdeFieldNumber = 11;
  ::google::protobuf::int32 dt_fx_verde() const;
  void set_dt_fx_verde(::google::protobuf::int32 value);

  // required int32 dt_movimento = 12;
  bool has_dt_movimento() const;
  void clear_dt_movimento();
  static const int kDtMovimentoFieldNumber = 12;
  ::google::protobuf::int32 dt_movimento() const;
  void set_dt_movimento(::google::protobuf::int32 value);

  // required int32 dt_parado = 13;
  bool has_dt_parado() const;
  void clear_dt_parado();
  static const int kDtParadoFieldNumber = 13;
  ::google::protobuf::int32 dt_parado() const;
  void set_dt_parado(::google::protobuf::int32 value);

  // required int32 rpm_max = 14;
  bool has_rpm_max() const;
  void clear_rpm_max();
  static const int kRpmMaxFieldNumber = 14;
  ::google::protobuf::int32 rpm_max() const;
  void set_rpm_max(::google::protobuf::int32 value);

  // required int32 rpm_med = 15;
  bool has_rpm_med() const;
  void clear_rpm_med();
  static const int kRpmMedFieldNumber = 15;
  ::google::protobuf::int32 rpm_med() const;
  void set_rpm_med(::google::protobuf::int32 value);

  // required int32 tmp_freio_motor = 16;
  bool has_tmp_freio_motor() const;
  void clear_tmp_freio_motor();
  static const int kTmpFreioMotorFieldNumber = 16;
  ::google::protobuf::int32 tmp_freio_motor() const;
  void set_tmp_freio_motor(::google::protobuf::int32 value);

  // required int32 uso_embreagem_km = 17;
  bool has_uso_embreagem_km() const;
  void clear_uso_embreagem_km();
  static const int kUsoEmbreagemKmFieldNumber = 17;
  ::google::protobuf::int32 uso_embreagem_km() const;
  void set_uso_embreagem_km(::google::protobuf::int32 value);

  // required int32 uso_freio_km = 18;
  bool has_uso_freio_km() const;
  void clear_uso_freio_km();
  static const int kUsoFreioKmFieldNumber = 18;
  ::google::protobuf::int32 uso_freio_km() const;
  void set_uso_freio_km(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.equip_delta_telemetria)
 private:
  inline void set_has_versao();
  inline void clear_has_versao();
  inline void set_has_dt_fx_azul();
  inline void clear_has_dt_fx_azul();
  inline void set_has_tipo();
  inline void clear_has_tipo();
  inline void set_has_dt_fx_vermelho();
  inline void clear_has_dt_fx_vermelho();
  inline void set_has_vel_max();
  inline void clear_has_vel_max();
  inline void set_has_dt_fx_amarelo();
  inline void clear_has_dt_fx_amarelo();
  inline void set_has_vel_media();
  inline void clear_has_vel_media();
  inline void set_has_dt_odometro();
  inline void clear_has_dt_odometro();
  inline void set_has_dt_intervalo();
  inline void clear_has_dt_intervalo();
  inline void set_has_dt_motor_giro();
  inline void clear_has_dt_motor_giro();
  inline void set_has_dt_fx_verde();
  inline void clear_has_dt_fx_verde();
  inline void set_has_dt_movimento();
  inline void clear_has_dt_movimento();
  inline void set_has_dt_parado();
  inline void clear_has_dt_parado();
  inline void set_has_rpm_max();
  inline void clear_has_rpm_max();
  inline void set_has_rpm_med();
  inline void clear_has_rpm_med();
  inline void set_has_tmp_freio_motor();
  inline void clear_has_tmp_freio_motor();
  inline void set_has_uso_embreagem_km();
  inline void clear_has_uso_embreagem_km();
  inline void set_has_uso_freio_km();
  inline void clear_has_uso_freio_km();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 versao_;
  ::google::protobuf::int32 dt_fx_azul_;
  ::google::protobuf::int32 tipo_;
  ::google::protobuf::int32 dt_fx_vermelho_;
  ::google::protobuf::int32 vel_max_;
  ::google::protobuf::int32 dt_fx_amarelo_;
  ::google::protobuf::int32 vel_media_;
  ::google::protobuf::int32 dt_odometro_;
  ::google::protobuf::int32 dt_intervalo_;
  ::google::protobuf::int32 dt_motor_giro_;
  ::google::protobuf::int32 dt_fx_verde_;
  ::google::protobuf::int32 dt_movimento_;
  ::google::protobuf::int32 dt_parado_;
  ::google::protobuf::int32 rpm_max_;
  ::google::protobuf::int32 rpm_med_;
  ::google::protobuf::int32 tmp_freio_motor_;
  ::google::protobuf::int32 uso_embreagem_km_;
  ::google::protobuf::int32 uso_freio_km_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static equip_delta_telemetria* default_instance_;
};
// -------------------------------------------------------------------

class equip_evento_telemetria : public ::google::protobuf::Message {
 public:
  equip_evento_telemetria();
  virtual ~equip_evento_telemetria();

  equip_evento_telemetria(const equip_evento_telemetria& from);

  inline equip_evento_telemetria& operator=(const equip_evento_telemetria& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_evento_telemetria& default_instance();

  void Swap(equip_evento_telemetria* other);

  // implements Message ----------------------------------------------

  inline equip_evento_telemetria* New() const { return New(NULL); }

  equip_evento_telemetria* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_evento_telemetria& from);
  void MergeFrom(const equip_evento_telemetria& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(equip_evento_telemetria* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 identificador = 1;
  bool has_identificador() const;
  void clear_identificador();
  static const int kIdentificadorFieldNumber = 1;
  ::google::protobuf::int32 identificador() const;
  void set_identificador(::google::protobuf::int32 value);

  // optional int32 hori_fx_azul = 2;
  bool has_hori_fx_azul() const;
  void clear_hori_fx_azul();
  static const int kHoriFxAzulFieldNumber = 2;
  ::google::protobuf::int32 hori_fx_azul() const;
  void set_hori_fx_azul(::google::protobuf::int32 value);

  // optional int32 hori_fx_amarela = 3;
  bool has_hori_fx_amarela() const;
  void clear_hori_fx_amarela();
  static const int kHoriFxAmarelaFieldNumber = 3;
  ::google::protobuf::int32 hori_fx_amarela() const;
  void set_hori_fx_amarela(::google::protobuf::int32 value);

  // optional int32 hori_fx_verde = 4;
  bool has_hori_fx_verde() const;
  void clear_hori_fx_verde();
  static const int kHoriFxVerdeFieldNumber = 4;
  ::google::protobuf::int32 hori_fx_verde() const;
  void set_hori_fx_verde(::google::protobuf::int32 value);

  // optional int32 hori_fx_vermelha = 5;
  bool has_hori_fx_vermelha() const;
  void clear_hori_fx_vermelha();
  static const int kHoriFxVermelhaFieldNumber = 5;
  ::google::protobuf::int32 hori_fx_vermelha() const;
  void set_hori_fx_vermelha(::google::protobuf::int32 value);

  // optional int32 hori_motor_ligado = 6;
  bool has_hori_motor_ligado() const;
  void clear_hori_motor_ligado();
  static const int kHoriMotorLigadoFieldNumber = 6;
  ::google::protobuf::int32 hori_motor_ligado() const;
  void set_hori_motor_ligado(::google::protobuf::int32 value);

  // optional int32 hori_vei_parado = 7;
  bool has_hori_vei_parado() const;
  void clear_hori_vei_parado();
  static const int kHoriVeiParadoFieldNumber = 7;
  ::google::protobuf::int32 hori_vei_parado() const;
  void set_hori_vei_parado(::google::protobuf::int32 value);

  // optional int32 hori_vei_movimento = 8;
  bool has_hori_vei_movimento() const;
  void clear_hori_vei_movimento();
  static const int kHoriVeiMovimentoFieldNumber = 8;
  ::google::protobuf::int32 hori_vei_movimento() const;
  void set_hori_vei_movimento(::google::protobuf::int32 value);

  // optional int32 hori_vel_kmhr = 9;
  bool has_hori_vel_kmhr() const;
  void clear_hori_vel_kmhr();
  static const int kHoriVelKmhrFieldNumber = 9;
  ::google::protobuf::int32 hori_vel_kmhr() const;
  void set_hori_vel_kmhr(::google::protobuf::int32 value);

  // optional int32 hori_distancia_100 = 10;
  bool has_hori_distancia_100() const;
  void clear_hori_distancia_100();
  static const int kHoriDistancia100FieldNumber = 10;
  ::google::protobuf::int32 hori_distancia_100() const;
  void set_hori_distancia_100(::google::protobuf::int32 value);

  // optional int32 es_psi_oleo = 11;
  bool has_es_psi_oleo() const;
  void clear_es_psi_oleo();
  static const int kEsPsiOleoFieldNumber = 11;
  ::google::protobuf::int32 es_psi_oleo() const;
  void set_es_psi_oleo(::google::protobuf::int32 value);

  // optional int32 es_embreagem = 12;
  bool has_es_embreagem() const;
  void clear_es_embreagem();
  static const int kEsEmbreagemFieldNumber = 12;
  ::google::protobuf::int32 es_embreagem() const;
  void set_es_embreagem(::google::protobuf::int32 value);

  // optional int32 es_freio = 13;
  bool has_es_freio() const;
  void clear_es_freio();
  static const int kEsFreioFieldNumber = 13;
  ::google::protobuf::int32 es_freio() const;
  void set_es_freio(::google::protobuf::int32 value);

  // optional int32 es_limpador_parabrisa = 14;
  bool has_es_limpador_parabrisa() const;
  void clear_es_limpador_parabrisa();
  static const int kEsLimpadorParabrisaFieldNumber = 14;
  ::google::protobuf::int32 es_limpador_parabrisa() const;
  void set_es_limpador_parabrisa(::google::protobuf::int32 value);

  // optional int32 es_cx_marcha = 15;
  bool has_es_cx_marcha() const;
  void clear_es_cx_marcha();
  static const int kEsCxMarchaFieldNumber = 15;
  ::google::protobuf::int32 es_cx_marcha() const;
  void set_es_cx_marcha(::google::protobuf::int32 value);

  // optional int32 es_freio_motor = 16;
  bool has_es_freio_motor() const;
  void clear_es_freio_motor();
  static const int kEsFreioMotorFieldNumber = 16;
  ::google::protobuf::int32 es_freio_motor() const;
  void set_es_freio_motor(::google::protobuf::int32 value);

  // optional int32 es_saida_fet = 17;
  bool has_es_saida_fet() const;
  void clear_es_saida_fet();
  static const int kEsSaidaFetFieldNumber = 17;
  ::google::protobuf::int32 es_saida_fet() const;
  void set_es_saida_fet(::google::protobuf::int32 value);

  // optional int32 es_a1 = 18;
  bool has_es_a1() const;
  void clear_es_a1();
  static const int kEsA1FieldNumber = 18;
  ::google::protobuf::int32 es_a1() const;
  void set_es_a1(::google::protobuf::int32 value);

  // optional int32 es_a2 = 19;
  bool has_es_a2() const;
  void clear_es_a2();
  static const int kEsA2FieldNumber = 19;
  ::google::protobuf::int32 es_a2() const;
  void set_es_a2(::google::protobuf::int32 value);

  // optional int32 es_a3 = 20;
  bool has_es_a3() const;
  void clear_es_a3();
  static const int kEsA3FieldNumber = 20;
  ::google::protobuf::int32 es_a3() const;
  void set_es_a3(::google::protobuf::int32 value);

  // optional int32 es_id_evento_percurso = 21;
  bool has_es_id_evento_percurso() const;
  void clear_es_id_evento_percurso();
  static const int kEsIdEventoPercursoFieldNumber = 21;
  ::google::protobuf::int32 es_id_evento_percurso() const;
  void set_es_id_evento_percurso(::google::protobuf::int32 value);

  // optional int32 es_pct_evento = 22;
  bool has_es_pct_evento() const;
  void clear_es_pct_evento();
  static const int kEsPctEventoFieldNumber = 22;
  ::google::protobuf::int32 es_pct_evento() const;
  void set_es_pct_evento(::google::protobuf::int32 value);

  // optional int32 ev_vel_max_alcancada = 23;
  bool has_ev_vel_max_alcancada() const;
  void clear_ev_vel_max_alcancada();
  static const int kEvVelMaxAlcancadaFieldNumber = 23;
  ::google::protobuf::int32 ev_vel_max_alcancada() const;
  void set_ev_vel_max_alcancada(::google::protobuf::int32 value);

  // optional int32 ev_vel_media = 24;
  bool has_ev_vel_media() const;
  void clear_ev_vel_media();
  static const int kEvVelMediaFieldNumber = 24;
  ::google::protobuf::int32 ev_vel_media() const;
  void set_ev_vel_media(::google::protobuf::int32 value);

  // optional int32 ev_rot_maxima = 25;
  bool has_ev_rot_maxima() const;
  void clear_ev_rot_maxima();
  static const int kEvRotMaximaFieldNumber = 25;
  ::google::protobuf::int32 ev_rot_maxima() const;
  void set_ev_rot_maxima(::google::protobuf::int32 value);

  // optional int32 ev_embre_kmrodado = 26;
  bool has_ev_embre_kmrodado() const;
  void clear_ev_embre_kmrodado();
  static const int kEvEmbreKmrodadoFieldNumber = 26;
  ::google::protobuf::int32 ev_embre_kmrodado() const;
  void set_ev_embre_kmrodado(::google::protobuf::int32 value);

  // optional int32 ev_freio_kmrodado = 27;
  bool has_ev_freio_kmrodado() const;
  void clear_ev_freio_kmrodado();
  static const int kEvFreioKmrodadoFieldNumber = 27;
  ::google::protobuf::int32 ev_freio_kmrodado() const;
  void set_ev_freio_kmrodado(::google::protobuf::int32 value);

  // optional int32 ev_tempo_freiomotor = 28;
  bool has_ev_tempo_freiomotor() const;
  void clear_ev_tempo_freiomotor();
  static const int kEvTempoFreiomotorFieldNumber = 28;
  ::google::protobuf::int32 ev_tempo_freiomotor() const;
  void set_ev_tempo_freiomotor(::google::protobuf::int32 value);

  // optional int32 ev_vel_lib_embre = 29;
  bool has_ev_vel_lib_embre() const;
  void clear_ev_vel_lib_embre();
  static const int kEvVelLibEmbreFieldNumber = 29;
  ::google::protobuf::int32 ev_vel_lib_embre() const;
  void set_ev_vel_lib_embre(::google::protobuf::int32 value);

  // optional int32 ev_rot_embre = 30;
  bool has_ev_rot_embre() const;
  void clear_ev_rot_embre();
  static const int kEvRotEmbreFieldNumber = 30;
  ::google::protobuf::int32 ev_rot_embre() const;
  void set_ev_rot_embre(::google::protobuf::int32 value);

  // optional int32 ev_tempo_duracao = 31;
  bool has_ev_tempo_duracao() const;
  void clear_ev_tempo_duracao();
  static const int kEvTempoDuracaoFieldNumber = 31;
  ::google::protobuf::int32 ev_tempo_duracao() const;
  void set_ev_tempo_duracao(::google::protobuf::int32 value);

  // optional int32 ev_vel_referencia = 32;
  bool has_ev_vel_referencia() const;
  void clear_ev_vel_referencia();
  static const int kEvVelReferenciaFieldNumber = 32;
  ::google::protobuf::int32 ev_vel_referencia() const;
  void set_ev_vel_referencia(::google::protobuf::int32 value);

  // optional int32 ev_vel_inicial = 33;
  bool has_ev_vel_inicial() const;
  void clear_ev_vel_inicial();
  static const int kEvVelInicialFieldNumber = 33;
  ::google::protobuf::int32 ev_vel_inicial() const;
  void set_ev_vel_inicial(::google::protobuf::int32 value);

  // optional int32 ev_vel_final = 34;
  bool has_ev_vel_final() const;
  void clear_ev_vel_final();
  static const int kEvVelFinalFieldNumber = 34;
  ::google::protobuf::int32 ev_vel_final() const;
  void set_ev_vel_final(::google::protobuf::int32 value);

  // optional int32 ev_vel_max_evento = 35;
  bool has_ev_vel_max_evento() const;
  void clear_ev_vel_max_evento();
  static const int kEvVelMaxEventoFieldNumber = 35;
  ::google::protobuf::int32 ev_vel_max_evento() const;
  void set_ev_vel_max_evento(::google::protobuf::int32 value);

  // optional int32 ev_temp_max_01v = 36;
  bool has_ev_temp_max_01v() const;
  void clear_ev_temp_max_01v();
  static const int kEvTempMax01VFieldNumber = 36;
  ::google::protobuf::int32 ev_temp_max_01v() const;
  void set_ev_temp_max_01v(::google::protobuf::int32 value);

  // optional int32 ev_tensao_01v = 37;
  bool has_ev_tensao_01v() const;
  void clear_ev_tensao_01v();
  static const int kEvTensao01VFieldNumber = 37;
  ::google::protobuf::int32 ev_tensao_01v() const;
  void set_ev_tensao_01v(::google::protobuf::int32 value);

  // optional int32 ev_rot_permitido = 38;
  bool has_ev_rot_permitido() const;
  void clear_ev_rot_permitido();
  static const int kEvRotPermitidoFieldNumber = 38;
  ::google::protobuf::int32 ev_rot_permitido() const;
  void set_ev_rot_permitido(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.equip_evento_telemetria)
 private:
  inline void set_has_identificador();
  inline void clear_has_identificador();
  inline void set_has_hori_fx_azul();
  inline void clear_has_hori_fx_azul();
  inline void set_has_hori_fx_amarela();
  inline void clear_has_hori_fx_amarela();
  inline void set_has_hori_fx_verde();
  inline void clear_has_hori_fx_verde();
  inline void set_has_hori_fx_vermelha();
  inline void clear_has_hori_fx_vermelha();
  inline void set_has_hori_motor_ligado();
  inline void clear_has_hori_motor_ligado();
  inline void set_has_hori_vei_parado();
  inline void clear_has_hori_vei_parado();
  inline void set_has_hori_vei_movimento();
  inline void clear_has_hori_vei_movimento();
  inline void set_has_hori_vel_kmhr();
  inline void clear_has_hori_vel_kmhr();
  inline void set_has_hori_distancia_100();
  inline void clear_has_hori_distancia_100();
  inline void set_has_es_psi_oleo();
  inline void clear_has_es_psi_oleo();
  inline void set_has_es_embreagem();
  inline void clear_has_es_embreagem();
  inline void set_has_es_freio();
  inline void clear_has_es_freio();
  inline void set_has_es_limpador_parabrisa();
  inline void clear_has_es_limpador_parabrisa();
  inline void set_has_es_cx_marcha();
  inline void clear_has_es_cx_marcha();
  inline void set_has_es_freio_motor();
  inline void clear_has_es_freio_motor();
  inline void set_has_es_saida_fet();
  inline void clear_has_es_saida_fet();
  inline void set_has_es_a1();
  inline void clear_has_es_a1();
  inline void set_has_es_a2();
  inline void clear_has_es_a2();
  inline void set_has_es_a3();
  inline void clear_has_es_a3();
  inline void set_has_es_id_evento_percurso();
  inline void clear_has_es_id_evento_percurso();
  inline void set_has_es_pct_evento();
  inline void clear_has_es_pct_evento();
  inline void set_has_ev_vel_max_alcancada();
  inline void clear_has_ev_vel_max_alcancada();
  inline void set_has_ev_vel_media();
  inline void clear_has_ev_vel_media();
  inline void set_has_ev_rot_maxima();
  inline void clear_has_ev_rot_maxima();
  inline void set_has_ev_embre_kmrodado();
  inline void clear_has_ev_embre_kmrodado();
  inline void set_has_ev_freio_kmrodado();
  inline void clear_has_ev_freio_kmrodado();
  inline void set_has_ev_tempo_freiomotor();
  inline void clear_has_ev_tempo_freiomotor();
  inline void set_has_ev_vel_lib_embre();
  inline void clear_has_ev_vel_lib_embre();
  inline void set_has_ev_rot_embre();
  inline void clear_has_ev_rot_embre();
  inline void set_has_ev_tempo_duracao();
  inline void clear_has_ev_tempo_duracao();
  inline void set_has_ev_vel_referencia();
  inline void clear_has_ev_vel_referencia();
  inline void set_has_ev_vel_inicial();
  inline void clear_has_ev_vel_inicial();
  inline void set_has_ev_vel_final();
  inline void clear_has_ev_vel_final();
  inline void set_has_ev_vel_max_evento();
  inline void clear_has_ev_vel_max_evento();
  inline void set_has_ev_temp_max_01v();
  inline void clear_has_ev_temp_max_01v();
  inline void set_has_ev_tensao_01v();
  inline void clear_has_ev_tensao_01v();
  inline void set_has_ev_rot_permitido();
  inline void clear_has_ev_rot_permitido();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::int32 identificador_;
  ::google::protobuf::int32 hori_fx_azul_;
  ::google::protobuf::int32 hori_fx_amarela_;
  ::google::protobuf::int32 hori_fx_verde_;
  ::google::protobuf::int32 hori_fx_vermelha_;
  ::google::protobuf::int32 hori_motor_ligado_;
  ::google::protobuf::int32 hori_vei_parado_;
  ::google::protobuf::int32 hori_vei_movimento_;
  ::google::protobuf::int32 hori_vel_kmhr_;
  ::google::protobuf::int32 hori_distancia_100_;
  ::google::protobuf::int32 es_psi_oleo_;
  ::google::protobuf::int32 es_embreagem_;
  ::google::protobuf::int32 es_freio_;
  ::google::protobuf::int32 es_limpador_parabrisa_;
  ::google::protobuf::int32 es_cx_marcha_;
  ::google::protobuf::int32 es_freio_motor_;
  ::google::protobuf::int32 es_saida_fet_;
  ::google::protobuf::int32 es_a1_;
  ::google::protobuf::int32 es_a2_;
  ::google::protobuf::int32 es_a3_;
  ::google::protobuf::int32 es_id_evento_percurso_;
  ::google::protobuf::int32 es_pct_evento_;
  ::google::protobuf::int32 ev_vel_max_alcancada_;
  ::google::protobuf::int32 ev_vel_media_;
  ::google::protobuf::int32 ev_rot_maxima_;
  ::google::protobuf::int32 ev_embre_kmrodado_;
  ::google::protobuf::int32 ev_freio_kmrodado_;
  ::google::protobuf::int32 ev_tempo_freiomotor_;
  ::google::protobuf::int32 ev_vel_lib_embre_;
  ::google::protobuf::int32 ev_rot_embre_;
  ::google::protobuf::int32 ev_tempo_duracao_;
  ::google::protobuf::int32 ev_vel_referencia_;
  ::google::protobuf::int32 ev_vel_inicial_;
  ::google::protobuf::int32 ev_vel_final_;
  ::google::protobuf::int32 ev_vel_max_evento_;
  ::google::protobuf::int32 ev_temp_max_01v_;
  ::google::protobuf::int32 ev_tensao_01v_;
  ::google::protobuf::int32 ev_rot_permitido_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static equip_evento_telemetria* default_instance_;
};
// -------------------------------------------------------------------

class equip_flags : public ::google::protobuf::Message {
 public:
  equip_flags();
  virtual ~equip_flags();

  equip_flags(const equip_flags& from);

  inline equip_flags& operator=(const equip_flags& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_flags& default_instance();

  void Swap(equip_flags* other);

  // implements Message ----------------------------------------------

  inline equip_flags* New() const { return New(NULL); }

  equip_flags* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_flags& from);
  void MergeFrom(const equip_flags& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(equip_flags* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bloqueio = 1;
  bool has_bloqueio() const;
  void clear_bloqueio();
  static const int kBloqueioFieldNumber = 1;
  ::google::protobuf::int32 bloqueio() const;
  void set_bloqueio(::google::protobuf::int32 value);

  // optional int32 alerta_int = 2;
  bool has_alerta_int() const;
  void clear_alerta_int();
  static const int kAlertaIntFieldNumber = 2;
  ::google::protobuf::int32 alerta_int() const;
  void set_alerta_int(::google::protobuf::int32 value);

  // optional int32 somente_posicao = 3;
  bool has_somente_posicao() const;
  void clear_somente_posicao();
  static const int kSomentePosicaoFieldNumber = 3;
  ::google::protobuf::int32 somente_posicao() const;
  void set_somente_posicao(::google::protobuf::int32 value);

  // optional int32 entrada_ponto = 4;
  bool has_entrada_ponto() const;
  void clear_entrada_ponto();
  static const int kEntradaPontoFieldNumber = 4;
  ::google::protobuf::int32 entrada_ponto() const;
  void set_entrada_ponto(::google::protobuf::int32 value);

  // optional int32 saida_ponto = 5;
  bool has_saida_ponto() const;
  void clear_saida_ponto();
  static const int kSaidaPontoFieldNumber = 5;
  ::google::protobuf::int32 saida_ponto() const;
  void set_saida_ponto(::google::protobuf::int32 value);

  // optional int32 alerta_bat = 6;
  bool has_alerta_bat() const;
  void clear_alerta_bat();
  static const int kAlertaBatFieldNumber = 6;
  ::google::protobuf::int32 alerta_bat() const;
  void set_alerta_bat(::google::protobuf::int32 value);

  // optional int32 pad1 = 7;
  bool has_pad1() const;
  void clear_pad1();
  static const int kPad1FieldNumber = 7;
  ::google::protobuf::int32 pad1() const;
  void set_pad1(::google::protobuf::int32 value);

  // optional int32 periferico = 8;
  bool has_periferico() const;
  void clear_periferico();
  static const int kPerifericoFieldNumber = 8;
  ::google::protobuf::int32 periferico() const;
  void set_periferico(::google::protobuf::int32 value);

  // optional int32 cod_periferico = 9;
  bool has_cod_periferico() const;
  void clear_cod_periferico();
  static const int kCodPerifericoFieldNumber = 9;
  ::google::protobuf::int32 cod_periferico() const;
  void set_cod_periferico(::google::protobuf::int32 value);

  // optional int32 pad2 = 10;
  bool has_pad2() const;
  void clear_pad2();
  static const int kPad2FieldNumber = 10;
  ::google::protobuf::int32 pad2() const;
  void set_pad2(::google::protobuf::int32 value);

  // optional int32 viagem_aberta = 11;
  bool has_viagem_aberta() const;
  void clear_viagem_aberta();
  static const int kViagemAbertaFieldNumber = 11;
  ::google::protobuf::int32 viagem_aberta() const;
  void set_viagem_aberta(::google::protobuf::int32 value);

  // optional int32 viagem_fechada = 12;
  bool has_viagem_fechada() const;
  void clear_viagem_fechada();
  static const int kViagemFechadaFieldNumber = 12;
  ::google::protobuf::int32 viagem_fechada() const;
  void set_viagem_fechada(::google::protobuf::int32 value);

  // optional int32 fuga_cerca = 13;
  bool has_fuga_cerca() const;
  void clear_fuga_cerca();
  static const int kFugaCercaFieldNumber = 13;
  ::google::protobuf::int32 fuga_cerca() const;
  void set_fuga_cerca(::google::protobuf::int32 value);

  // optional int32 ponto_de_ref = 14;
  bool has_ponto_de_ref() const;
  void clear_ponto_de_ref();
  static const int kPontoDeRefFieldNumber = 14;
  ::google::protobuf::int32 ponto_de_ref() const;
  void set_ponto_de_ref(::google::protobuf::int32 value);

  // optional int32 ignicao = 15;
  bool has_ignicao() const;
  void clear_ignicao();
  static const int kIgnicaoFieldNumber = 15;
  ::google::protobuf::int32 ignicao() const;
  void set_ignicao(::google::protobuf::int32 value);

  // optional int32 tem_mensagem = 16;
  bool has_tem_mensagem() const;
  void clear_tem_mensagem();
  static const int kTemMensagemFieldNumber = 16;
  ::google::protobuf::int32 tem_mensagem() const;
  void set_tem_mensagem(::google::protobuf::int32 value);

  // optional int32 anti_theft = 17;
  bool has_anti_theft() const;
  void clear_anti_theft();
  static const int kAntiTheftFieldNumber = 17;
  ::google::protobuf::int32 anti_theft() const;
  void set_anti_theft(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.equip_flags)
 private:
  inline void set_has_bloqueio();
  inline void clear_has_bloqueio();
  inline void set_has_alerta_int();
  inline void clear_has_alerta_int();
  inline void set_has_somente_posicao();
  inline void clear_has_somente_posicao();
  inline void set_has_entrada_ponto();
  inline void clear_has_entrada_ponto();
  inline void set_has_saida_ponto();
  inline void clear_has_saida_ponto();
  inline void set_has_alerta_bat();
  inline void clear_has_alerta_bat();
  inline void set_has_pad1();
  inline void clear_has_pad1();
  inline void set_has_periferico();
  inline void clear_has_periferico();
  inline void set_has_cod_periferico();
  inline void clear_has_cod_periferico();
  inline void set_has_pad2();
  inline void clear_has_pad2();
  inline void set_has_viagem_aberta();
  inline void clear_has_viagem_aberta();
  inline void set_has_viagem_fechada();
  inline void clear_has_viagem_fechada();
  inline void set_has_fuga_cerca();
  inline void clear_has_fuga_cerca();
  inline void set_has_ponto_de_ref();
  inline void clear_has_ponto_de_ref();
  inline void set_has_ignicao();
  inline void clear_has_ignicao();
  inline void set_has_tem_mensagem();
  inline void clear_has_tem_mensagem();
  inline void set_has_anti_theft();
  inline void clear_has_anti_theft();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 bloqueio_;
  ::google::protobuf::int32 alerta_int_;
  ::google::protobuf::int32 somente_posicao_;
  ::google::protobuf::int32 entrada_ponto_;
  ::google::protobuf::int32 saida_ponto_;
  ::google::protobuf::int32 alerta_bat_;
  ::google::protobuf::int32 pad1_;
  ::google::protobuf::int32 periferico_;
  ::google::protobuf::int32 cod_periferico_;
  ::google::protobuf::int32 pad2_;
  ::google::protobuf::int32 viagem_aberta_;
  ::google::protobuf::int32 viagem_fechada_;
  ::google::protobuf::int32 fuga_cerca_;
  ::google::protobuf::int32 ponto_de_ref_;
  ::google::protobuf::int32 ignicao_;
  ::google::protobuf::int32 tem_mensagem_;
  ::google::protobuf::int32 anti_theft_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static equip_flags* default_instance_;
};
// -------------------------------------------------------------------

class equip_contrato : public ::google::protobuf::Message {
 public:
  equip_contrato();
  virtual ~equip_contrato();

  equip_contrato(const equip_contrato& from);

  inline equip_contrato& operator=(const equip_contrato& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_contrato& default_instance();

  void Swap(equip_contrato* other);

  // implements Message ----------------------------------------------

  inline equip_contrato* New() const { return New(NULL); }

  equip_contrato* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_contrato& from);
  void MergeFrom(const equip_contrato& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(equip_contrato* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 esn = 1;
  bool has_esn() const;
  void clear_esn();
  static const int kEsnFieldNumber = 1;
  ::google::protobuf::int64 esn() const;
  void set_esn(::google::protobuf::int64 value);

  // optional int32 clioid = 2;
  bool has_clioid() const;
  void clear_clioid();
  static const int kClioidFieldNumber = 2;
  ::google::protobuf::int32 clioid() const;
  void set_clioid(::google::protobuf::int32 value);

  // repeated int32 gerenciadora = 3;
  int gerenciadora_size() const;
  void clear_gerenciadora();
  static const int kGerenciadoraFieldNumber = 3;
  ::google::protobuf::int32 gerenciadora(int index) const;
  void set_gerenciadora(int index, ::google::protobuf::int32 value);
  void add_gerenciadora(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gerenciadora() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gerenciadora();

  // optional int32 connumero = 4;
  bool has_connumero() const;
  void clear_connumero();
  static const int kConnumeroFieldNumber = 4;
  ::google::protobuf::int32 connumero() const;
  void set_connumero(::google::protobuf::int32 value);

  // optional int32 veioid = 5;
  bool has_veioid() const;
  void clear_veioid();
  static const int kVeioidFieldNumber = 5;
  ::google::protobuf::int32 veioid() const;
  void set_veioid(::google::protobuf::int32 value);

  // optional int32 tipo_contrato = 6;
  bool has_tipo_contrato() const;
  void clear_tipo_contrato();
  static const int kTipoContratoFieldNumber = 6;
  ::google::protobuf::int32 tipo_contrato() const;
  void set_tipo_contrato(::google::protobuf::int32 value);

  // optional int32 classe = 7;
  bool has_classe() const;
  void clear_classe();
  static const int kClasseFieldNumber = 7;
  ::google::protobuf::int32 classe() const;
  void set_classe(::google::protobuf::int32 value);

  // optional int32 protocolo = 8;
  bool has_protocolo() const;
  void clear_protocolo();
  static const int kProtocoloFieldNumber = 8;
  ::google::protobuf::int32 protocolo() const;
  void set_protocolo(::google::protobuf::int32 value);

  // optional int32 serial = 9;
  bool has_serial() const;
  void clear_serial();
  static const int kSerialFieldNumber = 9;
  ::google::protobuf::int32 serial() const;
  void set_serial(::google::protobuf::int32 value);

  // optional int32 porta_panico = 10;
  bool has_porta_panico() const;
  void clear_porta_panico();
  static const int kPortaPanicoFieldNumber = 10;
  ::google::protobuf::int32 porta_panico() const;
  void set_porta_panico(::google::protobuf::int32 value);

  // optional int32 porta_bloqueio = 11;
  bool has_porta_bloqueio() const;
  void clear_porta_bloqueio();
  static const int kPortaBloqueioFieldNumber = 11;
  ::google::protobuf::int32 porta_bloqueio() const;
  void set_porta_bloqueio(::google::protobuf::int32 value);

  // optional int32 id = 12;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 12;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 is_sasgc = 13;
  bool has_is_sasgc() const;
  void clear_is_sasgc();
  static const int kIsSasgcFieldNumber = 13;
  ::google::protobuf::int32 is_sasgc() const;
  void set_is_sasgc(::google::protobuf::int32 value);

  // optional int32 tipo_veiculo = 14;
  bool has_tipo_veiculo() const;
  void clear_tipo_veiculo();
  static const int kTipoVeiculoFieldNumber = 14;
  ::google::protobuf::int32 tipo_veiculo() const;
  void set_tipo_veiculo(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.equip_contrato)
 private:
  inline void set_has_esn();
  inline void clear_has_esn();
  inline void set_has_clioid();
  inline void clear_has_clioid();
  inline void set_has_connumero();
  inline void clear_has_connumero();
  inline void set_has_veioid();
  inline void clear_has_veioid();
  inline void set_has_tipo_contrato();
  inline void clear_has_tipo_contrato();
  inline void set_has_classe();
  inline void clear_has_classe();
  inline void set_has_protocolo();
  inline void clear_has_protocolo();
  inline void set_has_serial();
  inline void clear_has_serial();
  inline void set_has_porta_panico();
  inline void clear_has_porta_panico();
  inline void set_has_porta_bloqueio();
  inline void clear_has_porta_bloqueio();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_is_sasgc();
  inline void clear_has_is_sasgc();
  inline void set_has_tipo_veiculo();
  inline void clear_has_tipo_veiculo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 esn_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gerenciadora_;
  ::google::protobuf::int32 clioid_;
  ::google::protobuf::int32 connumero_;
  ::google::protobuf::int32 veioid_;
  ::google::protobuf::int32 tipo_contrato_;
  ::google::protobuf::int32 classe_;
  ::google::protobuf::int32 protocolo_;
  ::google::protobuf::int32 serial_;
  ::google::protobuf::int32 porta_panico_;
  ::google::protobuf::int32 porta_bloqueio_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 is_sasgc_;
  ::google::protobuf::int32 tipo_veiculo_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static equip_contrato* default_instance_;
};
// -------------------------------------------------------------------

class equip_posicao : public ::google::protobuf::Message {
 public:
  equip_posicao();
  virtual ~equip_posicao();

  equip_posicao(const equip_posicao& from);

  inline equip_posicao& operator=(const equip_posicao& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const equip_posicao& default_instance();

  void Swap(equip_posicao* other);

  // implements Message ----------------------------------------------

  inline equip_posicao* New() const { return New(NULL); }

  equip_posicao* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const equip_posicao& from);
  void MergeFrom(const equip_posicao& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(equip_posicao* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 datahora = 1;
  bool has_datahora() const;
  void clear_datahora();
  static const int kDatahoraFieldNumber = 1;
  ::google::protobuf::int32 datahora() const;
  void set_datahora(::google::protobuf::int32 value);

  // optional int32 datachegada = 2;
  bool has_datachegada() const;
  void clear_datachegada();
  static const int kDatachegadaFieldNumber = 2;
  ::google::protobuf::int32 datachegada() const;
  void set_datachegada(::google::protobuf::int32 value);

  // repeated int32 entrada = 3;
  int entrada_size() const;
  void clear_entrada();
  static const int kEntradaFieldNumber = 3;
  ::google::protobuf::int32 entrada(int index) const;
  void set_entrada(int index, ::google::protobuf::int32 value);
  void add_entrada(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      entrada() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_entrada();

  // repeated int32 saida = 4;
  int saida_size() const;
  void clear_saida();
  static const int kSaidaFieldNumber = 4;
  ::google::protobuf::int32 saida(int index) const;
  void set_saida(int index, ::google::protobuf::int32 value);
  void add_saida(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      saida() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_saida();

  // optional double lat2 = 5;
  bool has_lat2() const;
  void clear_lat2();
  static const int kLat2FieldNumber = 5;
  double lat2() const;
  void set_lat2(double value);

  // optional double long2 = 6;
  bool has_long2() const;
  void clear_long2();
  static const int kLong2FieldNumber = 6;
  double long2() const;
  void set_long2(double value);

  // optional .pacote_posicao.t32_odo_vel odo_vel_gps = 7;
  bool has_odo_vel_gps() const;
  void clear_odo_vel_gps();
  static const int kOdoVelGpsFieldNumber = 7;
  const ::pacote_posicao::t32_odo_vel& odo_vel_gps() const;
  ::pacote_posicao::t32_odo_vel* mutable_odo_vel_gps();
  ::pacote_posicao::t32_odo_vel* release_odo_vel_gps();
  void set_allocated_odo_vel_gps(::pacote_posicao::t32_odo_vel* odo_vel_gps);

  // optional int32 id_ponto = 8;
  bool has_id_ponto() const;
  void clear_id_ponto();
  static const int kIdPontoFieldNumber = 8;
  ::google::protobuf::int32 id_ponto() const;
  void set_id_ponto(::google::protobuf::int32 value);

  // optional .pacote_posicao.t32_flags flags = 9;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 9;
  const ::pacote_posicao::t32_flags& flags() const;
  ::pacote_posicao::t32_flags* mutable_flags();
  ::pacote_posicao::t32_flags* release_flags();
  void set_allocated_flags(::pacote_posicao::t32_flags* flags);

  // optional .pacote_posicao.t32_csq_rot csq_id_rota = 10;
  bool has_csq_id_rota() const;
  void clear_csq_id_rota();
  static const int kCsqIdRotaFieldNumber = 10;
  const ::pacote_posicao::t32_csq_rot& csq_id_rota() const;
  ::pacote_posicao::t32_csq_rot* mutable_csq_id_rota();
  ::pacote_posicao::t32_csq_rot* release_csq_id_rota();
  void set_allocated_csq_id_rota(::pacote_posicao::t32_csq_rot* csq_id_rota);

  // optional .pacote_posicao.t32_sai_cfg saida_cfg = 11;
  bool has_saida_cfg() const;
  void clear_saida_cfg();
  static const int kSaidaCfgFieldNumber = 11;
  const ::pacote_posicao::t32_sai_cfg& saida_cfg() const;
  ::pacote_posicao::t32_sai_cfg* mutable_saida_cfg();
  ::pacote_posicao::t32_sai_cfg* release_saida_cfg();
  void set_allocated_saida_cfg(::pacote_posicao::t32_sai_cfg* saida_cfg);

  // optional .pacote_posicao.t32_ent_gpsi entrada_gps_info = 12;
  bool has_entrada_gps_info() const;
  void clear_entrada_gps_info();
  static const int kEntradaGpsInfoFieldNumber = 12;
  const ::pacote_posicao::t32_ent_gpsi& entrada_gps_info() const;
  ::pacote_posicao::t32_ent_gpsi* mutable_entrada_gps_info();
  ::pacote_posicao::t32_ent_gpsi* release_entrada_gps_info();
  void set_allocated_entrada_gps_info(::pacote_posicao::t32_ent_gpsi* entrada_gps_info);

  // optional int32 indice_posicao = 13;
  bool has_indice_posicao() const;
  void clear_indice_posicao();
  static const int kIndicePosicaoFieldNumber = 13;
  ::google::protobuf::int32 indice_posicao() const;
  void set_indice_posicao(::google::protobuf::int32 value);

  // optional int32 gps_altitude = 14;
  bool has_gps_altitude() const;
  void clear_gps_altitude();
  static const int kGpsAltitudeFieldNumber = 14;
  ::google::protobuf::int32 gps_altitude() const;
  void set_gps_altitude(::google::protobuf::int32 value);

  // optional .pacote_posicao.t32_inf_mot inf_motorista = 15;
  bool has_inf_motorista() const;
  void clear_inf_motorista();
  static const int kInfMotoristaFieldNumber = 15;
  const ::pacote_posicao::t32_inf_mot& inf_motorista() const;
  ::pacote_posicao::t32_inf_mot* mutable_inf_motorista();
  ::pacote_posicao::t32_inf_mot* release_inf_motorista();
  void set_allocated_inf_motorista(::pacote_posicao::t32_inf_mot* inf_motorista);

  // optional .pacote_posicao.t32_horimetro info_horimetro = 16;
  bool has_info_horimetro() const;
  void clear_info_horimetro();
  static const int kInfoHorimetroFieldNumber = 16;
  const ::pacote_posicao::t32_horimetro& info_horimetro() const;
  ::pacote_posicao::t32_horimetro* mutable_info_horimetro();
  ::pacote_posicao::t32_horimetro* release_info_horimetro();
  void set_allocated_info_horimetro(::pacote_posicao::t32_horimetro* info_horimetro);

  // optional int32 tmp_ult_val = 17;
  bool has_tmp_ult_val() const;
  void clear_tmp_ult_val();
  static const int kTmpUltValFieldNumber = 17;
  ::google::protobuf::int32 tmp_ult_val() const;
  void set_tmp_ult_val(::google::protobuf::int32 value);

  // optional int32 ad1 = 18;
  bool has_ad1() const;
  void clear_ad1();
  static const int kAd1FieldNumber = 18;
  ::google::protobuf::int32 ad1() const;
  void set_ad1(::google::protobuf::int32 value);

  // optional int32 ad2 = 19;
  bool has_ad2() const;
  void clear_ad2();
  static const int kAd2FieldNumber = 19;
  ::google::protobuf::int32 ad2() const;
  void set_ad2(::google::protobuf::int32 value);

  // optional int32 ad3 = 20;
  bool has_ad3() const;
  void clear_ad3();
  static const int kAd3FieldNumber = 20;
  ::google::protobuf::int32 ad3() const;
  void set_ad3(::google::protobuf::int32 value);

  // optional int32 ad4 = 21;
  bool has_ad4() const;
  void clear_ad4();
  static const int kAd4FieldNumber = 21;
  ::google::protobuf::int32 ad4() const;
  void set_ad4(::google::protobuf::int32 value);

  // optional int32 estado_seguranca_saidas = 22;
  bool has_estado_seguranca_saidas() const;
  void clear_estado_seguranca_saidas();
  static const int kEstadoSegurancaSaidasFieldNumber = 22;
  ::google::protobuf::int32 estado_seguranca_saidas() const;
  void set_estado_seguranca_saidas(::google::protobuf::int32 value);

  // optional int32 estado_seguranca_entradas = 23;
  bool has_estado_seguranca_entradas() const;
  void clear_estado_seguranca_entradas();
  static const int kEstadoSegurancaEntradasFieldNumber = 23;
  ::google::protobuf::int32 estado_seguranca_entradas() const;
  void set_estado_seguranca_entradas(::google::protobuf::int32 value);

  // optional int32 vcc_alim = 24;
  bool has_vcc_alim() const;
  void clear_vcc_alim();
  static const int kVccAlimFieldNumber = 24;
  ::google::protobuf::int32 vcc_alim() const;
  void set_vcc_alim(::google::protobuf::int32 value);

  // optional int32 id_area = 25;
  bool has_id_area() const;
  void clear_id_area();
  static const int kIdAreaFieldNumber = 25;
  ::google::protobuf::int32 id_area() const;
  void set_id_area(::google::protobuf::int32 value);

  // optional .pacote_posicao.t_telemetria info_telemetria = 26;
  bool has_info_telemetria() const;
  void clear_info_telemetria();
  static const int kInfoTelemetriaFieldNumber = 26;
  const ::pacote_posicao::t_telemetria& info_telemetria() const;
  ::pacote_posicao::t_telemetria* mutable_info_telemetria();
  ::pacote_posicao::t_telemetria* release_info_telemetria();
  void set_allocated_info_telemetria(::pacote_posicao::t_telemetria* info_telemetria);

  // optional int32 tipo = 27;
  bool has_tipo() const;
  void clear_tipo();
  static const int kTipoFieldNumber = 27;
  ::google::protobuf::int32 tipo() const;
  void set_tipo(::google::protobuf::int32 value);

  // optional int32 origem = 28;
  bool has_origem() const;
  void clear_origem();
  static const int kOrigemFieldNumber = 28;
  ::google::protobuf::int32 origem() const;
  void set_origem(::google::protobuf::int32 value);

  // repeated int32 ponto_ref = 29;
  int ponto_ref_size() const;
  void clear_ponto_ref();
  static const int kPontoRefFieldNumber = 29;
  ::google::protobuf::int32 ponto_ref(int index) const;
  void set_ponto_ref(int index, ::google::protobuf::int32 value);
  void add_ponto_ref(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ponto_ref() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ponto_ref();

  // repeated int32 dist_ref = 30;
  int dist_ref_size() const;
  void clear_dist_ref();
  static const int kDistRefFieldNumber = 30;
  ::google::protobuf::int32 dist_ref(int index) const;
  void set_dist_ref(int index, ::google::protobuf::int32 value);
  void add_dist_ref(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      dist_ref() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_dist_ref();

  // repeated int32 ang_ref = 31;
  int ang_ref_size() const;
  void clear_ang_ref();
  static const int kAngRefFieldNumber = 31;
  ::google::protobuf::int32 ang_ref(int index) const;
  void set_ang_ref(int index, ::google::protobuf::int32 value);
  void add_ang_ref(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      ang_ref() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_ang_ref();

  // repeated int32 rota = 32;
  int rota_size() const;
  void clear_rota();
  static const int kRotaFieldNumber = 32;
  ::google::protobuf::int32 rota(int index) const;
  void set_rota(int index, ::google::protobuf::int32 value);
  void add_rota(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      rota() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_rota();

  // repeated int32 operacao = 33;
  int operacao_size() const;
  void clear_operacao();
  static const int kOperacaoFieldNumber = 33;
  ::google::protobuf::int32 operacao(int index) const;
  void set_operacao(int index, ::google::protobuf::int32 value);
  void add_operacao(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      operacao() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_operacao();

  // optional .pacote_posicao.equip_flags eventoflag = 34;
  bool has_eventoflag() const;
  void clear_eventoflag();
  static const int kEventoflagFieldNumber = 34;
  const ::pacote_posicao::equip_flags& eventoflag() const;
  ::pacote_posicao::equip_flags* mutable_eventoflag();
  ::pacote_posicao::equip_flags* release_eventoflag();
  void set_allocated_eventoflag(::pacote_posicao::equip_flags* eventoflag);

  // @@protoc_insertion_point(class_scope:pacote_posicao.equip_posicao)
 private:
  inline void set_has_datahora();
  inline void clear_has_datahora();
  inline void set_has_datachegada();
  inline void clear_has_datachegada();
  inline void set_has_lat2();
  inline void clear_has_lat2();
  inline void set_has_long2();
  inline void clear_has_long2();
  inline void set_has_odo_vel_gps();
  inline void clear_has_odo_vel_gps();
  inline void set_has_id_ponto();
  inline void clear_has_id_ponto();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_csq_id_rota();
  inline void clear_has_csq_id_rota();
  inline void set_has_saida_cfg();
  inline void clear_has_saida_cfg();
  inline void set_has_entrada_gps_info();
  inline void clear_has_entrada_gps_info();
  inline void set_has_indice_posicao();
  inline void clear_has_indice_posicao();
  inline void set_has_gps_altitude();
  inline void clear_has_gps_altitude();
  inline void set_has_inf_motorista();
  inline void clear_has_inf_motorista();
  inline void set_has_info_horimetro();
  inline void clear_has_info_horimetro();
  inline void set_has_tmp_ult_val();
  inline void clear_has_tmp_ult_val();
  inline void set_has_ad1();
  inline void clear_has_ad1();
  inline void set_has_ad2();
  inline void clear_has_ad2();
  inline void set_has_ad3();
  inline void clear_has_ad3();
  inline void set_has_ad4();
  inline void clear_has_ad4();
  inline void set_has_estado_seguranca_saidas();
  inline void clear_has_estado_seguranca_saidas();
  inline void set_has_estado_seguranca_entradas();
  inline void clear_has_estado_seguranca_entradas();
  inline void set_has_vcc_alim();
  inline void clear_has_vcc_alim();
  inline void set_has_id_area();
  inline void clear_has_id_area();
  inline void set_has_info_telemetria();
  inline void clear_has_info_telemetria();
  inline void set_has_tipo();
  inline void clear_has_tipo();
  inline void set_has_origem();
  inline void clear_has_origem();
  inline void set_has_eventoflag();
  inline void clear_has_eventoflag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::int32 datahora_;
  ::google::protobuf::int32 datachegada_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > entrada_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > saida_;
  double lat2_;
  double long2_;
  ::pacote_posicao::t32_odo_vel* odo_vel_gps_;
  ::pacote_posicao::t32_flags* flags_;
  ::pacote_posicao::t32_csq_rot* csq_id_rota_;
  ::google::protobuf::int32 id_ponto_;
  ::google::protobuf::int32 indice_posicao_;
  ::pacote_posicao::t32_sai_cfg* saida_cfg_;
  ::pacote_posicao::t32_ent_gpsi* entrada_gps_info_;
  ::pacote_posicao::t32_inf_mot* inf_motorista_;
  ::google::protobuf::int32 gps_altitude_;
  ::google::protobuf::int32 tmp_ult_val_;
  ::pacote_posicao::t32_horimetro* info_horimetro_;
  ::google::protobuf::int32 ad1_;
  ::google::protobuf::int32 ad2_;
  ::google::protobuf::int32 ad3_;
  ::google::protobuf::int32 ad4_;
  ::google::protobuf::int32 estado_seguranca_saidas_;
  ::google::protobuf::int32 estado_seguranca_entradas_;
  ::google::protobuf::int32 vcc_alim_;
  ::google::protobuf::int32 id_area_;
  ::pacote_posicao::t_telemetria* info_telemetria_;
  ::google::protobuf::int32 tipo_;
  ::google::protobuf::int32 origem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ponto_ref_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > dist_ref_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > ang_ref_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > rota_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > operacao_;
  ::pacote_posicao::equip_flags* eventoflag_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static equip_posicao* default_instance_;
};
// -------------------------------------------------------------------

class t32_flags : public ::google::protobuf::Message {
 public:
  t32_flags();
  virtual ~t32_flags();

  t32_flags(const t32_flags& from);

  inline t32_flags& operator=(const t32_flags& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t32_flags& default_instance();

  void Swap(t32_flags* other);

  // implements Message ----------------------------------------------

  inline t32_flags* New() const { return New(NULL); }

  t32_flags* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t32_flags& from);
  void MergeFrom(const t32_flags& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t32_flags* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 alt_setup = 1;
  bool has_alt_setup() const;
  void clear_alt_setup();
  static const int kAltSetupFieldNumber = 1;
  ::google::protobuf::int32 alt_setup() const;
  void set_alt_setup(::google::protobuf::int32 value);

  // optional int32 pos_memoria = 2;
  bool has_pos_memoria() const;
  void clear_pos_memoria();
  static const int kPosMemoriaFieldNumber = 2;
  ::google::protobuf::int32 pos_memoria() const;
  void set_pos_memoria(::google::protobuf::int32 value);

  // optional int32 gps_valido = 3;
  bool has_gps_valido() const;
  void clear_gps_valido();
  static const int kGpsValidoFieldNumber = 3;
  ::google::protobuf::int32 gps_valido() const;
  void set_gps_valido(::google::protobuf::int32 value);

  // optional int32 gps_falha_ant = 4;
  bool has_gps_falha_ant() const;
  void clear_gps_falha_ant();
  static const int kGpsFalhaAntFieldNumber = 4;
  ::google::protobuf::int32 gps_falha_ant() const;
  void set_gps_falha_ant(::google::protobuf::int32 value);

  // optional int32 gps_dr = 5;
  bool has_gps_dr() const;
  void clear_gps_dr();
  static const int kGpsDrFieldNumber = 5;
  ::google::protobuf::int32 gps_dr() const;
  void set_gps_dr(::google::protobuf::int32 value);

  // optional int32 vel_excedida = 6;
  bool has_vel_excedida() const;
  void clear_vel_excedida();
  static const int kVelExcedidaFieldNumber = 6;
  ::google::protobuf::int32 vel_excedida() const;
  void set_vel_excedida(::google::protobuf::int32 value);

  // optional int32 exc_tmp_parado = 7;
  bool has_exc_tmp_parado() const;
  void clear_exc_tmp_parado();
  static const int kExcTmpParadoFieldNumber = 7;
  ::google::protobuf::int32 exc_tmp_parado() const;
  void set_exc_tmp_parado(::google::protobuf::int32 value);

  // optional int32 baixo_consumo = 8;
  bool has_baixo_consumo() const;
  void clear_baixo_consumo();
  static const int kBaixoConsumoFieldNumber = 8;
  ::google::protobuf::int32 baixo_consumo() const;
  void set_baixo_consumo(::google::protobuf::int32 value);

  // optional int32 cfc = 9;
  bool has_cfc() const;
  void clear_cfc();
  static const int kCfcFieldNumber = 9;
  ::google::protobuf::int32 cfc() const;
  void set_cfc(::google::protobuf::int32 value);

  // optional int32 tipo_login = 10;
  bool has_tipo_login() const;
  void clear_tipo_login();
  static const int kTipoLoginFieldNumber = 10;
  ::google::protobuf::int32 tipo_login() const;
  void set_tipo_login(::google::protobuf::int32 value);

  // optional int32 chamada_voz = 11;
  bool has_chamada_voz() const;
  void clear_chamada_voz();
  static const int kChamadaVozFieldNumber = 11;
  ::google::protobuf::int32 chamada_voz() const;
  void set_chamada_voz(::google::protobuf::int32 value);

  // optional int32 satelital = 12;
  bool has_satelital() const;
  void clear_satelital();
  static const int kSatelitalFieldNumber = 12;
  ::google::protobuf::int32 satelital() const;
  void set_satelital(::google::protobuf::int32 value);

  // optional int32 operacao = 13;
  bool has_operacao() const;
  void clear_operacao();
  static const int kOperacaoFieldNumber = 13;
  ::google::protobuf::int32 operacao() const;
  void set_operacao(::google::protobuf::int32 value);

  // optional int32 forcar_gprs = 14;
  bool has_forcar_gprs() const;
  void clear_forcar_gprs();
  static const int kForcarGprsFieldNumber = 14;
  ::google::protobuf::int32 forcar_gprs() const;
  void set_forcar_gprs(::google::protobuf::int32 value);

  // optional int32 sleep = 15;
  bool has_sleep() const;
  void clear_sleep();
  static const int kSleepFieldNumber = 15;
  ::google::protobuf::int32 sleep() const;
  void set_sleep(::google::protobuf::int32 value);

  // optional int32 urb_rodov = 16;
  bool has_urb_rodov() const;
  void clear_urb_rodov();
  static const int kUrbRodovFieldNumber = 16;
  ::google::protobuf::int32 urb_rodov() const;
  void set_urb_rodov(::google::protobuf::int32 value);

  // optional int32 acoes_emb_cliente = 17;
  bool has_acoes_emb_cliente() const;
  void clear_acoes_emb_cliente();
  static const int kAcoesEmbClienteFieldNumber = 17;
  ::google::protobuf::int32 acoes_emb_cliente() const;
  void set_acoes_emb_cliente(::google::protobuf::int32 value);

  // optional int32 analise_ponto = 18;
  bool has_analise_ponto() const;
  void clear_analise_ponto();
  static const int kAnalisePontoFieldNumber = 18;
  ::google::protobuf::int32 analise_ponto() const;
  void set_analise_ponto(::google::protobuf::int32 value);

  // optional int32 analise_area = 19;
  bool has_analise_area() const;
  void clear_analise_area();
  static const int kAnaliseAreaFieldNumber = 19;
  ::google::protobuf::int32 analise_area() const;
  void set_analise_area(::google::protobuf::int32 value);

  // optional int32 analise_cerca = 20;
  bool has_analise_cerca() const;
  void clear_analise_cerca();
  static const int kAnaliseCercaFieldNumber = 20;
  ::google::protobuf::int32 analise_cerca() const;
  void set_analise_cerca(::google::protobuf::int32 value);

  // optional int32 alarme = 21;
  bool has_alarme() const;
  void clear_alarme();
  static const int kAlarmeFieldNumber = 21;
  ::google::protobuf::int32 alarme() const;
  void set_alarme(::google::protobuf::int32 value);

  // optional int32 acao_login = 22;
  bool has_acao_login() const;
  void clear_acao_login();
  static const int kAcaoLoginFieldNumber = 22;
  ::google::protobuf::int32 acao_login() const;
  void set_acao_login(::google::protobuf::int32 value);

  // optional int32 ancora = 23;
  bool has_ancora() const;
  void clear_ancora();
  static const int kAncoraFieldNumber = 23;
  ::google::protobuf::int32 ancora() const;
  void set_ancora(::google::protobuf::int32 value);

  // optional int32 ad2_filter_enable = 24;
  bool has_ad2_filter_enable() const;
  void clear_ad2_filter_enable();
  static const int kAd2FilterEnableFieldNumber = 24;
  ::google::protobuf::int32 ad2_filter_enable() const;
  void set_ad2_filter_enable(::google::protobuf::int32 value);

  // optional int32 ad3_filter_enable = 25;
  bool has_ad3_filter_enable() const;
  void clear_ad3_filter_enable();
  static const int kAd3FilterEnableFieldNumber = 25;
  ::google::protobuf::int32 ad3_filter_enable() const;
  void set_ad3_filter_enable(::google::protobuf::int32 value);

  // optional int32 ad4_filter_enable = 26;
  bool has_ad4_filter_enable() const;
  void clear_ad4_filter_enable();
  static const int kAd4FilterEnableFieldNumber = 26;
  ::google::protobuf::int32 ad4_filter_enable() const;
  void set_ad4_filter_enable(::google::protobuf::int32 value);

  // optional int32 firmware_stored = 27;
  bool has_firmware_stored() const;
  void clear_firmware_stored();
  static const int kFirmwareStoredFieldNumber = 27;
  ::google::protobuf::int32 firmware_stored() const;
  void set_firmware_stored(::google::protobuf::int32 value);

  // optional int32 jamming = 28;
  bool has_jamming() const;
  void clear_jamming();
  static const int kJammingFieldNumber = 28;
  ::google::protobuf::int32 jamming() const;
  void set_jamming(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t32_flags)
 private:
  inline void set_has_alt_setup();
  inline void clear_has_alt_setup();
  inline void set_has_pos_memoria();
  inline void clear_has_pos_memoria();
  inline void set_has_gps_valido();
  inline void clear_has_gps_valido();
  inline void set_has_gps_falha_ant();
  inline void clear_has_gps_falha_ant();
  inline void set_has_gps_dr();
  inline void clear_has_gps_dr();
  inline void set_has_vel_excedida();
  inline void clear_has_vel_excedida();
  inline void set_has_exc_tmp_parado();
  inline void clear_has_exc_tmp_parado();
  inline void set_has_baixo_consumo();
  inline void clear_has_baixo_consumo();
  inline void set_has_cfc();
  inline void clear_has_cfc();
  inline void set_has_tipo_login();
  inline void clear_has_tipo_login();
  inline void set_has_chamada_voz();
  inline void clear_has_chamada_voz();
  inline void set_has_satelital();
  inline void clear_has_satelital();
  inline void set_has_operacao();
  inline void clear_has_operacao();
  inline void set_has_forcar_gprs();
  inline void clear_has_forcar_gprs();
  inline void set_has_sleep();
  inline void clear_has_sleep();
  inline void set_has_urb_rodov();
  inline void clear_has_urb_rodov();
  inline void set_has_acoes_emb_cliente();
  inline void clear_has_acoes_emb_cliente();
  inline void set_has_analise_ponto();
  inline void clear_has_analise_ponto();
  inline void set_has_analise_area();
  inline void clear_has_analise_area();
  inline void set_has_analise_cerca();
  inline void clear_has_analise_cerca();
  inline void set_has_alarme();
  inline void clear_has_alarme();
  inline void set_has_acao_login();
  inline void clear_has_acao_login();
  inline void set_has_ancora();
  inline void clear_has_ancora();
  inline void set_has_ad2_filter_enable();
  inline void clear_has_ad2_filter_enable();
  inline void set_has_ad3_filter_enable();
  inline void clear_has_ad3_filter_enable();
  inline void set_has_ad4_filter_enable();
  inline void clear_has_ad4_filter_enable();
  inline void set_has_firmware_stored();
  inline void clear_has_firmware_stored();
  inline void set_has_jamming();
  inline void clear_has_jamming();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 alt_setup_;
  ::google::protobuf::int32 pos_memoria_;
  ::google::protobuf::int32 gps_valido_;
  ::google::protobuf::int32 gps_falha_ant_;
  ::google::protobuf::int32 gps_dr_;
  ::google::protobuf::int32 vel_excedida_;
  ::google::protobuf::int32 exc_tmp_parado_;
  ::google::protobuf::int32 baixo_consumo_;
  ::google::protobuf::int32 cfc_;
  ::google::protobuf::int32 tipo_login_;
  ::google::protobuf::int32 chamada_voz_;
  ::google::protobuf::int32 satelital_;
  ::google::protobuf::int32 operacao_;
  ::google::protobuf::int32 forcar_gprs_;
  ::google::protobuf::int32 sleep_;
  ::google::protobuf::int32 urb_rodov_;
  ::google::protobuf::int32 acoes_emb_cliente_;
  ::google::protobuf::int32 analise_ponto_;
  ::google::protobuf::int32 analise_area_;
  ::google::protobuf::int32 analise_cerca_;
  ::google::protobuf::int32 alarme_;
  ::google::protobuf::int32 acao_login_;
  ::google::protobuf::int32 ancora_;
  ::google::protobuf::int32 ad2_filter_enable_;
  ::google::protobuf::int32 ad3_filter_enable_;
  ::google::protobuf::int32 ad4_filter_enable_;
  ::google::protobuf::int32 firmware_stored_;
  ::google::protobuf::int32 jamming_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t32_flags* default_instance_;
};
// -------------------------------------------------------------------

class t32_csq_rot : public ::google::protobuf::Message {
 public:
  t32_csq_rot();
  virtual ~t32_csq_rot();

  t32_csq_rot(const t32_csq_rot& from);

  inline t32_csq_rot& operator=(const t32_csq_rot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t32_csq_rot& default_instance();

  void Swap(t32_csq_rot* other);

  // implements Message ----------------------------------------------

  inline t32_csq_rot* New() const { return New(NULL); }

  t32_csq_rot* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t32_csq_rot& from);
  void MergeFrom(const t32_csq_rot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t32_csq_rot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 csq = 1;
  bool has_csq() const;
  void clear_csq();
  static const int kCsqFieldNumber = 1;
  ::google::protobuf::int32 csq() const;
  void set_csq(::google::protobuf::int32 value);

  // optional int32 id_rota = 2;
  bool has_id_rota() const;
  void clear_id_rota();
  static const int kIdRotaFieldNumber = 2;
  ::google::protobuf::int32 id_rota() const;
  void set_id_rota(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t32_csq_rot)
 private:
  inline void set_has_csq();
  inline void clear_has_csq();
  inline void set_has_id_rota();
  inline void clear_has_id_rota();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 csq_;
  ::google::protobuf::int32 id_rota_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t32_csq_rot* default_instance_;
};
// -------------------------------------------------------------------

class t32_sai_cfg : public ::google::protobuf::Message {
 public:
  t32_sai_cfg();
  virtual ~t32_sai_cfg();

  t32_sai_cfg(const t32_sai_cfg& from);

  inline t32_sai_cfg& operator=(const t32_sai_cfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t32_sai_cfg& default_instance();

  void Swap(t32_sai_cfg* other);

  // implements Message ----------------------------------------------

  inline t32_sai_cfg* New() const { return New(NULL); }

  t32_sai_cfg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t32_sai_cfg& from);
  void MergeFrom(const t32_sai_cfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t32_sai_cfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 saidas = 1;
  bool has_saidas() const;
  void clear_saidas();
  static const int kSaidasFieldNumber = 1;
  ::google::protobuf::int32 saidas() const;
  void set_saidas(::google::protobuf::int32 value);

  // optional int32 cargas = 2;
  bool has_cargas() const;
  void clear_cargas();
  static const int kCargasFieldNumber = 2;
  ::google::protobuf::int32 cargas() const;
  void set_cargas(::google::protobuf::int32 value);

  // optional int32 curtos = 3;
  bool has_curtos() const;
  void clear_curtos();
  static const int kCurtosFieldNumber = 3;
  ::google::protobuf::int32 curtos() const;
  void set_curtos(::google::protobuf::int32 value);

  // optional int32 tempos = 4;
  bool has_tempos() const;
  void clear_tempos();
  static const int kTemposFieldNumber = 4;
  ::google::protobuf::int32 tempos() const;
  void set_tempos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t32_sai_cfg)
 private:
  inline void set_has_saidas();
  inline void clear_has_saidas();
  inline void set_has_cargas();
  inline void clear_has_cargas();
  inline void set_has_curtos();
  inline void clear_has_curtos();
  inline void set_has_tempos();
  inline void clear_has_tempos();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 saidas_;
  ::google::protobuf::int32 cargas_;
  ::google::protobuf::int32 curtos_;
  ::google::protobuf::int32 tempos_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t32_sai_cfg* default_instance_;
};
// -------------------------------------------------------------------

class t32_odo_vel : public ::google::protobuf::Message {
 public:
  t32_odo_vel();
  virtual ~t32_odo_vel();

  t32_odo_vel(const t32_odo_vel& from);

  inline t32_odo_vel& operator=(const t32_odo_vel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t32_odo_vel& default_instance();

  void Swap(t32_odo_vel* other);

  // implements Message ----------------------------------------------

  inline t32_odo_vel* New() const { return New(NULL); }

  t32_odo_vel* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t32_odo_vel& from);
  void MergeFrom(const t32_odo_vel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t32_odo_vel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 odometro = 1;
  bool has_odometro() const;
  void clear_odometro();
  static const int kOdometroFieldNumber = 1;
  ::google::protobuf::int32 odometro() const;
  void set_odometro(::google::protobuf::int32 value);

  // optional int32 velocidade = 2;
  bool has_velocidade() const;
  void clear_velocidade();
  static const int kVelocidadeFieldNumber = 2;
  ::google::protobuf::int32 velocidade() const;
  void set_velocidade(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t32_odo_vel)
 private:
  inline void set_has_odometro();
  inline void clear_has_odometro();
  inline void set_has_velocidade();
  inline void clear_has_velocidade();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 odometro_;
  ::google::protobuf::int32 velocidade_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t32_odo_vel* default_instance_;
};
// -------------------------------------------------------------------

class t32_ent_gpsi : public ::google::protobuf::Message {
 public:
  t32_ent_gpsi();
  virtual ~t32_ent_gpsi();

  t32_ent_gpsi(const t32_ent_gpsi& from);

  inline t32_ent_gpsi& operator=(const t32_ent_gpsi& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t32_ent_gpsi& default_instance();

  void Swap(t32_ent_gpsi* other);

  // implements Message ----------------------------------------------

  inline t32_ent_gpsi* New() const { return New(NULL); }

  t32_ent_gpsi* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t32_ent_gpsi& from);
  void MergeFrom(const t32_ent_gpsi& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t32_ent_gpsi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ent01ad1 = 1;
  bool has_ent01ad1() const;
  void clear_ent01ad1();
  static const int kEnt01Ad1FieldNumber = 1;
  ::google::protobuf::int32 ent01ad1() const;
  void set_ent01ad1(::google::protobuf::int32 value);

  // optional int32 ent02ad2 = 2;
  bool has_ent02ad2() const;
  void clear_ent02ad2();
  static const int kEnt02Ad2FieldNumber = 2;
  ::google::protobuf::int32 ent02ad2() const;
  void set_ent02ad2(::google::protobuf::int32 value);

  // optional int32 ent03ad3 = 3;
  bool has_ent03ad3() const;
  void clear_ent03ad3();
  static const int kEnt03Ad3FieldNumber = 3;
  ::google::protobuf::int32 ent03ad3() const;
  void set_ent03ad3(::google::protobuf::int32 value);

  // optional int32 ent04ad4 = 4;
  bool has_ent04ad4() const;
  void clear_ent04ad4();
  static const int kEnt04Ad4FieldNumber = 4;
  ::google::protobuf::int32 ent04ad4() const;
  void set_ent04ad4(::google::protobuf::int32 value);

  // optional int32 ent05gnd1 = 5;
  bool has_ent05gnd1() const;
  void clear_ent05gnd1();
  static const int kEnt05Gnd1FieldNumber = 5;
  ::google::protobuf::int32 ent05gnd1() const;
  void set_ent05gnd1(::google::protobuf::int32 value);

  // optional int32 ent06gnd2 = 6;
  bool has_ent06gnd2() const;
  void clear_ent06gnd2();
  static const int kEnt06Gnd2FieldNumber = 6;
  ::google::protobuf::int32 ent06gnd2() const;
  void set_ent06gnd2(::google::protobuf::int32 value);

  // optional int32 ent07gnd3 = 7;
  bool has_ent07gnd3() const;
  void clear_ent07gnd3();
  static const int kEnt07Gnd3FieldNumber = 7;
  ::google::protobuf::int32 ent07gnd3() const;
  void set_ent07gnd3(::google::protobuf::int32 value);

  // optional int32 ent08vcc1 = 8;
  bool has_ent08vcc1() const;
  void clear_ent08vcc1();
  static const int kEnt08Vcc1FieldNumber = 8;
  ::google::protobuf::int32 ent08vcc1() const;
  void set_ent08vcc1(::google::protobuf::int32 value);

  // optional int32 ent09pan = 9;
  bool has_ent09pan() const;
  void clear_ent09pan();
  static const int kEnt09PanFieldNumber = 9;
  ::google::protobuf::int32 ent09pan() const;
  void set_ent09pan(::google::protobuf::int32 value);

  // optional int32 gps_reserv01 = 10;
  bool has_gps_reserv01() const;
  void clear_gps_reserv01();
  static const int kGpsReserv01FieldNumber = 10;
  ::google::protobuf::int32 gps_reserv01() const;
  void set_gps_reserv01(::google::protobuf::int32 value);

  // optional int32 gps_reserv02 = 11;
  bool has_gps_reserv02() const;
  void clear_gps_reserv02();
  static const int kGpsReserv02FieldNumber = 11;
  ::google::protobuf::int32 gps_reserv02() const;
  void set_gps_reserv02(::google::protobuf::int32 value);

  // optional int32 gps_reserv03 = 12;
  bool has_gps_reserv03() const;
  void clear_gps_reserv03();
  static const int kGpsReserv03FieldNumber = 12;
  ::google::protobuf::int32 gps_reserv03() const;
  void set_gps_reserv03(::google::protobuf::int32 value);

  // optional int32 gps_reserv04 = 13;
  bool has_gps_reserv04() const;
  void clear_gps_reserv04();
  static const int kGpsReserv04FieldNumber = 13;
  ::google::protobuf::int32 gps_reserv04() const;
  void set_gps_reserv04(::google::protobuf::int32 value);

  // optional int32 gps_reserv05 = 14;
  bool has_gps_reserv05() const;
  void clear_gps_reserv05();
  static const int kGpsReserv05FieldNumber = 14;
  ::google::protobuf::int32 gps_reserv05() const;
  void set_gps_reserv05(::google::protobuf::int32 value);

  // optional int32 gps_reserv06 = 15;
  bool has_gps_reserv06() const;
  void clear_gps_reserv06();
  static const int kGpsReserv06FieldNumber = 15;
  ::google::protobuf::int32 gps_reserv06() const;
  void set_gps_reserv06(::google::protobuf::int32 value);

  // optional int32 gps_reserv07 = 16;
  bool has_gps_reserv07() const;
  void clear_gps_reserv07();
  static const int kGpsReserv07FieldNumber = 16;
  ::google::protobuf::int32 gps_reserv07() const;
  void set_gps_reserv07(::google::protobuf::int32 value);

  // optional int32 dir = 17;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 17;
  ::google::protobuf::int32 dir() const;
  void set_dir(::google::protobuf::int32 value);

  // optional int32 svn = 18;
  bool has_svn() const;
  void clear_svn();
  static const int kSvnFieldNumber = 18;
  ::google::protobuf::int32 svn() const;
  void set_svn(::google::protobuf::int32 value);

  // optional int32 hdop = 19;
  bool has_hdop() const;
  void clear_hdop();
  static const int kHdopFieldNumber = 19;
  ::google::protobuf::int32 hdop() const;
  void set_hdop(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t32_ent_gpsi)
 private:
  inline void set_has_ent01ad1();
  inline void clear_has_ent01ad1();
  inline void set_has_ent02ad2();
  inline void clear_has_ent02ad2();
  inline void set_has_ent03ad3();
  inline void clear_has_ent03ad3();
  inline void set_has_ent04ad4();
  inline void clear_has_ent04ad4();
  inline void set_has_ent05gnd1();
  inline void clear_has_ent05gnd1();
  inline void set_has_ent06gnd2();
  inline void clear_has_ent06gnd2();
  inline void set_has_ent07gnd3();
  inline void clear_has_ent07gnd3();
  inline void set_has_ent08vcc1();
  inline void clear_has_ent08vcc1();
  inline void set_has_ent09pan();
  inline void clear_has_ent09pan();
  inline void set_has_gps_reserv01();
  inline void clear_has_gps_reserv01();
  inline void set_has_gps_reserv02();
  inline void clear_has_gps_reserv02();
  inline void set_has_gps_reserv03();
  inline void clear_has_gps_reserv03();
  inline void set_has_gps_reserv04();
  inline void clear_has_gps_reserv04();
  inline void set_has_gps_reserv05();
  inline void clear_has_gps_reserv05();
  inline void set_has_gps_reserv06();
  inline void clear_has_gps_reserv06();
  inline void set_has_gps_reserv07();
  inline void clear_has_gps_reserv07();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_svn();
  inline void clear_has_svn();
  inline void set_has_hdop();
  inline void clear_has_hdop();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ent01ad1_;
  ::google::protobuf::int32 ent02ad2_;
  ::google::protobuf::int32 ent03ad3_;
  ::google::protobuf::int32 ent04ad4_;
  ::google::protobuf::int32 ent05gnd1_;
  ::google::protobuf::int32 ent06gnd2_;
  ::google::protobuf::int32 ent07gnd3_;
  ::google::protobuf::int32 ent08vcc1_;
  ::google::protobuf::int32 ent09pan_;
  ::google::protobuf::int32 gps_reserv01_;
  ::google::protobuf::int32 gps_reserv02_;
  ::google::protobuf::int32 gps_reserv03_;
  ::google::protobuf::int32 gps_reserv04_;
  ::google::protobuf::int32 gps_reserv05_;
  ::google::protobuf::int32 gps_reserv06_;
  ::google::protobuf::int32 gps_reserv07_;
  ::google::protobuf::int32 dir_;
  ::google::protobuf::int32 svn_;
  ::google::protobuf::int32 hdop_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t32_ent_gpsi* default_instance_;
};
// -------------------------------------------------------------------

class t32_inf_mot : public ::google::protobuf::Message {
 public:
  t32_inf_mot();
  virtual ~t32_inf_mot();

  t32_inf_mot(const t32_inf_mot& from);

  inline t32_inf_mot& operator=(const t32_inf_mot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t32_inf_mot& default_instance();

  void Swap(t32_inf_mot* other);

  // implements Message ----------------------------------------------

  inline t32_inf_mot* New() const { return New(NULL); }

  t32_inf_mot* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t32_inf_mot& from);
  void MergeFrom(const t32_inf_mot& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t32_inf_mot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id_motorista = 1;
  bool has_id_motorista() const;
  void clear_id_motorista();
  static const int kIdMotoristaFieldNumber = 1;
  ::google::protobuf::int32 id_motorista() const;
  void set_id_motorista(::google::protobuf::int32 value);

  // optional int32 est_bat_int = 2;
  bool has_est_bat_int() const;
  void clear_est_bat_int();
  static const int kEstBatIntFieldNumber = 2;
  ::google::protobuf::int32 est_bat_int() const;
  void set_est_bat_int(::google::protobuf::int32 value);

  // optional int32 est_bat_ext = 3;
  bool has_est_bat_ext() const;
  void clear_est_bat_ext();
  static const int kEstBatExtFieldNumber = 3;
  ::google::protobuf::int32 est_bat_ext() const;
  void set_est_bat_ext(::google::protobuf::int32 value);

  // optional int32 est_alim = 4;
  bool has_est_alim() const;
  void clear_est_alim();
  static const int kEstAlimFieldNumber = 4;
  ::google::protobuf::int32 est_alim() const;
  void set_est_alim(::google::protobuf::int32 value);

  // optional int32 ad1range = 5;
  bool has_ad1range() const;
  void clear_ad1range();
  static const int kAd1RangeFieldNumber = 5;
  ::google::protobuf::int32 ad1range() const;
  void set_ad1range(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t32_inf_mot)
 private:
  inline void set_has_id_motorista();
  inline void clear_has_id_motorista();
  inline void set_has_est_bat_int();
  inline void clear_has_est_bat_int();
  inline void set_has_est_bat_ext();
  inline void clear_has_est_bat_ext();
  inline void set_has_est_alim();
  inline void clear_has_est_alim();
  inline void set_has_ad1range();
  inline void clear_has_ad1range();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_motorista_;
  ::google::protobuf::int32 est_bat_int_;
  ::google::protobuf::int32 est_bat_ext_;
  ::google::protobuf::int32 est_alim_;
  ::google::protobuf::int32 ad1range_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t32_inf_mot* default_instance_;
};
// -------------------------------------------------------------------

class t32_horimetro : public ::google::protobuf::Message {
 public:
  t32_horimetro();
  virtual ~t32_horimetro();

  t32_horimetro(const t32_horimetro& from);

  inline t32_horimetro& operator=(const t32_horimetro& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t32_horimetro& default_instance();

  void Swap(t32_horimetro* other);

  // implements Message ----------------------------------------------

  inline t32_horimetro* New() const { return New(NULL); }

  t32_horimetro* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t32_horimetro& from);
  void MergeFrom(const t32_horimetro& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t32_horimetro* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 horimetro = 1;
  bool has_horimetro() const;
  void clear_horimetro();
  static const int kHorimetroFieldNumber = 1;
  ::google::protobuf::int32 horimetro() const;
  void set_horimetro(::google::protobuf::int32 value);

  // optional int32 pre_td = 2;
  bool has_pre_td() const;
  void clear_pre_td();
  static const int kPreTdFieldNumber = 2;
  ::google::protobuf::int32 pre_td() const;
  void set_pre_td(::google::protobuf::int32 value);

  // optional int32 pre_img = 3;
  bool has_pre_img() const;
  void clear_pre_img();
  static const int kPreImgFieldNumber = 3;
  ::google::protobuf::int32 pre_img() const;
  void set_pre_img(::google::protobuf::int32 value);

  // optional int32 pre_ev = 4;
  bool has_pre_ev() const;
  void clear_pre_ev();
  static const int kPreEvFieldNumber = 4;
  ::google::protobuf::int32 pre_ev() const;
  void set_pre_ev(::google::protobuf::int32 value);

  // optional int32 pre_telem = 5;
  bool has_pre_telem() const;
  void clear_pre_telem();
  static const int kPreTelemFieldNumber = 5;
  ::google::protobuf::int32 pre_telem() const;
  void set_pre_telem(::google::protobuf::int32 value);

  // optional int32 pre_delta_tm = 6;
  bool has_pre_delta_tm() const;
  void clear_pre_delta_tm();
  static const int kPreDeltaTmFieldNumber = 6;
  ::google::protobuf::int32 pre_delta_tm() const;
  void set_pre_delta_tm(::google::protobuf::int32 value);

  // optional int32 pre_ev_tm = 7;
  bool has_pre_ev_tm() const;
  void clear_pre_ev_tm();
  static const int kPreEvTmFieldNumber = 7;
  ::google::protobuf::int32 pre_ev_tm() const;
  void set_pre_ev_tm(::google::protobuf::int32 value);

  // optional int32 hor_reserv03 = 8;
  bool has_hor_reserv03() const;
  void clear_hor_reserv03();
  static const int kHorReserv03FieldNumber = 8;
  ::google::protobuf::int32 hor_reserv03() const;
  void set_hor_reserv03(::google::protobuf::int32 value);

  // optional int32 hor_reserv04 = 9;
  bool has_hor_reserv04() const;
  void clear_hor_reserv04();
  static const int kHorReserv04FieldNumber = 9;
  ::google::protobuf::int32 hor_reserv04() const;
  void set_hor_reserv04(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t32_horimetro)
 private:
  inline void set_has_horimetro();
  inline void clear_has_horimetro();
  inline void set_has_pre_td();
  inline void clear_has_pre_td();
  inline void set_has_pre_img();
  inline void clear_has_pre_img();
  inline void set_has_pre_ev();
  inline void clear_has_pre_ev();
  inline void set_has_pre_telem();
  inline void clear_has_pre_telem();
  inline void set_has_pre_delta_tm();
  inline void clear_has_pre_delta_tm();
  inline void set_has_pre_ev_tm();
  inline void clear_has_pre_ev_tm();
  inline void set_has_hor_reserv03();
  inline void clear_has_hor_reserv03();
  inline void set_has_hor_reserv04();
  inline void clear_has_hor_reserv04();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 horimetro_;
  ::google::protobuf::int32 pre_td_;
  ::google::protobuf::int32 pre_img_;
  ::google::protobuf::int32 pre_ev_;
  ::google::protobuf::int32 pre_telem_;
  ::google::protobuf::int32 pre_delta_tm_;
  ::google::protobuf::int32 pre_ev_tm_;
  ::google::protobuf::int32 hor_reserv03_;
  ::google::protobuf::int32 hor_reserv04_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t32_horimetro* default_instance_;
};
// -------------------------------------------------------------------

class t_telemetria : public ::google::protobuf::Message {
 public:
  t_telemetria();
  virtual ~t_telemetria();

  t_telemetria(const t_telemetria& from);

  inline t_telemetria& operator=(const t_telemetria& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t_telemetria& default_instance();

  void Swap(t_telemetria* other);

  // implements Message ----------------------------------------------

  inline t_telemetria* New() const { return New(NULL); }

  t_telemetria* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t_telemetria& from);
  void MergeFrom(const t_telemetria& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t_telemetria* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 versao = 1;
  bool has_versao() const;
  void clear_versao();
  static const int kVersaoFieldNumber = 1;
  ::google::protobuf::int32 versao() const;
  void set_versao(::google::protobuf::int32 value);

  // optional int32 temp_motor = 2;
  bool has_temp_motor() const;
  void clear_temp_motor();
  static const int kTempMotorFieldNumber = 2;
  ::google::protobuf::int32 temp_motor() const;
  void set_temp_motor(::google::protobuf::int32 value);

  // optional int32 nivel_combustivel = 3;
  bool has_nivel_combustivel() const;
  void clear_nivel_combustivel();
  static const int kNivelCombustivelFieldNumber = 3;
  ::google::protobuf::int32 nivel_combustivel() const;
  void set_nivel_combustivel(::google::protobuf::int32 value);

  // optional int32 num_sensores = 4;
  bool has_num_sensores() const;
  void clear_num_sensores();
  static const int kNumSensoresFieldNumber = 4;
  ::google::protobuf::int32 num_sensores() const;
  void set_num_sensores(::google::protobuf::int32 value);

  // optional int32 ts_motor_giro = 5;
  bool has_ts_motor_giro() const;
  void clear_ts_motor_giro();
  static const int kTsMotorGiroFieldNumber = 5;
  ::google::protobuf::int32 ts_motor_giro() const;
  void set_ts_motor_giro(::google::protobuf::int32 value);

  // optional int32 ts_fx_azul = 6;
  bool has_ts_fx_azul() const;
  void clear_ts_fx_azul();
  static const int kTsFxAzulFieldNumber = 6;
  ::google::protobuf::int32 ts_fx_azul() const;
  void set_ts_fx_azul(::google::protobuf::int32 value);

  // optional int32 ts_fx_amare = 7;
  bool has_ts_fx_amare() const;
  void clear_ts_fx_amare();
  static const int kTsFxAmareFieldNumber = 7;
  ::google::protobuf::int32 ts_fx_amare() const;
  void set_ts_fx_amare(::google::protobuf::int32 value);

  // optional int32 ts_fx_verde = 8;
  bool has_ts_fx_verde() const;
  void clear_ts_fx_verde();
  static const int kTsFxVerdeFieldNumber = 8;
  ::google::protobuf::int32 ts_fx_verde() const;
  void set_ts_fx_verde(::google::protobuf::int32 value);

  // optional int32 ts_fx_verme = 9;
  bool has_ts_fx_verme() const;
  void clear_ts_fx_verme();
  static const int kTsFxVermeFieldNumber = 9;
  ::google::protobuf::int32 ts_fx_verme() const;
  void set_ts_fx_verme(::google::protobuf::int32 value);

  // optional int32 ts_movimento = 10;
  bool has_ts_movimento() const;
  void clear_ts_movimento();
  static const int kTsMovimentoFieldNumber = 10;
  ::google::protobuf::int32 ts_movimento() const;
  void set_ts_movimento(::google::protobuf::int32 value);

  // optional int32 ts_parado = 11;
  bool has_ts_parado() const;
  void clear_ts_parado();
  static const int kTsParadoFieldNumber = 11;
  ::google::protobuf::int32 ts_parado() const;
  void set_ts_parado(::google::protobuf::int32 value);

  // optional .pacote_posicao.t32_odo_vel odometro_velocidade = 12;
  bool has_odometro_velocidade() const;
  void clear_odometro_velocidade();
  static const int kOdometroVelocidadeFieldNumber = 12;
  const ::pacote_posicao::t32_odo_vel& odometro_velocidade() const;
  ::pacote_posicao::t32_odo_vel* mutable_odometro_velocidade();
  ::pacote_posicao::t32_odo_vel* release_odometro_velocidade();
  void set_allocated_odometro_velocidade(::pacote_posicao::t32_odo_vel* odometro_velocidade);

  // optional .pacote_posicao.t32_flg_tm flags_telemetria = 13;
  bool has_flags_telemetria() const;
  void clear_flags_telemetria();
  static const int kFlagsTelemetriaFieldNumber = 13;
  const ::pacote_posicao::t32_flg_tm& flags_telemetria() const;
  ::pacote_posicao::t32_flg_tm* mutable_flags_telemetria();
  ::pacote_posicao::t32_flg_tm* release_flags_telemetria();
  void set_allocated_flags_telemetria(::pacote_posicao::t32_flg_tm* flags_telemetria);

  // optional int32 rpm = 14;
  bool has_rpm() const;
  void clear_rpm();
  static const int kRpmFieldNumber = 14;
  ::google::protobuf::int32 rpm() const;
  void set_rpm(::google::protobuf::int32 value);

  // optional int32 tensao_alternador_pos_chave = 15;
  bool has_tensao_alternador_pos_chave() const;
  void clear_tensao_alternador_pos_chave();
  static const int kTensaoAlternadorPosChaveFieldNumber = 15;
  ::google::protobuf::int32 tensao_alternador_pos_chave() const;
  void set_tensao_alternador_pos_chave(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t_telemetria)
 private:
  inline void set_has_versao();
  inline void clear_has_versao();
  inline void set_has_temp_motor();
  inline void clear_has_temp_motor();
  inline void set_has_nivel_combustivel();
  inline void clear_has_nivel_combustivel();
  inline void set_has_num_sensores();
  inline void clear_has_num_sensores();
  inline void set_has_ts_motor_giro();
  inline void clear_has_ts_motor_giro();
  inline void set_has_ts_fx_azul();
  inline void clear_has_ts_fx_azul();
  inline void set_has_ts_fx_amare();
  inline void clear_has_ts_fx_amare();
  inline void set_has_ts_fx_verde();
  inline void clear_has_ts_fx_verde();
  inline void set_has_ts_fx_verme();
  inline void clear_has_ts_fx_verme();
  inline void set_has_ts_movimento();
  inline void clear_has_ts_movimento();
  inline void set_has_ts_parado();
  inline void clear_has_ts_parado();
  inline void set_has_odometro_velocidade();
  inline void clear_has_odometro_velocidade();
  inline void set_has_flags_telemetria();
  inline void clear_has_flags_telemetria();
  inline void set_has_rpm();
  inline void clear_has_rpm();
  inline void set_has_tensao_alternador_pos_chave();
  inline void clear_has_tensao_alternador_pos_chave();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 versao_;
  ::google::protobuf::int32 temp_motor_;
  ::google::protobuf::int32 nivel_combustivel_;
  ::google::protobuf::int32 num_sensores_;
  ::google::protobuf::int32 ts_motor_giro_;
  ::google::protobuf::int32 ts_fx_azul_;
  ::google::protobuf::int32 ts_fx_amare_;
  ::google::protobuf::int32 ts_fx_verde_;
  ::google::protobuf::int32 ts_fx_verme_;
  ::google::protobuf::int32 ts_movimento_;
  ::pacote_posicao::t32_odo_vel* odometro_velocidade_;
  ::google::protobuf::int32 ts_parado_;
  ::google::protobuf::int32 rpm_;
  ::pacote_posicao::t32_flg_tm* flags_telemetria_;
  ::google::protobuf::int32 tensao_alternador_pos_chave_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t_telemetria* default_instance_;
};
// -------------------------------------------------------------------

class t32_flg_tm : public ::google::protobuf::Message {
 public:
  t32_flg_tm();
  virtual ~t32_flg_tm();

  t32_flg_tm(const t32_flg_tm& from);

  inline t32_flg_tm& operator=(const t32_flg_tm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const t32_flg_tm& default_instance();

  void Swap(t32_flg_tm* other);

  // implements Message ----------------------------------------------

  inline t32_flg_tm* New() const { return New(NULL); }

  t32_flg_tm* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const t32_flg_tm& from);
  void MergeFrom(const t32_flg_tm& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(t32_flg_tm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 falha_pressao_oleo = 1;
  bool has_falha_pressao_oleo() const;
  void clear_falha_pressao_oleo();
  static const int kFalhaPressaoOleoFieldNumber = 1;
  ::google::protobuf::int32 falha_pressao_oleo() const;
  void set_falha_pressao_oleo(::google::protobuf::int32 value);

  // optional int32 exc_pe_embreagem = 2;
  bool has_exc_pe_embreagem() const;
  void clear_exc_pe_embreagem();
  static const int kExcPeEmbreagemFieldNumber = 2;
  ::google::protobuf::int32 exc_pe_embreagem() const;
  void set_exc_pe_embreagem(::google::protobuf::int32 value);

  // optional int32 limpador_ligado = 3;
  bool has_limpador_ligado() const;
  void clear_limpador_ligado();
  static const int kLimpadorLigadoFieldNumber = 3;
  ::google::protobuf::int32 limpador_ligado() const;
  void set_limpador_ligado(::google::protobuf::int32 value);

  // optional int32 est_caixa_marcha = 4;
  bool has_est_caixa_marcha() const;
  void clear_est_caixa_marcha();
  static const int kEstCaixaMarchaFieldNumber = 4;
  ::google::protobuf::int32 est_caixa_marcha() const;
  void set_est_caixa_marcha(::google::protobuf::int32 value);

  // optional int32 est_freio_motor = 5;
  bool has_est_freio_motor() const;
  void clear_est_freio_motor();
  static const int kEstFreioMotorFieldNumber = 5;
  ::google::protobuf::int32 est_freio_motor() const;
  void set_est_freio_motor(::google::protobuf::int32 value);

  // optional int32 est_saida = 6;
  bool has_est_saida() const;
  void clear_est_saida();
  static const int kEstSaidaFieldNumber = 6;
  ::google::protobuf::int32 est_saida() const;
  void set_est_saida(::google::protobuf::int32 value);

  // optional int32 flag_banguela = 7;
  bool has_flag_banguela() const;
  void clear_flag_banguela();
  static const int kFlagBanguelaFieldNumber = 7;
  ::google::protobuf::int32 flag_banguela() const;
  void set_flag_banguela(::google::protobuf::int32 value);

  // optional int32 ign_sem_giro_motor = 8;
  bool has_ign_sem_giro_motor() const;
  void clear_ign_sem_giro_motor();
  static const int kIgnSemGiroMotorFieldNumber = 8;
  ::google::protobuf::int32 ign_sem_giro_motor() const;
  void set_ign_sem_giro_motor(::google::protobuf::int32 value);

  // optional int32 exc_marcha_lenta = 9;
  bool has_exc_marcha_lenta() const;
  void clear_exc_marcha_lenta();
  static const int kExcMarchaLentaFieldNumber = 9;
  ::google::protobuf::int32 exc_marcha_lenta() const;
  void set_exc_marcha_lenta(::google::protobuf::int32 value);

  // optional int32 exc_velocidade = 10;
  bool has_exc_velocidade() const;
  void clear_exc_velocidade();
  static const int kExcVelocidadeFieldNumber = 10;
  ::google::protobuf::int32 exc_velocidade() const;
  void set_exc_velocidade(::google::protobuf::int32 value);

  // optional int32 exc_rotacao = 11;
  bool has_exc_rotacao() const;
  void clear_exc_rotacao();
  static const int kExcRotacaoFieldNumber = 11;
  ::google::protobuf::int32 exc_rotacao() const;
  void set_exc_rotacao(::google::protobuf::int32 value);

  // optional int32 falha_tmp_liq_arref = 12;
  bool has_falha_tmp_liq_arref() const;
  void clear_falha_tmp_liq_arref();
  static const int kFalhaTmpLiqArrefFieldNumber = 12;
  ::google::protobuf::int32 falha_tmp_liq_arref() const;
  void set_falha_tmp_liq_arref(::google::protobuf::int32 value);

  // optional int32 tensao_alternador = 13;
  bool has_tensao_alternador() const;
  void clear_tensao_alternador();
  static const int kTensaoAlternadorFieldNumber = 13;
  ::google::protobuf::int32 tensao_alternador() const;
  void set_tensao_alternador(::google::protobuf::int32 value);

  // optional int32 motor_funcionando = 14;
  bool has_motor_funcionando() const;
  void clear_motor_funcionando();
  static const int kMotorFuncionandoFieldNumber = 14;
  ::google::protobuf::int32 motor_funcionando() const;
  void set_motor_funcionando(::google::protobuf::int32 value);

  // optional int32 est_freio = 15;
  bool has_est_freio() const;
  void clear_est_freio();
  static const int kEstFreioFieldNumber = 15;
  ::google::protobuf::int32 est_freio() const;
  void set_est_freio(::google::protobuf::int32 value);

  // optional int32 est_embreagem = 16;
  bool has_est_embreagem() const;
  void clear_est_embreagem();
  static const int kEstEmbreagemFieldNumber = 16;
  ::google::protobuf::int32 est_embreagem() const;
  void set_est_embreagem(::google::protobuf::int32 value);

  // optional int32 est_pressao_oleo = 17;
  bool has_est_pressao_oleo() const;
  void clear_est_pressao_oleo();
  static const int kEstPressaoOleoFieldNumber = 17;
  ::google::protobuf::int32 est_pressao_oleo() const;
  void set_est_pressao_oleo(::google::protobuf::int32 value);

  // optional int32 est_limpador = 18;
  bool has_est_limpador() const;
  void clear_est_limpador();
  static const int kEstLimpadorFieldNumber = 18;
  ::google::protobuf::int32 est_limpador() const;
  void set_est_limpador(::google::protobuf::int32 value);

  // optional int32 padding = 19;
  bool has_padding() const;
  void clear_padding();
  static const int kPaddingFieldNumber = 19;
  ::google::protobuf::int32 padding() const;
  void set_padding(::google::protobuf::int32 value);

  // optional int32 id_delta_cfg = 20;
  bool has_id_delta_cfg() const;
  void clear_id_delta_cfg();
  static const int kIdDeltaCfgFieldNumber = 20;
  ::google::protobuf::int32 id_delta_cfg() const;
  void set_id_delta_cfg(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pacote_posicao.t32_flg_tm)
 private:
  inline void set_has_falha_pressao_oleo();
  inline void clear_has_falha_pressao_oleo();
  inline void set_has_exc_pe_embreagem();
  inline void clear_has_exc_pe_embreagem();
  inline void set_has_limpador_ligado();
  inline void clear_has_limpador_ligado();
  inline void set_has_est_caixa_marcha();
  inline void clear_has_est_caixa_marcha();
  inline void set_has_est_freio_motor();
  inline void clear_has_est_freio_motor();
  inline void set_has_est_saida();
  inline void clear_has_est_saida();
  inline void set_has_flag_banguela();
  inline void clear_has_flag_banguela();
  inline void set_has_ign_sem_giro_motor();
  inline void clear_has_ign_sem_giro_motor();
  inline void set_has_exc_marcha_lenta();
  inline void clear_has_exc_marcha_lenta();
  inline void set_has_exc_velocidade();
  inline void clear_has_exc_velocidade();
  inline void set_has_exc_rotacao();
  inline void clear_has_exc_rotacao();
  inline void set_has_falha_tmp_liq_arref();
  inline void clear_has_falha_tmp_liq_arref();
  inline void set_has_tensao_alternador();
  inline void clear_has_tensao_alternador();
  inline void set_has_motor_funcionando();
  inline void clear_has_motor_funcionando();
  inline void set_has_est_freio();
  inline void clear_has_est_freio();
  inline void set_has_est_embreagem();
  inline void clear_has_est_embreagem();
  inline void set_has_est_pressao_oleo();
  inline void clear_has_est_pressao_oleo();
  inline void set_has_est_limpador();
  inline void clear_has_est_limpador();
  inline void set_has_padding();
  inline void clear_has_padding();
  inline void set_has_id_delta_cfg();
  inline void clear_has_id_delta_cfg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 falha_pressao_oleo_;
  ::google::protobuf::int32 exc_pe_embreagem_;
  ::google::protobuf::int32 limpador_ligado_;
  ::google::protobuf::int32 est_caixa_marcha_;
  ::google::protobuf::int32 est_freio_motor_;
  ::google::protobuf::int32 est_saida_;
  ::google::protobuf::int32 flag_banguela_;
  ::google::protobuf::int32 ign_sem_giro_motor_;
  ::google::protobuf::int32 exc_marcha_lenta_;
  ::google::protobuf::int32 exc_velocidade_;
  ::google::protobuf::int32 exc_rotacao_;
  ::google::protobuf::int32 falha_tmp_liq_arref_;
  ::google::protobuf::int32 tensao_alternador_;
  ::google::protobuf::int32 motor_funcionando_;
  ::google::protobuf::int32 est_freio_;
  ::google::protobuf::int32 est_embreagem_;
  ::google::protobuf::int32 est_pressao_oleo_;
  ::google::protobuf::int32 est_limpador_;
  ::google::protobuf::int32 padding_;
  ::google::protobuf::int32 id_delta_cfg_;
  friend void  protobuf_AddDesc_pacote_5fposicao_2eproto();
  friend void protobuf_AssignDesc_pacote_5fposicao_2eproto();
  friend void protobuf_ShutdownFile_pacote_5fposicao_2eproto();

  void InitAsDefaultInstance();
  static t32_flg_tm* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// pacote_enriquecido

// optional .pacote_posicao.equip_contrato ec = 1;
inline bool pacote_enriquecido::has_ec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pacote_enriquecido::set_has_ec() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pacote_enriquecido::clear_has_ec() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pacote_enriquecido::clear_ec() {
  if (ec_ != NULL) ec_->::pacote_posicao::equip_contrato::Clear();
  clear_has_ec();
}
inline const ::pacote_posicao::equip_contrato& pacote_enriquecido::ec() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.ec)
  return ec_ != NULL ? *ec_ : *default_instance_->ec_;
}
inline ::pacote_posicao::equip_contrato* pacote_enriquecido::mutable_ec() {
  set_has_ec();
  if (ec_ == NULL) {
    ec_ = new ::pacote_posicao::equip_contrato;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.ec)
  return ec_;
}
inline ::pacote_posicao::equip_contrato* pacote_enriquecido::release_ec() {
  clear_has_ec();
  ::pacote_posicao::equip_contrato* temp = ec_;
  ec_ = NULL;
  return temp;
}
inline void pacote_enriquecido::set_allocated_ec(::pacote_posicao::equip_contrato* ec) {
  delete ec_;
  ec_ = ec;
  if (ec) {
    set_has_ec();
  } else {
    clear_has_ec();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.pacote_enriquecido.ec)
}

// optional .pacote_posicao.equip_posicao ep = 2;
inline bool pacote_enriquecido::has_ep() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pacote_enriquecido::set_has_ep() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pacote_enriquecido::clear_has_ep() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pacote_enriquecido::clear_ep() {
  if (ep_ != NULL) ep_->::pacote_posicao::equip_posicao::Clear();
  clear_has_ep();
}
inline const ::pacote_posicao::equip_posicao& pacote_enriquecido::ep() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.ep)
  return ep_ != NULL ? *ep_ : *default_instance_->ep_;
}
inline ::pacote_posicao::equip_posicao* pacote_enriquecido::mutable_ep() {
  set_has_ep();
  if (ep_ == NULL) {
    ep_ = new ::pacote_posicao::equip_posicao;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.ep)
  return ep_;
}
inline ::pacote_posicao::equip_posicao* pacote_enriquecido::release_ep() {
  clear_has_ep();
  ::pacote_posicao::equip_posicao* temp = ep_;
  ep_ = NULL;
  return temp;
}
inline void pacote_enriquecido::set_allocated_ep(::pacote_posicao::equip_posicao* ep) {
  delete ep_;
  ep_ = ep;
  if (ep) {
    set_has_ep();
  } else {
    clear_has_ep();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.pacote_enriquecido.ep)
}

// optional string texto_livre = 3;
inline bool pacote_enriquecido::has_texto_livre() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pacote_enriquecido::set_has_texto_livre() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pacote_enriquecido::clear_has_texto_livre() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pacote_enriquecido::clear_texto_livre() {
  texto_livre_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_texto_livre();
}
inline const ::std::string& pacote_enriquecido::texto_livre() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.texto_livre)
  return texto_livre_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pacote_enriquecido::set_texto_livre(const ::std::string& value) {
  set_has_texto_livre();
  texto_livre_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pacote_posicao.pacote_enriquecido.texto_livre)
}
inline void pacote_enriquecido::set_texto_livre(const char* value) {
  set_has_texto_livre();
  texto_livre_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pacote_posicao.pacote_enriquecido.texto_livre)
}
inline void pacote_enriquecido::set_texto_livre(const char* value, size_t size) {
  set_has_texto_livre();
  texto_livre_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pacote_posicao.pacote_enriquecido.texto_livre)
}
inline ::std::string* pacote_enriquecido::mutable_texto_livre() {
  set_has_texto_livre();
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.texto_livre)
  return texto_livre_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pacote_enriquecido::release_texto_livre() {
  clear_has_texto_livre();
  return texto_livre_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pacote_enriquecido::set_allocated_texto_livre(::std::string* texto_livre) {
  if (texto_livre != NULL) {
    set_has_texto_livre();
  } else {
    clear_has_texto_livre();
  }
  texto_livre_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), texto_livre);
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.pacote_enriquecido.texto_livre)
}

// optional .pacote_posicao.equip_teclado teclado = 4;
inline bool pacote_enriquecido::has_teclado() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pacote_enriquecido::set_has_teclado() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pacote_enriquecido::clear_has_teclado() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pacote_enriquecido::clear_teclado() {
  if (teclado_ != NULL) teclado_->::pacote_posicao::equip_teclado::Clear();
  clear_has_teclado();
}
inline const ::pacote_posicao::equip_teclado& pacote_enriquecido::teclado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.teclado)
  return teclado_ != NULL ? *teclado_ : *default_instance_->teclado_;
}
inline ::pacote_posicao::equip_teclado* pacote_enriquecido::mutable_teclado() {
  set_has_teclado();
  if (teclado_ == NULL) {
    teclado_ = new ::pacote_posicao::equip_teclado;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.teclado)
  return teclado_;
}
inline ::pacote_posicao::equip_teclado* pacote_enriquecido::release_teclado() {
  clear_has_teclado();
  ::pacote_posicao::equip_teclado* temp = teclado_;
  teclado_ = NULL;
  return temp;
}
inline void pacote_enriquecido::set_allocated_teclado(::pacote_posicao::equip_teclado* teclado) {
  delete teclado_;
  teclado_ = teclado;
  if (teclado) {
    set_has_teclado();
  } else {
    clear_has_teclado();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.pacote_enriquecido.teclado)
}

// repeated .pacote_posicao.equip_evento evento = 5;
inline int pacote_enriquecido::evento_size() const {
  return evento_.size();
}
inline void pacote_enriquecido::clear_evento() {
  evento_.Clear();
}
inline const ::pacote_posicao::equip_evento& pacote_enriquecido::evento(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.evento)
  return evento_.Get(index);
}
inline ::pacote_posicao::equip_evento* pacote_enriquecido::mutable_evento(int index) {
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.evento)
  return evento_.Mutable(index);
}
inline ::pacote_posicao::equip_evento* pacote_enriquecido::add_evento() {
  // @@protoc_insertion_point(field_add:pacote_posicao.pacote_enriquecido.evento)
  return evento_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento >*
pacote_enriquecido::mutable_evento() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.pacote_enriquecido.evento)
  return &evento_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento >&
pacote_enriquecido::evento() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.pacote_enriquecido.evento)
  return evento_;
}

// repeated .pacote_posicao.equip_evento_carga evento_carga = 6;
inline int pacote_enriquecido::evento_carga_size() const {
  return evento_carga_.size();
}
inline void pacote_enriquecido::clear_evento_carga() {
  evento_carga_.Clear();
}
inline const ::pacote_posicao::equip_evento_carga& pacote_enriquecido::evento_carga(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.evento_carga)
  return evento_carga_.Get(index);
}
inline ::pacote_posicao::equip_evento_carga* pacote_enriquecido::mutable_evento_carga(int index) {
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.evento_carga)
  return evento_carga_.Mutable(index);
}
inline ::pacote_posicao::equip_evento_carga* pacote_enriquecido::add_evento_carga() {
  // @@protoc_insertion_point(field_add:pacote_posicao.pacote_enriquecido.evento_carga)
  return evento_carga_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_carga >*
pacote_enriquecido::mutable_evento_carga() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.pacote_enriquecido.evento_carga)
  return &evento_carga_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_carga >&
pacote_enriquecido::evento_carga() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.pacote_enriquecido.evento_carga)
  return evento_carga_;
}

// optional .pacote_posicao.equip_delta_telemetria delta_telemetria = 7;
inline bool pacote_enriquecido::has_delta_telemetria() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void pacote_enriquecido::set_has_delta_telemetria() {
  _has_bits_[0] |= 0x00000040u;
}
inline void pacote_enriquecido::clear_has_delta_telemetria() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void pacote_enriquecido::clear_delta_telemetria() {
  if (delta_telemetria_ != NULL) delta_telemetria_->::pacote_posicao::equip_delta_telemetria::Clear();
  clear_has_delta_telemetria();
}
inline const ::pacote_posicao::equip_delta_telemetria& pacote_enriquecido::delta_telemetria() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.delta_telemetria)
  return delta_telemetria_ != NULL ? *delta_telemetria_ : *default_instance_->delta_telemetria_;
}
inline ::pacote_posicao::equip_delta_telemetria* pacote_enriquecido::mutable_delta_telemetria() {
  set_has_delta_telemetria();
  if (delta_telemetria_ == NULL) {
    delta_telemetria_ = new ::pacote_posicao::equip_delta_telemetria;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.delta_telemetria)
  return delta_telemetria_;
}
inline ::pacote_posicao::equip_delta_telemetria* pacote_enriquecido::release_delta_telemetria() {
  clear_has_delta_telemetria();
  ::pacote_posicao::equip_delta_telemetria* temp = delta_telemetria_;
  delta_telemetria_ = NULL;
  return temp;
}
inline void pacote_enriquecido::set_allocated_delta_telemetria(::pacote_posicao::equip_delta_telemetria* delta_telemetria) {
  delete delta_telemetria_;
  delta_telemetria_ = delta_telemetria;
  if (delta_telemetria) {
    set_has_delta_telemetria();
  } else {
    clear_has_delta_telemetria();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.pacote_enriquecido.delta_telemetria)
}

// repeated .pacote_posicao.equip_evento_telemetria evento_telemetria = 8;
inline int pacote_enriquecido::evento_telemetria_size() const {
  return evento_telemetria_.size();
}
inline void pacote_enriquecido::clear_evento_telemetria() {
  evento_telemetria_.Clear();
}
inline const ::pacote_posicao::equip_evento_telemetria& pacote_enriquecido::evento_telemetria(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.evento_telemetria)
  return evento_telemetria_.Get(index);
}
inline ::pacote_posicao::equip_evento_telemetria* pacote_enriquecido::mutable_evento_telemetria(int index) {
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.evento_telemetria)
  return evento_telemetria_.Mutable(index);
}
inline ::pacote_posicao::equip_evento_telemetria* pacote_enriquecido::add_evento_telemetria() {
  // @@protoc_insertion_point(field_add:pacote_posicao.pacote_enriquecido.evento_telemetria)
  return evento_telemetria_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_telemetria >*
pacote_enriquecido::mutable_evento_telemetria() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.pacote_enriquecido.evento_telemetria)
  return &evento_telemetria_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pacote_posicao::equip_evento_telemetria >&
pacote_enriquecido::evento_telemetria() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.pacote_enriquecido.evento_telemetria)
  return evento_telemetria_;
}

// optional string dump_debug = 9;
inline bool pacote_enriquecido::has_dump_debug() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void pacote_enriquecido::set_has_dump_debug() {
  _has_bits_[0] |= 0x00000100u;
}
inline void pacote_enriquecido::clear_has_dump_debug() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void pacote_enriquecido::clear_dump_debug() {
  dump_debug_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dump_debug();
}
inline const ::std::string& pacote_enriquecido::dump_debug() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.pacote_enriquecido.dump_debug)
  return dump_debug_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pacote_enriquecido::set_dump_debug(const ::std::string& value) {
  set_has_dump_debug();
  dump_debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pacote_posicao.pacote_enriquecido.dump_debug)
}
inline void pacote_enriquecido::set_dump_debug(const char* value) {
  set_has_dump_debug();
  dump_debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pacote_posicao.pacote_enriquecido.dump_debug)
}
inline void pacote_enriquecido::set_dump_debug(const char* value, size_t size) {
  set_has_dump_debug();
  dump_debug_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pacote_posicao.pacote_enriquecido.dump_debug)
}
inline ::std::string* pacote_enriquecido::mutable_dump_debug() {
  set_has_dump_debug();
  // @@protoc_insertion_point(field_mutable:pacote_posicao.pacote_enriquecido.dump_debug)
  return dump_debug_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pacote_enriquecido::release_dump_debug() {
  clear_has_dump_debug();
  return dump_debug_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pacote_enriquecido::set_allocated_dump_debug(::std::string* dump_debug) {
  if (dump_debug != NULL) {
    set_has_dump_debug();
  } else {
    clear_has_dump_debug();
  }
  dump_debug_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dump_debug);
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.pacote_enriquecido.dump_debug)
}

// -------------------------------------------------------------------

// campo_macro

// required int32 numero_campo = 1;
inline bool campo_macro::has_numero_campo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void campo_macro::set_has_numero_campo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void campo_macro::clear_has_numero_campo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void campo_macro::clear_numero_campo() {
  numero_campo_ = 0;
  clear_has_numero_campo();
}
inline ::google::protobuf::int32 campo_macro::numero_campo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.campo_macro.numero_campo)
  return numero_campo_;
}
inline void campo_macro::set_numero_campo(::google::protobuf::int32 value) {
  set_has_numero_campo();
  numero_campo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.campo_macro.numero_campo)
}

// optional bytes valor = 2;
inline bool campo_macro::has_valor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void campo_macro::set_has_valor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void campo_macro::clear_has_valor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void campo_macro::clear_valor() {
  valor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_valor();
}
inline const ::std::string& campo_macro::valor() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.campo_macro.valor)
  return valor_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void campo_macro::set_valor(const ::std::string& value) {
  set_has_valor();
  valor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pacote_posicao.campo_macro.valor)
}
inline void campo_macro::set_valor(const char* value) {
  set_has_valor();
  valor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pacote_posicao.campo_macro.valor)
}
inline void campo_macro::set_valor(const void* value, size_t size) {
  set_has_valor();
  valor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pacote_posicao.campo_macro.valor)
}
inline ::std::string* campo_macro::mutable_valor() {
  set_has_valor();
  // @@protoc_insertion_point(field_mutable:pacote_posicao.campo_macro.valor)
  return valor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* campo_macro::release_valor() {
  clear_has_valor();
  return valor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void campo_macro::set_allocated_valor(::std::string* valor) {
  if (valor != NULL) {
    set_has_valor();
  } else {
    clear_has_valor();
  }
  valor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), valor);
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.campo_macro.valor)
}

// -------------------------------------------------------------------

// equip_teclado

// required int32 tipo_teclado = 1;
inline bool equip_teclado::has_tipo_teclado() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_teclado::set_has_tipo_teclado() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_teclado::clear_has_tipo_teclado() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_teclado::clear_tipo_teclado() {
  tipo_teclado_ = 0;
  clear_has_tipo_teclado();
}
inline ::google::protobuf::int32 equip_teclado::tipo_teclado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_teclado.tipo_teclado)
  return tipo_teclado_;
}
inline void equip_teclado::set_tipo_teclado(::google::protobuf::int32 value) {
  set_has_tipo_teclado();
  tipo_teclado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_teclado.tipo_teclado)
}

// optional int32 id_conf_leitura = 2;
inline bool equip_teclado::has_id_conf_leitura() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void equip_teclado::set_has_id_conf_leitura() {
  _has_bits_[0] |= 0x00000002u;
}
inline void equip_teclado::clear_has_id_conf_leitura() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void equip_teclado::clear_id_conf_leitura() {
  id_conf_leitura_ = 0;
  clear_has_id_conf_leitura();
}
inline ::google::protobuf::int32 equip_teclado::id_conf_leitura() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_teclado.id_conf_leitura)
  return id_conf_leitura_;
}
inline void equip_teclado::set_id_conf_leitura(::google::protobuf::int32 value) {
  set_has_id_conf_leitura();
  id_conf_leitura_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_teclado.id_conf_leitura)
}

// optional int32 id_macro = 3;
inline bool equip_teclado::has_id_macro() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void equip_teclado::set_has_id_macro() {
  _has_bits_[0] |= 0x00000004u;
}
inline void equip_teclado::clear_has_id_macro() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void equip_teclado::clear_id_macro() {
  id_macro_ = 0;
  clear_has_id_macro();
}
inline ::google::protobuf::int32 equip_teclado::id_macro() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_teclado.id_macro)
  return id_macro_;
}
inline void equip_teclado::set_id_macro(::google::protobuf::int32 value) {
  set_has_id_macro();
  id_macro_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_teclado.id_macro)
}

// optional string nome_macro = 4;
inline bool equip_teclado::has_nome_macro() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void equip_teclado::set_has_nome_macro() {
  _has_bits_[0] |= 0x00000008u;
}
inline void equip_teclado::clear_has_nome_macro() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void equip_teclado::clear_nome_macro() {
  nome_macro_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nome_macro();
}
inline const ::std::string& equip_teclado::nome_macro() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_teclado.nome_macro)
  return nome_macro_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void equip_teclado::set_nome_macro(const ::std::string& value) {
  set_has_nome_macro();
  nome_macro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_teclado.nome_macro)
}
inline void equip_teclado::set_nome_macro(const char* value) {
  set_has_nome_macro();
  nome_macro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pacote_posicao.equip_teclado.nome_macro)
}
inline void equip_teclado::set_nome_macro(const char* value, size_t size) {
  set_has_nome_macro();
  nome_macro_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pacote_posicao.equip_teclado.nome_macro)
}
inline ::std::string* equip_teclado::mutable_nome_macro() {
  set_has_nome_macro();
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_teclado.nome_macro)
  return nome_macro_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* equip_teclado::release_nome_macro() {
  clear_has_nome_macro();
  return nome_macro_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void equip_teclado::set_allocated_nome_macro(::std::string* nome_macro) {
  if (nome_macro != NULL) {
    set_has_nome_macro();
  } else {
    clear_has_nome_macro();
  }
  nome_macro_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nome_macro);
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_teclado.nome_macro)
}

// optional int32 id_tecla = 5;
inline bool equip_teclado::has_id_tecla() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void equip_teclado::set_has_id_tecla() {
  _has_bits_[0] |= 0x00000010u;
}
inline void equip_teclado::clear_has_id_tecla() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void equip_teclado::clear_id_tecla() {
  id_tecla_ = 0;
  clear_has_id_tecla();
}
inline ::google::protobuf::int32 equip_teclado::id_tecla() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_teclado.id_tecla)
  return id_tecla_;
}
inline void equip_teclado::set_id_tecla(::google::protobuf::int32 value) {
  set_has_id_tecla();
  id_tecla_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_teclado.id_tecla)
}

// optional int32 id_msg_ret = 6;
inline bool equip_teclado::has_id_msg_ret() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void equip_teclado::set_has_id_msg_ret() {
  _has_bits_[0] |= 0x00000020u;
}
inline void equip_teclado::clear_has_id_msg_ret() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void equip_teclado::clear_id_msg_ret() {
  id_msg_ret_ = 0;
  clear_has_id_msg_ret();
}
inline ::google::protobuf::int32 equip_teclado::id_msg_ret() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_teclado.id_msg_ret)
  return id_msg_ret_;
}
inline void equip_teclado::set_id_msg_ret(::google::protobuf::int32 value) {
  set_has_id_msg_ret();
  id_msg_ret_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_teclado.id_msg_ret)
}

// repeated .pacote_posicao.campo_macro campo = 7;
inline int equip_teclado::campo_size() const {
  return campo_.size();
}
inline void equip_teclado::clear_campo() {
  campo_.Clear();
}
inline const ::pacote_posicao::campo_macro& equip_teclado::campo(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_teclado.campo)
  return campo_.Get(index);
}
inline ::pacote_posicao::campo_macro* equip_teclado::mutable_campo(int index) {
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_teclado.campo)
  return campo_.Mutable(index);
}
inline ::pacote_posicao::campo_macro* equip_teclado::add_campo() {
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_teclado.campo)
  return campo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pacote_posicao::campo_macro >*
equip_teclado::mutable_campo() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_teclado.campo)
  return &campo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pacote_posicao::campo_macro >&
equip_teclado::campo() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_teclado.campo)
  return campo_;
}

// -------------------------------------------------------------------

// equip_evento

// required int32 dispositivo = 1;
inline bool equip_evento::has_dispositivo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_evento::set_has_dispositivo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_evento::clear_has_dispositivo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_evento::clear_dispositivo() {
  dispositivo_ = 0;
  clear_has_dispositivo();
}
inline ::google::protobuf::int32 equip_evento::dispositivo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento.dispositivo)
  return dispositivo_;
}
inline void equip_evento::set_dispositivo(::google::protobuf::int32 value) {
  set_has_dispositivo();
  dispositivo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento.dispositivo)
}

// required int32 evento = 2;
inline bool equip_evento::has_evento() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void equip_evento::set_has_evento() {
  _has_bits_[0] |= 0x00000002u;
}
inline void equip_evento::clear_has_evento() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void equip_evento::clear_evento() {
  evento_ = 0;
  clear_has_evento();
}
inline ::google::protobuf::int32 equip_evento::evento() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento.evento)
  return evento_;
}
inline void equip_evento::set_evento(::google::protobuf::int32 value) {
  set_has_evento();
  evento_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento.evento)
}

// -------------------------------------------------------------------

// equip_evento_carga

// required int32 id = 1;
inline bool equip_evento_carga::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_evento_carga::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_evento_carga::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_evento_carga::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 equip_evento_carga::id() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_carga.id)
  return id_;
}
inline void equip_evento_carga::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_carga.id)
}

// optional int32 entradas = 2;
inline bool equip_evento_carga::has_entradas() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void equip_evento_carga::set_has_entradas() {
  _has_bits_[0] |= 0x00000002u;
}
inline void equip_evento_carga::clear_has_entradas() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void equip_evento_carga::clear_entradas() {
  entradas_ = 0;
  clear_has_entradas();
}
inline ::google::protobuf::int32 equip_evento_carga::entradas() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_carga.entradas)
  return entradas_;
}
inline void equip_evento_carga::set_entradas(::google::protobuf::int32 value) {
  set_has_entradas();
  entradas_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_carga.entradas)
}

// optional int32 saidas = 3;
inline bool equip_evento_carga::has_saidas() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void equip_evento_carga::set_has_saidas() {
  _has_bits_[0] |= 0x00000004u;
}
inline void equip_evento_carga::clear_has_saidas() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void equip_evento_carga::clear_saidas() {
  saidas_ = 0;
  clear_has_saidas();
}
inline ::google::protobuf::int32 equip_evento_carga::saidas() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_carga.saidas)
  return saidas_;
}
inline void equip_evento_carga::set_saidas(::google::protobuf::int32 value) {
  set_has_saidas();
  saidas_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_carga.saidas)
}

// required int32 tempo = 4;
inline bool equip_evento_carga::has_tempo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void equip_evento_carga::set_has_tempo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void equip_evento_carga::clear_has_tempo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void equip_evento_carga::clear_tempo() {
  tempo_ = 0;
  clear_has_tempo();
}
inline ::google::protobuf::int32 equip_evento_carga::tempo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_carga.tempo)
  return tempo_;
}
inline void equip_evento_carga::set_tempo(::google::protobuf::int32 value) {
  set_has_tempo();
  tempo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_carga.tempo)
}

// -------------------------------------------------------------------

// equip_delta_telemetria

// required int32 versao = 1;
inline bool equip_delta_telemetria::has_versao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_delta_telemetria::set_has_versao() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_delta_telemetria::clear_has_versao() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_delta_telemetria::clear_versao() {
  versao_ = 0;
  clear_has_versao();
}
inline ::google::protobuf::int32 equip_delta_telemetria::versao() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.versao)
  return versao_;
}
inline void equip_delta_telemetria::set_versao(::google::protobuf::int32 value) {
  set_has_versao();
  versao_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.versao)
}

// required int32 dt_fx_azul = 2;
inline bool equip_delta_telemetria::has_dt_fx_azul() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_fx_azul() {
  _has_bits_[0] |= 0x00000002u;
}
inline void equip_delta_telemetria::clear_has_dt_fx_azul() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void equip_delta_telemetria::clear_dt_fx_azul() {
  dt_fx_azul_ = 0;
  clear_has_dt_fx_azul();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_fx_azul() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_fx_azul)
  return dt_fx_azul_;
}
inline void equip_delta_telemetria::set_dt_fx_azul(::google::protobuf::int32 value) {
  set_has_dt_fx_azul();
  dt_fx_azul_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_fx_azul)
}

// required int32 tipo = 3;
inline bool equip_delta_telemetria::has_tipo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void equip_delta_telemetria::set_has_tipo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void equip_delta_telemetria::clear_has_tipo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void equip_delta_telemetria::clear_tipo() {
  tipo_ = 0;
  clear_has_tipo();
}
inline ::google::protobuf::int32 equip_delta_telemetria::tipo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.tipo)
  return tipo_;
}
inline void equip_delta_telemetria::set_tipo(::google::protobuf::int32 value) {
  set_has_tipo();
  tipo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.tipo)
}

// required int32 dt_fx_vermelho = 4;
inline bool equip_delta_telemetria::has_dt_fx_vermelho() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_fx_vermelho() {
  _has_bits_[0] |= 0x00000008u;
}
inline void equip_delta_telemetria::clear_has_dt_fx_vermelho() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void equip_delta_telemetria::clear_dt_fx_vermelho() {
  dt_fx_vermelho_ = 0;
  clear_has_dt_fx_vermelho();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_fx_vermelho() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_fx_vermelho)
  return dt_fx_vermelho_;
}
inline void equip_delta_telemetria::set_dt_fx_vermelho(::google::protobuf::int32 value) {
  set_has_dt_fx_vermelho();
  dt_fx_vermelho_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_fx_vermelho)
}

// required int32 vel_max = 5;
inline bool equip_delta_telemetria::has_vel_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void equip_delta_telemetria::set_has_vel_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void equip_delta_telemetria::clear_has_vel_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void equip_delta_telemetria::clear_vel_max() {
  vel_max_ = 0;
  clear_has_vel_max();
}
inline ::google::protobuf::int32 equip_delta_telemetria::vel_max() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.vel_max)
  return vel_max_;
}
inline void equip_delta_telemetria::set_vel_max(::google::protobuf::int32 value) {
  set_has_vel_max();
  vel_max_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.vel_max)
}

// required int32 dt_fx_amarelo = 6;
inline bool equip_delta_telemetria::has_dt_fx_amarelo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_fx_amarelo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void equip_delta_telemetria::clear_has_dt_fx_amarelo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void equip_delta_telemetria::clear_dt_fx_amarelo() {
  dt_fx_amarelo_ = 0;
  clear_has_dt_fx_amarelo();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_fx_amarelo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_fx_amarelo)
  return dt_fx_amarelo_;
}
inline void equip_delta_telemetria::set_dt_fx_amarelo(::google::protobuf::int32 value) {
  set_has_dt_fx_amarelo();
  dt_fx_amarelo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_fx_amarelo)
}

// required int32 vel_media = 7;
inline bool equip_delta_telemetria::has_vel_media() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void equip_delta_telemetria::set_has_vel_media() {
  _has_bits_[0] |= 0x00000040u;
}
inline void equip_delta_telemetria::clear_has_vel_media() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void equip_delta_telemetria::clear_vel_media() {
  vel_media_ = 0;
  clear_has_vel_media();
}
inline ::google::protobuf::int32 equip_delta_telemetria::vel_media() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.vel_media)
  return vel_media_;
}
inline void equip_delta_telemetria::set_vel_media(::google::protobuf::int32 value) {
  set_has_vel_media();
  vel_media_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.vel_media)
}

// required int32 dt_odometro = 8;
inline bool equip_delta_telemetria::has_dt_odometro() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_odometro() {
  _has_bits_[0] |= 0x00000080u;
}
inline void equip_delta_telemetria::clear_has_dt_odometro() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void equip_delta_telemetria::clear_dt_odometro() {
  dt_odometro_ = 0;
  clear_has_dt_odometro();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_odometro() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_odometro)
  return dt_odometro_;
}
inline void equip_delta_telemetria::set_dt_odometro(::google::protobuf::int32 value) {
  set_has_dt_odometro();
  dt_odometro_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_odometro)
}

// required int32 dt_intervalo = 9;
inline bool equip_delta_telemetria::has_dt_intervalo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_intervalo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void equip_delta_telemetria::clear_has_dt_intervalo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void equip_delta_telemetria::clear_dt_intervalo() {
  dt_intervalo_ = 0;
  clear_has_dt_intervalo();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_intervalo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_intervalo)
  return dt_intervalo_;
}
inline void equip_delta_telemetria::set_dt_intervalo(::google::protobuf::int32 value) {
  set_has_dt_intervalo();
  dt_intervalo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_intervalo)
}

// optional int32 dt_motor_giro = 10;
inline bool equip_delta_telemetria::has_dt_motor_giro() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_motor_giro() {
  _has_bits_[0] |= 0x00000200u;
}
inline void equip_delta_telemetria::clear_has_dt_motor_giro() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void equip_delta_telemetria::clear_dt_motor_giro() {
  dt_motor_giro_ = 0;
  clear_has_dt_motor_giro();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_motor_giro() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_motor_giro)
  return dt_motor_giro_;
}
inline void equip_delta_telemetria::set_dt_motor_giro(::google::protobuf::int32 value) {
  set_has_dt_motor_giro();
  dt_motor_giro_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_motor_giro)
}

// required int32 dt_fx_verde = 11;
inline bool equip_delta_telemetria::has_dt_fx_verde() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_fx_verde() {
  _has_bits_[0] |= 0x00000400u;
}
inline void equip_delta_telemetria::clear_has_dt_fx_verde() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void equip_delta_telemetria::clear_dt_fx_verde() {
  dt_fx_verde_ = 0;
  clear_has_dt_fx_verde();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_fx_verde() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_fx_verde)
  return dt_fx_verde_;
}
inline void equip_delta_telemetria::set_dt_fx_verde(::google::protobuf::int32 value) {
  set_has_dt_fx_verde();
  dt_fx_verde_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_fx_verde)
}

// required int32 dt_movimento = 12;
inline bool equip_delta_telemetria::has_dt_movimento() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_movimento() {
  _has_bits_[0] |= 0x00000800u;
}
inline void equip_delta_telemetria::clear_has_dt_movimento() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void equip_delta_telemetria::clear_dt_movimento() {
  dt_movimento_ = 0;
  clear_has_dt_movimento();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_movimento() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_movimento)
  return dt_movimento_;
}
inline void equip_delta_telemetria::set_dt_movimento(::google::protobuf::int32 value) {
  set_has_dt_movimento();
  dt_movimento_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_movimento)
}

// required int32 dt_parado = 13;
inline bool equip_delta_telemetria::has_dt_parado() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void equip_delta_telemetria::set_has_dt_parado() {
  _has_bits_[0] |= 0x00001000u;
}
inline void equip_delta_telemetria::clear_has_dt_parado() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void equip_delta_telemetria::clear_dt_parado() {
  dt_parado_ = 0;
  clear_has_dt_parado();
}
inline ::google::protobuf::int32 equip_delta_telemetria::dt_parado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.dt_parado)
  return dt_parado_;
}
inline void equip_delta_telemetria::set_dt_parado(::google::protobuf::int32 value) {
  set_has_dt_parado();
  dt_parado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.dt_parado)
}

// required int32 rpm_max = 14;
inline bool equip_delta_telemetria::has_rpm_max() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void equip_delta_telemetria::set_has_rpm_max() {
  _has_bits_[0] |= 0x00002000u;
}
inline void equip_delta_telemetria::clear_has_rpm_max() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void equip_delta_telemetria::clear_rpm_max() {
  rpm_max_ = 0;
  clear_has_rpm_max();
}
inline ::google::protobuf::int32 equip_delta_telemetria::rpm_max() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.rpm_max)
  return rpm_max_;
}
inline void equip_delta_telemetria::set_rpm_max(::google::protobuf::int32 value) {
  set_has_rpm_max();
  rpm_max_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.rpm_max)
}

// required int32 rpm_med = 15;
inline bool equip_delta_telemetria::has_rpm_med() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void equip_delta_telemetria::set_has_rpm_med() {
  _has_bits_[0] |= 0x00004000u;
}
inline void equip_delta_telemetria::clear_has_rpm_med() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void equip_delta_telemetria::clear_rpm_med() {
  rpm_med_ = 0;
  clear_has_rpm_med();
}
inline ::google::protobuf::int32 equip_delta_telemetria::rpm_med() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.rpm_med)
  return rpm_med_;
}
inline void equip_delta_telemetria::set_rpm_med(::google::protobuf::int32 value) {
  set_has_rpm_med();
  rpm_med_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.rpm_med)
}

// required int32 tmp_freio_motor = 16;
inline bool equip_delta_telemetria::has_tmp_freio_motor() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void equip_delta_telemetria::set_has_tmp_freio_motor() {
  _has_bits_[0] |= 0x00008000u;
}
inline void equip_delta_telemetria::clear_has_tmp_freio_motor() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void equip_delta_telemetria::clear_tmp_freio_motor() {
  tmp_freio_motor_ = 0;
  clear_has_tmp_freio_motor();
}
inline ::google::protobuf::int32 equip_delta_telemetria::tmp_freio_motor() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.tmp_freio_motor)
  return tmp_freio_motor_;
}
inline void equip_delta_telemetria::set_tmp_freio_motor(::google::protobuf::int32 value) {
  set_has_tmp_freio_motor();
  tmp_freio_motor_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.tmp_freio_motor)
}

// required int32 uso_embreagem_km = 17;
inline bool equip_delta_telemetria::has_uso_embreagem_km() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void equip_delta_telemetria::set_has_uso_embreagem_km() {
  _has_bits_[0] |= 0x00010000u;
}
inline void equip_delta_telemetria::clear_has_uso_embreagem_km() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void equip_delta_telemetria::clear_uso_embreagem_km() {
  uso_embreagem_km_ = 0;
  clear_has_uso_embreagem_km();
}
inline ::google::protobuf::int32 equip_delta_telemetria::uso_embreagem_km() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.uso_embreagem_km)
  return uso_embreagem_km_;
}
inline void equip_delta_telemetria::set_uso_embreagem_km(::google::protobuf::int32 value) {
  set_has_uso_embreagem_km();
  uso_embreagem_km_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.uso_embreagem_km)
}

// required int32 uso_freio_km = 18;
inline bool equip_delta_telemetria::has_uso_freio_km() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void equip_delta_telemetria::set_has_uso_freio_km() {
  _has_bits_[0] |= 0x00020000u;
}
inline void equip_delta_telemetria::clear_has_uso_freio_km() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void equip_delta_telemetria::clear_uso_freio_km() {
  uso_freio_km_ = 0;
  clear_has_uso_freio_km();
}
inline ::google::protobuf::int32 equip_delta_telemetria::uso_freio_km() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_delta_telemetria.uso_freio_km)
  return uso_freio_km_;
}
inline void equip_delta_telemetria::set_uso_freio_km(::google::protobuf::int32 value) {
  set_has_uso_freio_km();
  uso_freio_km_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_delta_telemetria.uso_freio_km)
}

// -------------------------------------------------------------------

// equip_evento_telemetria

// required int32 identificador = 1;
inline bool equip_evento_telemetria::has_identificador() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_evento_telemetria::set_has_identificador() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_evento_telemetria::clear_has_identificador() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_evento_telemetria::clear_identificador() {
  identificador_ = 0;
  clear_has_identificador();
}
inline ::google::protobuf::int32 equip_evento_telemetria::identificador() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.identificador)
  return identificador_;
}
inline void equip_evento_telemetria::set_identificador(::google::protobuf::int32 value) {
  set_has_identificador();
  identificador_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.identificador)
}

// optional int32 hori_fx_azul = 2;
inline bool equip_evento_telemetria::has_hori_fx_azul() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_fx_azul() {
  _has_bits_[0] |= 0x00000002u;
}
inline void equip_evento_telemetria::clear_has_hori_fx_azul() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void equip_evento_telemetria::clear_hori_fx_azul() {
  hori_fx_azul_ = 0;
  clear_has_hori_fx_azul();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_fx_azul() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_fx_azul)
  return hori_fx_azul_;
}
inline void equip_evento_telemetria::set_hori_fx_azul(::google::protobuf::int32 value) {
  set_has_hori_fx_azul();
  hori_fx_azul_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_fx_azul)
}

// optional int32 hori_fx_amarela = 3;
inline bool equip_evento_telemetria::has_hori_fx_amarela() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_fx_amarela() {
  _has_bits_[0] |= 0x00000004u;
}
inline void equip_evento_telemetria::clear_has_hori_fx_amarela() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void equip_evento_telemetria::clear_hori_fx_amarela() {
  hori_fx_amarela_ = 0;
  clear_has_hori_fx_amarela();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_fx_amarela() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_fx_amarela)
  return hori_fx_amarela_;
}
inline void equip_evento_telemetria::set_hori_fx_amarela(::google::protobuf::int32 value) {
  set_has_hori_fx_amarela();
  hori_fx_amarela_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_fx_amarela)
}

// optional int32 hori_fx_verde = 4;
inline bool equip_evento_telemetria::has_hori_fx_verde() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_fx_verde() {
  _has_bits_[0] |= 0x00000008u;
}
inline void equip_evento_telemetria::clear_has_hori_fx_verde() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void equip_evento_telemetria::clear_hori_fx_verde() {
  hori_fx_verde_ = 0;
  clear_has_hori_fx_verde();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_fx_verde() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_fx_verde)
  return hori_fx_verde_;
}
inline void equip_evento_telemetria::set_hori_fx_verde(::google::protobuf::int32 value) {
  set_has_hori_fx_verde();
  hori_fx_verde_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_fx_verde)
}

// optional int32 hori_fx_vermelha = 5;
inline bool equip_evento_telemetria::has_hori_fx_vermelha() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_fx_vermelha() {
  _has_bits_[0] |= 0x00000010u;
}
inline void equip_evento_telemetria::clear_has_hori_fx_vermelha() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void equip_evento_telemetria::clear_hori_fx_vermelha() {
  hori_fx_vermelha_ = 0;
  clear_has_hori_fx_vermelha();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_fx_vermelha() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_fx_vermelha)
  return hori_fx_vermelha_;
}
inline void equip_evento_telemetria::set_hori_fx_vermelha(::google::protobuf::int32 value) {
  set_has_hori_fx_vermelha();
  hori_fx_vermelha_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_fx_vermelha)
}

// optional int32 hori_motor_ligado = 6;
inline bool equip_evento_telemetria::has_hori_motor_ligado() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_motor_ligado() {
  _has_bits_[0] |= 0x00000020u;
}
inline void equip_evento_telemetria::clear_has_hori_motor_ligado() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void equip_evento_telemetria::clear_hori_motor_ligado() {
  hori_motor_ligado_ = 0;
  clear_has_hori_motor_ligado();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_motor_ligado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_motor_ligado)
  return hori_motor_ligado_;
}
inline void equip_evento_telemetria::set_hori_motor_ligado(::google::protobuf::int32 value) {
  set_has_hori_motor_ligado();
  hori_motor_ligado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_motor_ligado)
}

// optional int32 hori_vei_parado = 7;
inline bool equip_evento_telemetria::has_hori_vei_parado() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_vei_parado() {
  _has_bits_[0] |= 0x00000040u;
}
inline void equip_evento_telemetria::clear_has_hori_vei_parado() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void equip_evento_telemetria::clear_hori_vei_parado() {
  hori_vei_parado_ = 0;
  clear_has_hori_vei_parado();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_vei_parado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_vei_parado)
  return hori_vei_parado_;
}
inline void equip_evento_telemetria::set_hori_vei_parado(::google::protobuf::int32 value) {
  set_has_hori_vei_parado();
  hori_vei_parado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_vei_parado)
}

// optional int32 hori_vei_movimento = 8;
inline bool equip_evento_telemetria::has_hori_vei_movimento() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_vei_movimento() {
  _has_bits_[0] |= 0x00000080u;
}
inline void equip_evento_telemetria::clear_has_hori_vei_movimento() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void equip_evento_telemetria::clear_hori_vei_movimento() {
  hori_vei_movimento_ = 0;
  clear_has_hori_vei_movimento();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_vei_movimento() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_vei_movimento)
  return hori_vei_movimento_;
}
inline void equip_evento_telemetria::set_hori_vei_movimento(::google::protobuf::int32 value) {
  set_has_hori_vei_movimento();
  hori_vei_movimento_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_vei_movimento)
}

// optional int32 hori_vel_kmhr = 9;
inline bool equip_evento_telemetria::has_hori_vel_kmhr() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_vel_kmhr() {
  _has_bits_[0] |= 0x00000100u;
}
inline void equip_evento_telemetria::clear_has_hori_vel_kmhr() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void equip_evento_telemetria::clear_hori_vel_kmhr() {
  hori_vel_kmhr_ = 0;
  clear_has_hori_vel_kmhr();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_vel_kmhr() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_vel_kmhr)
  return hori_vel_kmhr_;
}
inline void equip_evento_telemetria::set_hori_vel_kmhr(::google::protobuf::int32 value) {
  set_has_hori_vel_kmhr();
  hori_vel_kmhr_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_vel_kmhr)
}

// optional int32 hori_distancia_100 = 10;
inline bool equip_evento_telemetria::has_hori_distancia_100() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void equip_evento_telemetria::set_has_hori_distancia_100() {
  _has_bits_[0] |= 0x00000200u;
}
inline void equip_evento_telemetria::clear_has_hori_distancia_100() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void equip_evento_telemetria::clear_hori_distancia_100() {
  hori_distancia_100_ = 0;
  clear_has_hori_distancia_100();
}
inline ::google::protobuf::int32 equip_evento_telemetria::hori_distancia_100() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.hori_distancia_100)
  return hori_distancia_100_;
}
inline void equip_evento_telemetria::set_hori_distancia_100(::google::protobuf::int32 value) {
  set_has_hori_distancia_100();
  hori_distancia_100_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.hori_distancia_100)
}

// optional int32 es_psi_oleo = 11;
inline bool equip_evento_telemetria::has_es_psi_oleo() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void equip_evento_telemetria::set_has_es_psi_oleo() {
  _has_bits_[0] |= 0x00000400u;
}
inline void equip_evento_telemetria::clear_has_es_psi_oleo() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void equip_evento_telemetria::clear_es_psi_oleo() {
  es_psi_oleo_ = 0;
  clear_has_es_psi_oleo();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_psi_oleo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_psi_oleo)
  return es_psi_oleo_;
}
inline void equip_evento_telemetria::set_es_psi_oleo(::google::protobuf::int32 value) {
  set_has_es_psi_oleo();
  es_psi_oleo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_psi_oleo)
}

// optional int32 es_embreagem = 12;
inline bool equip_evento_telemetria::has_es_embreagem() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void equip_evento_telemetria::set_has_es_embreagem() {
  _has_bits_[0] |= 0x00000800u;
}
inline void equip_evento_telemetria::clear_has_es_embreagem() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void equip_evento_telemetria::clear_es_embreagem() {
  es_embreagem_ = 0;
  clear_has_es_embreagem();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_embreagem() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_embreagem)
  return es_embreagem_;
}
inline void equip_evento_telemetria::set_es_embreagem(::google::protobuf::int32 value) {
  set_has_es_embreagem();
  es_embreagem_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_embreagem)
}

// optional int32 es_freio = 13;
inline bool equip_evento_telemetria::has_es_freio() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_freio() {
  _has_bits_[0] |= 0x00001000u;
}
inline void equip_evento_telemetria::clear_has_es_freio() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void equip_evento_telemetria::clear_es_freio() {
  es_freio_ = 0;
  clear_has_es_freio();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_freio() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_freio)
  return es_freio_;
}
inline void equip_evento_telemetria::set_es_freio(::google::protobuf::int32 value) {
  set_has_es_freio();
  es_freio_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_freio)
}

// optional int32 es_limpador_parabrisa = 14;
inline bool equip_evento_telemetria::has_es_limpador_parabrisa() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_limpador_parabrisa() {
  _has_bits_[0] |= 0x00002000u;
}
inline void equip_evento_telemetria::clear_has_es_limpador_parabrisa() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void equip_evento_telemetria::clear_es_limpador_parabrisa() {
  es_limpador_parabrisa_ = 0;
  clear_has_es_limpador_parabrisa();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_limpador_parabrisa() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_limpador_parabrisa)
  return es_limpador_parabrisa_;
}
inline void equip_evento_telemetria::set_es_limpador_parabrisa(::google::protobuf::int32 value) {
  set_has_es_limpador_parabrisa();
  es_limpador_parabrisa_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_limpador_parabrisa)
}

// optional int32 es_cx_marcha = 15;
inline bool equip_evento_telemetria::has_es_cx_marcha() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_cx_marcha() {
  _has_bits_[0] |= 0x00004000u;
}
inline void equip_evento_telemetria::clear_has_es_cx_marcha() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void equip_evento_telemetria::clear_es_cx_marcha() {
  es_cx_marcha_ = 0;
  clear_has_es_cx_marcha();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_cx_marcha() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_cx_marcha)
  return es_cx_marcha_;
}
inline void equip_evento_telemetria::set_es_cx_marcha(::google::protobuf::int32 value) {
  set_has_es_cx_marcha();
  es_cx_marcha_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_cx_marcha)
}

// optional int32 es_freio_motor = 16;
inline bool equip_evento_telemetria::has_es_freio_motor() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_freio_motor() {
  _has_bits_[0] |= 0x00008000u;
}
inline void equip_evento_telemetria::clear_has_es_freio_motor() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void equip_evento_telemetria::clear_es_freio_motor() {
  es_freio_motor_ = 0;
  clear_has_es_freio_motor();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_freio_motor() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_freio_motor)
  return es_freio_motor_;
}
inline void equip_evento_telemetria::set_es_freio_motor(::google::protobuf::int32 value) {
  set_has_es_freio_motor();
  es_freio_motor_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_freio_motor)
}

// optional int32 es_saida_fet = 17;
inline bool equip_evento_telemetria::has_es_saida_fet() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_saida_fet() {
  _has_bits_[0] |= 0x00010000u;
}
inline void equip_evento_telemetria::clear_has_es_saida_fet() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void equip_evento_telemetria::clear_es_saida_fet() {
  es_saida_fet_ = 0;
  clear_has_es_saida_fet();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_saida_fet() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_saida_fet)
  return es_saida_fet_;
}
inline void equip_evento_telemetria::set_es_saida_fet(::google::protobuf::int32 value) {
  set_has_es_saida_fet();
  es_saida_fet_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_saida_fet)
}

// optional int32 es_a1 = 18;
inline bool equip_evento_telemetria::has_es_a1() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_a1() {
  _has_bits_[0] |= 0x00020000u;
}
inline void equip_evento_telemetria::clear_has_es_a1() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void equip_evento_telemetria::clear_es_a1() {
  es_a1_ = 0;
  clear_has_es_a1();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_a1() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_a1)
  return es_a1_;
}
inline void equip_evento_telemetria::set_es_a1(::google::protobuf::int32 value) {
  set_has_es_a1();
  es_a1_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_a1)
}

// optional int32 es_a2 = 19;
inline bool equip_evento_telemetria::has_es_a2() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_a2() {
  _has_bits_[0] |= 0x00040000u;
}
inline void equip_evento_telemetria::clear_has_es_a2() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void equip_evento_telemetria::clear_es_a2() {
  es_a2_ = 0;
  clear_has_es_a2();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_a2() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_a2)
  return es_a2_;
}
inline void equip_evento_telemetria::set_es_a2(::google::protobuf::int32 value) {
  set_has_es_a2();
  es_a2_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_a2)
}

// optional int32 es_a3 = 20;
inline bool equip_evento_telemetria::has_es_a3() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_a3() {
  _has_bits_[0] |= 0x00080000u;
}
inline void equip_evento_telemetria::clear_has_es_a3() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void equip_evento_telemetria::clear_es_a3() {
  es_a3_ = 0;
  clear_has_es_a3();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_a3() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_a3)
  return es_a3_;
}
inline void equip_evento_telemetria::set_es_a3(::google::protobuf::int32 value) {
  set_has_es_a3();
  es_a3_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_a3)
}

// optional int32 es_id_evento_percurso = 21;
inline bool equip_evento_telemetria::has_es_id_evento_percurso() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_id_evento_percurso() {
  _has_bits_[0] |= 0x00100000u;
}
inline void equip_evento_telemetria::clear_has_es_id_evento_percurso() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void equip_evento_telemetria::clear_es_id_evento_percurso() {
  es_id_evento_percurso_ = 0;
  clear_has_es_id_evento_percurso();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_id_evento_percurso() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_id_evento_percurso)
  return es_id_evento_percurso_;
}
inline void equip_evento_telemetria::set_es_id_evento_percurso(::google::protobuf::int32 value) {
  set_has_es_id_evento_percurso();
  es_id_evento_percurso_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_id_evento_percurso)
}

// optional int32 es_pct_evento = 22;
inline bool equip_evento_telemetria::has_es_pct_evento() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void equip_evento_telemetria::set_has_es_pct_evento() {
  _has_bits_[0] |= 0x00200000u;
}
inline void equip_evento_telemetria::clear_has_es_pct_evento() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void equip_evento_telemetria::clear_es_pct_evento() {
  es_pct_evento_ = 0;
  clear_has_es_pct_evento();
}
inline ::google::protobuf::int32 equip_evento_telemetria::es_pct_evento() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.es_pct_evento)
  return es_pct_evento_;
}
inline void equip_evento_telemetria::set_es_pct_evento(::google::protobuf::int32 value) {
  set_has_es_pct_evento();
  es_pct_evento_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.es_pct_evento)
}

// optional int32 ev_vel_max_alcancada = 23;
inline bool equip_evento_telemetria::has_ev_vel_max_alcancada() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_vel_max_alcancada() {
  _has_bits_[0] |= 0x00400000u;
}
inline void equip_evento_telemetria::clear_has_ev_vel_max_alcancada() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void equip_evento_telemetria::clear_ev_vel_max_alcancada() {
  ev_vel_max_alcancada_ = 0;
  clear_has_ev_vel_max_alcancada();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_vel_max_alcancada() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_vel_max_alcancada)
  return ev_vel_max_alcancada_;
}
inline void equip_evento_telemetria::set_ev_vel_max_alcancada(::google::protobuf::int32 value) {
  set_has_ev_vel_max_alcancada();
  ev_vel_max_alcancada_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_vel_max_alcancada)
}

// optional int32 ev_vel_media = 24;
inline bool equip_evento_telemetria::has_ev_vel_media() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_vel_media() {
  _has_bits_[0] |= 0x00800000u;
}
inline void equip_evento_telemetria::clear_has_ev_vel_media() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void equip_evento_telemetria::clear_ev_vel_media() {
  ev_vel_media_ = 0;
  clear_has_ev_vel_media();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_vel_media() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_vel_media)
  return ev_vel_media_;
}
inline void equip_evento_telemetria::set_ev_vel_media(::google::protobuf::int32 value) {
  set_has_ev_vel_media();
  ev_vel_media_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_vel_media)
}

// optional int32 ev_rot_maxima = 25;
inline bool equip_evento_telemetria::has_ev_rot_maxima() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_rot_maxima() {
  _has_bits_[0] |= 0x01000000u;
}
inline void equip_evento_telemetria::clear_has_ev_rot_maxima() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void equip_evento_telemetria::clear_ev_rot_maxima() {
  ev_rot_maxima_ = 0;
  clear_has_ev_rot_maxima();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_rot_maxima() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_rot_maxima)
  return ev_rot_maxima_;
}
inline void equip_evento_telemetria::set_ev_rot_maxima(::google::protobuf::int32 value) {
  set_has_ev_rot_maxima();
  ev_rot_maxima_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_rot_maxima)
}

// optional int32 ev_embre_kmrodado = 26;
inline bool equip_evento_telemetria::has_ev_embre_kmrodado() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_embre_kmrodado() {
  _has_bits_[0] |= 0x02000000u;
}
inline void equip_evento_telemetria::clear_has_ev_embre_kmrodado() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void equip_evento_telemetria::clear_ev_embre_kmrodado() {
  ev_embre_kmrodado_ = 0;
  clear_has_ev_embre_kmrodado();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_embre_kmrodado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_embre_kmrodado)
  return ev_embre_kmrodado_;
}
inline void equip_evento_telemetria::set_ev_embre_kmrodado(::google::protobuf::int32 value) {
  set_has_ev_embre_kmrodado();
  ev_embre_kmrodado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_embre_kmrodado)
}

// optional int32 ev_freio_kmrodado = 27;
inline bool equip_evento_telemetria::has_ev_freio_kmrodado() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_freio_kmrodado() {
  _has_bits_[0] |= 0x04000000u;
}
inline void equip_evento_telemetria::clear_has_ev_freio_kmrodado() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void equip_evento_telemetria::clear_ev_freio_kmrodado() {
  ev_freio_kmrodado_ = 0;
  clear_has_ev_freio_kmrodado();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_freio_kmrodado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_freio_kmrodado)
  return ev_freio_kmrodado_;
}
inline void equip_evento_telemetria::set_ev_freio_kmrodado(::google::protobuf::int32 value) {
  set_has_ev_freio_kmrodado();
  ev_freio_kmrodado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_freio_kmrodado)
}

// optional int32 ev_tempo_freiomotor = 28;
inline bool equip_evento_telemetria::has_ev_tempo_freiomotor() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_tempo_freiomotor() {
  _has_bits_[0] |= 0x08000000u;
}
inline void equip_evento_telemetria::clear_has_ev_tempo_freiomotor() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void equip_evento_telemetria::clear_ev_tempo_freiomotor() {
  ev_tempo_freiomotor_ = 0;
  clear_has_ev_tempo_freiomotor();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_tempo_freiomotor() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_tempo_freiomotor)
  return ev_tempo_freiomotor_;
}
inline void equip_evento_telemetria::set_ev_tempo_freiomotor(::google::protobuf::int32 value) {
  set_has_ev_tempo_freiomotor();
  ev_tempo_freiomotor_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_tempo_freiomotor)
}

// optional int32 ev_vel_lib_embre = 29;
inline bool equip_evento_telemetria::has_ev_vel_lib_embre() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_vel_lib_embre() {
  _has_bits_[0] |= 0x10000000u;
}
inline void equip_evento_telemetria::clear_has_ev_vel_lib_embre() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void equip_evento_telemetria::clear_ev_vel_lib_embre() {
  ev_vel_lib_embre_ = 0;
  clear_has_ev_vel_lib_embre();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_vel_lib_embre() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_vel_lib_embre)
  return ev_vel_lib_embre_;
}
inline void equip_evento_telemetria::set_ev_vel_lib_embre(::google::protobuf::int32 value) {
  set_has_ev_vel_lib_embre();
  ev_vel_lib_embre_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_vel_lib_embre)
}

// optional int32 ev_rot_embre = 30;
inline bool equip_evento_telemetria::has_ev_rot_embre() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_rot_embre() {
  _has_bits_[0] |= 0x20000000u;
}
inline void equip_evento_telemetria::clear_has_ev_rot_embre() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void equip_evento_telemetria::clear_ev_rot_embre() {
  ev_rot_embre_ = 0;
  clear_has_ev_rot_embre();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_rot_embre() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_rot_embre)
  return ev_rot_embre_;
}
inline void equip_evento_telemetria::set_ev_rot_embre(::google::protobuf::int32 value) {
  set_has_ev_rot_embre();
  ev_rot_embre_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_rot_embre)
}

// optional int32 ev_tempo_duracao = 31;
inline bool equip_evento_telemetria::has_ev_tempo_duracao() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_tempo_duracao() {
  _has_bits_[0] |= 0x40000000u;
}
inline void equip_evento_telemetria::clear_has_ev_tempo_duracao() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void equip_evento_telemetria::clear_ev_tempo_duracao() {
  ev_tempo_duracao_ = 0;
  clear_has_ev_tempo_duracao();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_tempo_duracao() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_tempo_duracao)
  return ev_tempo_duracao_;
}
inline void equip_evento_telemetria::set_ev_tempo_duracao(::google::protobuf::int32 value) {
  set_has_ev_tempo_duracao();
  ev_tempo_duracao_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_tempo_duracao)
}

// optional int32 ev_vel_referencia = 32;
inline bool equip_evento_telemetria::has_ev_vel_referencia() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_vel_referencia() {
  _has_bits_[0] |= 0x80000000u;
}
inline void equip_evento_telemetria::clear_has_ev_vel_referencia() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void equip_evento_telemetria::clear_ev_vel_referencia() {
  ev_vel_referencia_ = 0;
  clear_has_ev_vel_referencia();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_vel_referencia() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_vel_referencia)
  return ev_vel_referencia_;
}
inline void equip_evento_telemetria::set_ev_vel_referencia(::google::protobuf::int32 value) {
  set_has_ev_vel_referencia();
  ev_vel_referencia_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_vel_referencia)
}

// optional int32 ev_vel_inicial = 33;
inline bool equip_evento_telemetria::has_ev_vel_inicial() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_vel_inicial() {
  _has_bits_[1] |= 0x00000001u;
}
inline void equip_evento_telemetria::clear_has_ev_vel_inicial() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void equip_evento_telemetria::clear_ev_vel_inicial() {
  ev_vel_inicial_ = 0;
  clear_has_ev_vel_inicial();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_vel_inicial() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_vel_inicial)
  return ev_vel_inicial_;
}
inline void equip_evento_telemetria::set_ev_vel_inicial(::google::protobuf::int32 value) {
  set_has_ev_vel_inicial();
  ev_vel_inicial_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_vel_inicial)
}

// optional int32 ev_vel_final = 34;
inline bool equip_evento_telemetria::has_ev_vel_final() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_vel_final() {
  _has_bits_[1] |= 0x00000002u;
}
inline void equip_evento_telemetria::clear_has_ev_vel_final() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void equip_evento_telemetria::clear_ev_vel_final() {
  ev_vel_final_ = 0;
  clear_has_ev_vel_final();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_vel_final() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_vel_final)
  return ev_vel_final_;
}
inline void equip_evento_telemetria::set_ev_vel_final(::google::protobuf::int32 value) {
  set_has_ev_vel_final();
  ev_vel_final_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_vel_final)
}

// optional int32 ev_vel_max_evento = 35;
inline bool equip_evento_telemetria::has_ev_vel_max_evento() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_vel_max_evento() {
  _has_bits_[1] |= 0x00000004u;
}
inline void equip_evento_telemetria::clear_has_ev_vel_max_evento() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void equip_evento_telemetria::clear_ev_vel_max_evento() {
  ev_vel_max_evento_ = 0;
  clear_has_ev_vel_max_evento();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_vel_max_evento() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_vel_max_evento)
  return ev_vel_max_evento_;
}
inline void equip_evento_telemetria::set_ev_vel_max_evento(::google::protobuf::int32 value) {
  set_has_ev_vel_max_evento();
  ev_vel_max_evento_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_vel_max_evento)
}

// optional int32 ev_temp_max_01v = 36;
inline bool equip_evento_telemetria::has_ev_temp_max_01v() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_temp_max_01v() {
  _has_bits_[1] |= 0x00000008u;
}
inline void equip_evento_telemetria::clear_has_ev_temp_max_01v() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void equip_evento_telemetria::clear_ev_temp_max_01v() {
  ev_temp_max_01v_ = 0;
  clear_has_ev_temp_max_01v();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_temp_max_01v() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_temp_max_01v)
  return ev_temp_max_01v_;
}
inline void equip_evento_telemetria::set_ev_temp_max_01v(::google::protobuf::int32 value) {
  set_has_ev_temp_max_01v();
  ev_temp_max_01v_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_temp_max_01v)
}

// optional int32 ev_tensao_01v = 37;
inline bool equip_evento_telemetria::has_ev_tensao_01v() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_tensao_01v() {
  _has_bits_[1] |= 0x00000010u;
}
inline void equip_evento_telemetria::clear_has_ev_tensao_01v() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void equip_evento_telemetria::clear_ev_tensao_01v() {
  ev_tensao_01v_ = 0;
  clear_has_ev_tensao_01v();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_tensao_01v() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_tensao_01v)
  return ev_tensao_01v_;
}
inline void equip_evento_telemetria::set_ev_tensao_01v(::google::protobuf::int32 value) {
  set_has_ev_tensao_01v();
  ev_tensao_01v_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_tensao_01v)
}

// optional int32 ev_rot_permitido = 38;
inline bool equip_evento_telemetria::has_ev_rot_permitido() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void equip_evento_telemetria::set_has_ev_rot_permitido() {
  _has_bits_[1] |= 0x00000020u;
}
inline void equip_evento_telemetria::clear_has_ev_rot_permitido() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void equip_evento_telemetria::clear_ev_rot_permitido() {
  ev_rot_permitido_ = 0;
  clear_has_ev_rot_permitido();
}
inline ::google::protobuf::int32 equip_evento_telemetria::ev_rot_permitido() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_evento_telemetria.ev_rot_permitido)
  return ev_rot_permitido_;
}
inline void equip_evento_telemetria::set_ev_rot_permitido(::google::protobuf::int32 value) {
  set_has_ev_rot_permitido();
  ev_rot_permitido_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_evento_telemetria.ev_rot_permitido)
}

// -------------------------------------------------------------------

// equip_flags

// optional int32 bloqueio = 1;
inline bool equip_flags::has_bloqueio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_flags::set_has_bloqueio() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_flags::clear_has_bloqueio() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_flags::clear_bloqueio() {
  bloqueio_ = 0;
  clear_has_bloqueio();
}
inline ::google::protobuf::int32 equip_flags::bloqueio() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.bloqueio)
  return bloqueio_;
}
inline void equip_flags::set_bloqueio(::google::protobuf::int32 value) {
  set_has_bloqueio();
  bloqueio_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.bloqueio)
}

// optional int32 alerta_int = 2;
inline bool equip_flags::has_alerta_int() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void equip_flags::set_has_alerta_int() {
  _has_bits_[0] |= 0x00000002u;
}
inline void equip_flags::clear_has_alerta_int() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void equip_flags::clear_alerta_int() {
  alerta_int_ = 0;
  clear_has_alerta_int();
}
inline ::google::protobuf::int32 equip_flags::alerta_int() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.alerta_int)
  return alerta_int_;
}
inline void equip_flags::set_alerta_int(::google::protobuf::int32 value) {
  set_has_alerta_int();
  alerta_int_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.alerta_int)
}

// optional int32 somente_posicao = 3;
inline bool equip_flags::has_somente_posicao() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void equip_flags::set_has_somente_posicao() {
  _has_bits_[0] |= 0x00000004u;
}
inline void equip_flags::clear_has_somente_posicao() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void equip_flags::clear_somente_posicao() {
  somente_posicao_ = 0;
  clear_has_somente_posicao();
}
inline ::google::protobuf::int32 equip_flags::somente_posicao() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.somente_posicao)
  return somente_posicao_;
}
inline void equip_flags::set_somente_posicao(::google::protobuf::int32 value) {
  set_has_somente_posicao();
  somente_posicao_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.somente_posicao)
}

// optional int32 entrada_ponto = 4;
inline bool equip_flags::has_entrada_ponto() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void equip_flags::set_has_entrada_ponto() {
  _has_bits_[0] |= 0x00000008u;
}
inline void equip_flags::clear_has_entrada_ponto() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void equip_flags::clear_entrada_ponto() {
  entrada_ponto_ = 0;
  clear_has_entrada_ponto();
}
inline ::google::protobuf::int32 equip_flags::entrada_ponto() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.entrada_ponto)
  return entrada_ponto_;
}
inline void equip_flags::set_entrada_ponto(::google::protobuf::int32 value) {
  set_has_entrada_ponto();
  entrada_ponto_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.entrada_ponto)
}

// optional int32 saida_ponto = 5;
inline bool equip_flags::has_saida_ponto() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void equip_flags::set_has_saida_ponto() {
  _has_bits_[0] |= 0x00000010u;
}
inline void equip_flags::clear_has_saida_ponto() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void equip_flags::clear_saida_ponto() {
  saida_ponto_ = 0;
  clear_has_saida_ponto();
}
inline ::google::protobuf::int32 equip_flags::saida_ponto() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.saida_ponto)
  return saida_ponto_;
}
inline void equip_flags::set_saida_ponto(::google::protobuf::int32 value) {
  set_has_saida_ponto();
  saida_ponto_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.saida_ponto)
}

// optional int32 alerta_bat = 6;
inline bool equip_flags::has_alerta_bat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void equip_flags::set_has_alerta_bat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void equip_flags::clear_has_alerta_bat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void equip_flags::clear_alerta_bat() {
  alerta_bat_ = 0;
  clear_has_alerta_bat();
}
inline ::google::protobuf::int32 equip_flags::alerta_bat() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.alerta_bat)
  return alerta_bat_;
}
inline void equip_flags::set_alerta_bat(::google::protobuf::int32 value) {
  set_has_alerta_bat();
  alerta_bat_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.alerta_bat)
}

// optional int32 pad1 = 7;
inline bool equip_flags::has_pad1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void equip_flags::set_has_pad1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void equip_flags::clear_has_pad1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void equip_flags::clear_pad1() {
  pad1_ = 0;
  clear_has_pad1();
}
inline ::google::protobuf::int32 equip_flags::pad1() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.pad1)
  return pad1_;
}
inline void equip_flags::set_pad1(::google::protobuf::int32 value) {
  set_has_pad1();
  pad1_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.pad1)
}

// optional int32 periferico = 8;
inline bool equip_flags::has_periferico() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void equip_flags::set_has_periferico() {
  _has_bits_[0] |= 0x00000080u;
}
inline void equip_flags::clear_has_periferico() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void equip_flags::clear_periferico() {
  periferico_ = 0;
  clear_has_periferico();
}
inline ::google::protobuf::int32 equip_flags::periferico() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.periferico)
  return periferico_;
}
inline void equip_flags::set_periferico(::google::protobuf::int32 value) {
  set_has_periferico();
  periferico_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.periferico)
}

// optional int32 cod_periferico = 9;
inline bool equip_flags::has_cod_periferico() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void equip_flags::set_has_cod_periferico() {
  _has_bits_[0] |= 0x00000100u;
}
inline void equip_flags::clear_has_cod_periferico() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void equip_flags::clear_cod_periferico() {
  cod_periferico_ = 0;
  clear_has_cod_periferico();
}
inline ::google::protobuf::int32 equip_flags::cod_periferico() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.cod_periferico)
  return cod_periferico_;
}
inline void equip_flags::set_cod_periferico(::google::protobuf::int32 value) {
  set_has_cod_periferico();
  cod_periferico_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.cod_periferico)
}

// optional int32 pad2 = 10;
inline bool equip_flags::has_pad2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void equip_flags::set_has_pad2() {
  _has_bits_[0] |= 0x00000200u;
}
inline void equip_flags::clear_has_pad2() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void equip_flags::clear_pad2() {
  pad2_ = 0;
  clear_has_pad2();
}
inline ::google::protobuf::int32 equip_flags::pad2() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.pad2)
  return pad2_;
}
inline void equip_flags::set_pad2(::google::protobuf::int32 value) {
  set_has_pad2();
  pad2_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.pad2)
}

// optional int32 viagem_aberta = 11;
inline bool equip_flags::has_viagem_aberta() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void equip_flags::set_has_viagem_aberta() {
  _has_bits_[0] |= 0x00000400u;
}
inline void equip_flags::clear_has_viagem_aberta() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void equip_flags::clear_viagem_aberta() {
  viagem_aberta_ = 0;
  clear_has_viagem_aberta();
}
inline ::google::protobuf::int32 equip_flags::viagem_aberta() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.viagem_aberta)
  return viagem_aberta_;
}
inline void equip_flags::set_viagem_aberta(::google::protobuf::int32 value) {
  set_has_viagem_aberta();
  viagem_aberta_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.viagem_aberta)
}

// optional int32 viagem_fechada = 12;
inline bool equip_flags::has_viagem_fechada() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void equip_flags::set_has_viagem_fechada() {
  _has_bits_[0] |= 0x00000800u;
}
inline void equip_flags::clear_has_viagem_fechada() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void equip_flags::clear_viagem_fechada() {
  viagem_fechada_ = 0;
  clear_has_viagem_fechada();
}
inline ::google::protobuf::int32 equip_flags::viagem_fechada() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.viagem_fechada)
  return viagem_fechada_;
}
inline void equip_flags::set_viagem_fechada(::google::protobuf::int32 value) {
  set_has_viagem_fechada();
  viagem_fechada_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.viagem_fechada)
}

// optional int32 fuga_cerca = 13;
inline bool equip_flags::has_fuga_cerca() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void equip_flags::set_has_fuga_cerca() {
  _has_bits_[0] |= 0x00001000u;
}
inline void equip_flags::clear_has_fuga_cerca() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void equip_flags::clear_fuga_cerca() {
  fuga_cerca_ = 0;
  clear_has_fuga_cerca();
}
inline ::google::protobuf::int32 equip_flags::fuga_cerca() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.fuga_cerca)
  return fuga_cerca_;
}
inline void equip_flags::set_fuga_cerca(::google::protobuf::int32 value) {
  set_has_fuga_cerca();
  fuga_cerca_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.fuga_cerca)
}

// optional int32 ponto_de_ref = 14;
inline bool equip_flags::has_ponto_de_ref() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void equip_flags::set_has_ponto_de_ref() {
  _has_bits_[0] |= 0x00002000u;
}
inline void equip_flags::clear_has_ponto_de_ref() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void equip_flags::clear_ponto_de_ref() {
  ponto_de_ref_ = 0;
  clear_has_ponto_de_ref();
}
inline ::google::protobuf::int32 equip_flags::ponto_de_ref() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.ponto_de_ref)
  return ponto_de_ref_;
}
inline void equip_flags::set_ponto_de_ref(::google::protobuf::int32 value) {
  set_has_ponto_de_ref();
  ponto_de_ref_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.ponto_de_ref)
}

// optional int32 ignicao = 15;
inline bool equip_flags::has_ignicao() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void equip_flags::set_has_ignicao() {
  _has_bits_[0] |= 0x00004000u;
}
inline void equip_flags::clear_has_ignicao() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void equip_flags::clear_ignicao() {
  ignicao_ = 0;
  clear_has_ignicao();
}
inline ::google::protobuf::int32 equip_flags::ignicao() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.ignicao)
  return ignicao_;
}
inline void equip_flags::set_ignicao(::google::protobuf::int32 value) {
  set_has_ignicao();
  ignicao_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.ignicao)
}

// optional int32 tem_mensagem = 16;
inline bool equip_flags::has_tem_mensagem() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void equip_flags::set_has_tem_mensagem() {
  _has_bits_[0] |= 0x00008000u;
}
inline void equip_flags::clear_has_tem_mensagem() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void equip_flags::clear_tem_mensagem() {
  tem_mensagem_ = 0;
  clear_has_tem_mensagem();
}
inline ::google::protobuf::int32 equip_flags::tem_mensagem() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.tem_mensagem)
  return tem_mensagem_;
}
inline void equip_flags::set_tem_mensagem(::google::protobuf::int32 value) {
  set_has_tem_mensagem();
  tem_mensagem_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.tem_mensagem)
}

// optional int32 anti_theft = 17;
inline bool equip_flags::has_anti_theft() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void equip_flags::set_has_anti_theft() {
  _has_bits_[0] |= 0x00010000u;
}
inline void equip_flags::clear_has_anti_theft() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void equip_flags::clear_anti_theft() {
  anti_theft_ = 0;
  clear_has_anti_theft();
}
inline ::google::protobuf::int32 equip_flags::anti_theft() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_flags.anti_theft)
  return anti_theft_;
}
inline void equip_flags::set_anti_theft(::google::protobuf::int32 value) {
  set_has_anti_theft();
  anti_theft_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_flags.anti_theft)
}

// -------------------------------------------------------------------

// equip_contrato

// optional int64 esn = 1;
inline bool equip_contrato::has_esn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_contrato::set_has_esn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_contrato::clear_has_esn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_contrato::clear_esn() {
  esn_ = GOOGLE_LONGLONG(0);
  clear_has_esn();
}
inline ::google::protobuf::int64 equip_contrato::esn() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.esn)
  return esn_;
}
inline void equip_contrato::set_esn(::google::protobuf::int64 value) {
  set_has_esn();
  esn_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.esn)
}

// optional int32 clioid = 2;
inline bool equip_contrato::has_clioid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void equip_contrato::set_has_clioid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void equip_contrato::clear_has_clioid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void equip_contrato::clear_clioid() {
  clioid_ = 0;
  clear_has_clioid();
}
inline ::google::protobuf::int32 equip_contrato::clioid() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.clioid)
  return clioid_;
}
inline void equip_contrato::set_clioid(::google::protobuf::int32 value) {
  set_has_clioid();
  clioid_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.clioid)
}

// repeated int32 gerenciadora = 3;
inline int equip_contrato::gerenciadora_size() const {
  return gerenciadora_.size();
}
inline void equip_contrato::clear_gerenciadora() {
  gerenciadora_.Clear();
}
inline ::google::protobuf::int32 equip_contrato::gerenciadora(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.gerenciadora)
  return gerenciadora_.Get(index);
}
inline void equip_contrato::set_gerenciadora(int index, ::google::protobuf::int32 value) {
  gerenciadora_.Set(index, value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.gerenciadora)
}
inline void equip_contrato::add_gerenciadora(::google::protobuf::int32 value) {
  gerenciadora_.Add(value);
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_contrato.gerenciadora)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_contrato::gerenciadora() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_contrato.gerenciadora)
  return gerenciadora_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_contrato::mutable_gerenciadora() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_contrato.gerenciadora)
  return &gerenciadora_;
}

// optional int32 connumero = 4;
inline bool equip_contrato::has_connumero() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void equip_contrato::set_has_connumero() {
  _has_bits_[0] |= 0x00000008u;
}
inline void equip_contrato::clear_has_connumero() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void equip_contrato::clear_connumero() {
  connumero_ = 0;
  clear_has_connumero();
}
inline ::google::protobuf::int32 equip_contrato::connumero() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.connumero)
  return connumero_;
}
inline void equip_contrato::set_connumero(::google::protobuf::int32 value) {
  set_has_connumero();
  connumero_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.connumero)
}

// optional int32 veioid = 5;
inline bool equip_contrato::has_veioid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void equip_contrato::set_has_veioid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void equip_contrato::clear_has_veioid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void equip_contrato::clear_veioid() {
  veioid_ = 0;
  clear_has_veioid();
}
inline ::google::protobuf::int32 equip_contrato::veioid() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.veioid)
  return veioid_;
}
inline void equip_contrato::set_veioid(::google::protobuf::int32 value) {
  set_has_veioid();
  veioid_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.veioid)
}

// optional int32 tipo_contrato = 6;
inline bool equip_contrato::has_tipo_contrato() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void equip_contrato::set_has_tipo_contrato() {
  _has_bits_[0] |= 0x00000020u;
}
inline void equip_contrato::clear_has_tipo_contrato() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void equip_contrato::clear_tipo_contrato() {
  tipo_contrato_ = 0;
  clear_has_tipo_contrato();
}
inline ::google::protobuf::int32 equip_contrato::tipo_contrato() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.tipo_contrato)
  return tipo_contrato_;
}
inline void equip_contrato::set_tipo_contrato(::google::protobuf::int32 value) {
  set_has_tipo_contrato();
  tipo_contrato_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.tipo_contrato)
}

// optional int32 classe = 7;
inline bool equip_contrato::has_classe() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void equip_contrato::set_has_classe() {
  _has_bits_[0] |= 0x00000040u;
}
inline void equip_contrato::clear_has_classe() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void equip_contrato::clear_classe() {
  classe_ = 0;
  clear_has_classe();
}
inline ::google::protobuf::int32 equip_contrato::classe() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.classe)
  return classe_;
}
inline void equip_contrato::set_classe(::google::protobuf::int32 value) {
  set_has_classe();
  classe_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.classe)
}

// optional int32 protocolo = 8;
inline bool equip_contrato::has_protocolo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void equip_contrato::set_has_protocolo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void equip_contrato::clear_has_protocolo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void equip_contrato::clear_protocolo() {
  protocolo_ = 0;
  clear_has_protocolo();
}
inline ::google::protobuf::int32 equip_contrato::protocolo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.protocolo)
  return protocolo_;
}
inline void equip_contrato::set_protocolo(::google::protobuf::int32 value) {
  set_has_protocolo();
  protocolo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.protocolo)
}

// optional int32 serial = 9;
inline bool equip_contrato::has_serial() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void equip_contrato::set_has_serial() {
  _has_bits_[0] |= 0x00000100u;
}
inline void equip_contrato::clear_has_serial() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void equip_contrato::clear_serial() {
  serial_ = 0;
  clear_has_serial();
}
inline ::google::protobuf::int32 equip_contrato::serial() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.serial)
  return serial_;
}
inline void equip_contrato::set_serial(::google::protobuf::int32 value) {
  set_has_serial();
  serial_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.serial)
}

// optional int32 porta_panico = 10;
inline bool equip_contrato::has_porta_panico() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void equip_contrato::set_has_porta_panico() {
  _has_bits_[0] |= 0x00000200u;
}
inline void equip_contrato::clear_has_porta_panico() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void equip_contrato::clear_porta_panico() {
  porta_panico_ = 0;
  clear_has_porta_panico();
}
inline ::google::protobuf::int32 equip_contrato::porta_panico() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.porta_panico)
  return porta_panico_;
}
inline void equip_contrato::set_porta_panico(::google::protobuf::int32 value) {
  set_has_porta_panico();
  porta_panico_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.porta_panico)
}

// optional int32 porta_bloqueio = 11;
inline bool equip_contrato::has_porta_bloqueio() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void equip_contrato::set_has_porta_bloqueio() {
  _has_bits_[0] |= 0x00000400u;
}
inline void equip_contrato::clear_has_porta_bloqueio() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void equip_contrato::clear_porta_bloqueio() {
  porta_bloqueio_ = 0;
  clear_has_porta_bloqueio();
}
inline ::google::protobuf::int32 equip_contrato::porta_bloqueio() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.porta_bloqueio)
  return porta_bloqueio_;
}
inline void equip_contrato::set_porta_bloqueio(::google::protobuf::int32 value) {
  set_has_porta_bloqueio();
  porta_bloqueio_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.porta_bloqueio)
}

// optional int32 id = 12;
inline bool equip_contrato::has_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void equip_contrato::set_has_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void equip_contrato::clear_has_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void equip_contrato::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 equip_contrato::id() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.id)
  return id_;
}
inline void equip_contrato::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.id)
}

// optional int32 is_sasgc = 13;
inline bool equip_contrato::has_is_sasgc() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void equip_contrato::set_has_is_sasgc() {
  _has_bits_[0] |= 0x00001000u;
}
inline void equip_contrato::clear_has_is_sasgc() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void equip_contrato::clear_is_sasgc() {
  is_sasgc_ = 0;
  clear_has_is_sasgc();
}
inline ::google::protobuf::int32 equip_contrato::is_sasgc() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.is_sasgc)
  return is_sasgc_;
}
inline void equip_contrato::set_is_sasgc(::google::protobuf::int32 value) {
  set_has_is_sasgc();
  is_sasgc_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.is_sasgc)
}

// optional int32 tipo_veiculo = 14;
inline bool equip_contrato::has_tipo_veiculo() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void equip_contrato::set_has_tipo_veiculo() {
  _has_bits_[0] |= 0x00002000u;
}
inline void equip_contrato::clear_has_tipo_veiculo() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void equip_contrato::clear_tipo_veiculo() {
  tipo_veiculo_ = 0;
  clear_has_tipo_veiculo();
}
inline ::google::protobuf::int32 equip_contrato::tipo_veiculo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_contrato.tipo_veiculo)
  return tipo_veiculo_;
}
inline void equip_contrato::set_tipo_veiculo(::google::protobuf::int32 value) {
  set_has_tipo_veiculo();
  tipo_veiculo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_contrato.tipo_veiculo)
}

// -------------------------------------------------------------------

// equip_posicao

// optional int32 datahora = 1;
inline bool equip_posicao::has_datahora() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void equip_posicao::set_has_datahora() {
  _has_bits_[0] |= 0x00000001u;
}
inline void equip_posicao::clear_has_datahora() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void equip_posicao::clear_datahora() {
  datahora_ = 0;
  clear_has_datahora();
}
inline ::google::protobuf::int32 equip_posicao::datahora() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.datahora)
  return datahora_;
}
inline void equip_posicao::set_datahora(::google::protobuf::int32 value) {
  set_has_datahora();
  datahora_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.datahora)
}

// optional int32 datachegada = 2;
inline bool equip_posicao::has_datachegada() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void equip_posicao::set_has_datachegada() {
  _has_bits_[0] |= 0x00000002u;
}
inline void equip_posicao::clear_has_datachegada() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void equip_posicao::clear_datachegada() {
  datachegada_ = 0;
  clear_has_datachegada();
}
inline ::google::protobuf::int32 equip_posicao::datachegada() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.datachegada)
  return datachegada_;
}
inline void equip_posicao::set_datachegada(::google::protobuf::int32 value) {
  set_has_datachegada();
  datachegada_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.datachegada)
}

// repeated int32 entrada = 3;
inline int equip_posicao::entrada_size() const {
  return entrada_.size();
}
inline void equip_posicao::clear_entrada() {
  entrada_.Clear();
}
inline ::google::protobuf::int32 equip_posicao::entrada(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.entrada)
  return entrada_.Get(index);
}
inline void equip_posicao::set_entrada(int index, ::google::protobuf::int32 value) {
  entrada_.Set(index, value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.entrada)
}
inline void equip_posicao::add_entrada(::google::protobuf::int32 value) {
  entrada_.Add(value);
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_posicao.entrada)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_posicao::entrada() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_posicao.entrada)
  return entrada_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_posicao::mutable_entrada() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_posicao.entrada)
  return &entrada_;
}

// repeated int32 saida = 4;
inline int equip_posicao::saida_size() const {
  return saida_.size();
}
inline void equip_posicao::clear_saida() {
  saida_.Clear();
}
inline ::google::protobuf::int32 equip_posicao::saida(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.saida)
  return saida_.Get(index);
}
inline void equip_posicao::set_saida(int index, ::google::protobuf::int32 value) {
  saida_.Set(index, value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.saida)
}
inline void equip_posicao::add_saida(::google::protobuf::int32 value) {
  saida_.Add(value);
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_posicao.saida)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_posicao::saida() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_posicao.saida)
  return saida_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_posicao::mutable_saida() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_posicao.saida)
  return &saida_;
}

// optional double lat2 = 5;
inline bool equip_posicao::has_lat2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void equip_posicao::set_has_lat2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void equip_posicao::clear_has_lat2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void equip_posicao::clear_lat2() {
  lat2_ = 0;
  clear_has_lat2();
}
inline double equip_posicao::lat2() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.lat2)
  return lat2_;
}
inline void equip_posicao::set_lat2(double value) {
  set_has_lat2();
  lat2_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.lat2)
}

// optional double long2 = 6;
inline bool equip_posicao::has_long2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void equip_posicao::set_has_long2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void equip_posicao::clear_has_long2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void equip_posicao::clear_long2() {
  long2_ = 0;
  clear_has_long2();
}
inline double equip_posicao::long2() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.long2)
  return long2_;
}
inline void equip_posicao::set_long2(double value) {
  set_has_long2();
  long2_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.long2)
}

// optional .pacote_posicao.t32_odo_vel odo_vel_gps = 7;
inline bool equip_posicao::has_odo_vel_gps() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void equip_posicao::set_has_odo_vel_gps() {
  _has_bits_[0] |= 0x00000040u;
}
inline void equip_posicao::clear_has_odo_vel_gps() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void equip_posicao::clear_odo_vel_gps() {
  if (odo_vel_gps_ != NULL) odo_vel_gps_->::pacote_posicao::t32_odo_vel::Clear();
  clear_has_odo_vel_gps();
}
inline const ::pacote_posicao::t32_odo_vel& equip_posicao::odo_vel_gps() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.odo_vel_gps)
  return odo_vel_gps_ != NULL ? *odo_vel_gps_ : *default_instance_->odo_vel_gps_;
}
inline ::pacote_posicao::t32_odo_vel* equip_posicao::mutable_odo_vel_gps() {
  set_has_odo_vel_gps();
  if (odo_vel_gps_ == NULL) {
    odo_vel_gps_ = new ::pacote_posicao::t32_odo_vel;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.odo_vel_gps)
  return odo_vel_gps_;
}
inline ::pacote_posicao::t32_odo_vel* equip_posicao::release_odo_vel_gps() {
  clear_has_odo_vel_gps();
  ::pacote_posicao::t32_odo_vel* temp = odo_vel_gps_;
  odo_vel_gps_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_odo_vel_gps(::pacote_posicao::t32_odo_vel* odo_vel_gps) {
  delete odo_vel_gps_;
  odo_vel_gps_ = odo_vel_gps;
  if (odo_vel_gps) {
    set_has_odo_vel_gps();
  } else {
    clear_has_odo_vel_gps();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.odo_vel_gps)
}

// optional int32 id_ponto = 8;
inline bool equip_posicao::has_id_ponto() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void equip_posicao::set_has_id_ponto() {
  _has_bits_[0] |= 0x00000080u;
}
inline void equip_posicao::clear_has_id_ponto() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void equip_posicao::clear_id_ponto() {
  id_ponto_ = 0;
  clear_has_id_ponto();
}
inline ::google::protobuf::int32 equip_posicao::id_ponto() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.id_ponto)
  return id_ponto_;
}
inline void equip_posicao::set_id_ponto(::google::protobuf::int32 value) {
  set_has_id_ponto();
  id_ponto_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.id_ponto)
}

// optional .pacote_posicao.t32_flags flags = 9;
inline bool equip_posicao::has_flags() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void equip_posicao::set_has_flags() {
  _has_bits_[0] |= 0x00000100u;
}
inline void equip_posicao::clear_has_flags() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void equip_posicao::clear_flags() {
  if (flags_ != NULL) flags_->::pacote_posicao::t32_flags::Clear();
  clear_has_flags();
}
inline const ::pacote_posicao::t32_flags& equip_posicao::flags() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.flags)
  return flags_ != NULL ? *flags_ : *default_instance_->flags_;
}
inline ::pacote_posicao::t32_flags* equip_posicao::mutable_flags() {
  set_has_flags();
  if (flags_ == NULL) {
    flags_ = new ::pacote_posicao::t32_flags;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.flags)
  return flags_;
}
inline ::pacote_posicao::t32_flags* equip_posicao::release_flags() {
  clear_has_flags();
  ::pacote_posicao::t32_flags* temp = flags_;
  flags_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_flags(::pacote_posicao::t32_flags* flags) {
  delete flags_;
  flags_ = flags;
  if (flags) {
    set_has_flags();
  } else {
    clear_has_flags();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.flags)
}

// optional .pacote_posicao.t32_csq_rot csq_id_rota = 10;
inline bool equip_posicao::has_csq_id_rota() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void equip_posicao::set_has_csq_id_rota() {
  _has_bits_[0] |= 0x00000200u;
}
inline void equip_posicao::clear_has_csq_id_rota() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void equip_posicao::clear_csq_id_rota() {
  if (csq_id_rota_ != NULL) csq_id_rota_->::pacote_posicao::t32_csq_rot::Clear();
  clear_has_csq_id_rota();
}
inline const ::pacote_posicao::t32_csq_rot& equip_posicao::csq_id_rota() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.csq_id_rota)
  return csq_id_rota_ != NULL ? *csq_id_rota_ : *default_instance_->csq_id_rota_;
}
inline ::pacote_posicao::t32_csq_rot* equip_posicao::mutable_csq_id_rota() {
  set_has_csq_id_rota();
  if (csq_id_rota_ == NULL) {
    csq_id_rota_ = new ::pacote_posicao::t32_csq_rot;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.csq_id_rota)
  return csq_id_rota_;
}
inline ::pacote_posicao::t32_csq_rot* equip_posicao::release_csq_id_rota() {
  clear_has_csq_id_rota();
  ::pacote_posicao::t32_csq_rot* temp = csq_id_rota_;
  csq_id_rota_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_csq_id_rota(::pacote_posicao::t32_csq_rot* csq_id_rota) {
  delete csq_id_rota_;
  csq_id_rota_ = csq_id_rota;
  if (csq_id_rota) {
    set_has_csq_id_rota();
  } else {
    clear_has_csq_id_rota();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.csq_id_rota)
}

// optional .pacote_posicao.t32_sai_cfg saida_cfg = 11;
inline bool equip_posicao::has_saida_cfg() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void equip_posicao::set_has_saida_cfg() {
  _has_bits_[0] |= 0x00000400u;
}
inline void equip_posicao::clear_has_saida_cfg() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void equip_posicao::clear_saida_cfg() {
  if (saida_cfg_ != NULL) saida_cfg_->::pacote_posicao::t32_sai_cfg::Clear();
  clear_has_saida_cfg();
}
inline const ::pacote_posicao::t32_sai_cfg& equip_posicao::saida_cfg() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.saida_cfg)
  return saida_cfg_ != NULL ? *saida_cfg_ : *default_instance_->saida_cfg_;
}
inline ::pacote_posicao::t32_sai_cfg* equip_posicao::mutable_saida_cfg() {
  set_has_saida_cfg();
  if (saida_cfg_ == NULL) {
    saida_cfg_ = new ::pacote_posicao::t32_sai_cfg;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.saida_cfg)
  return saida_cfg_;
}
inline ::pacote_posicao::t32_sai_cfg* equip_posicao::release_saida_cfg() {
  clear_has_saida_cfg();
  ::pacote_posicao::t32_sai_cfg* temp = saida_cfg_;
  saida_cfg_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_saida_cfg(::pacote_posicao::t32_sai_cfg* saida_cfg) {
  delete saida_cfg_;
  saida_cfg_ = saida_cfg;
  if (saida_cfg) {
    set_has_saida_cfg();
  } else {
    clear_has_saida_cfg();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.saida_cfg)
}

// optional .pacote_posicao.t32_ent_gpsi entrada_gps_info = 12;
inline bool equip_posicao::has_entrada_gps_info() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void equip_posicao::set_has_entrada_gps_info() {
  _has_bits_[0] |= 0x00000800u;
}
inline void equip_posicao::clear_has_entrada_gps_info() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void equip_posicao::clear_entrada_gps_info() {
  if (entrada_gps_info_ != NULL) entrada_gps_info_->::pacote_posicao::t32_ent_gpsi::Clear();
  clear_has_entrada_gps_info();
}
inline const ::pacote_posicao::t32_ent_gpsi& equip_posicao::entrada_gps_info() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.entrada_gps_info)
  return entrada_gps_info_ != NULL ? *entrada_gps_info_ : *default_instance_->entrada_gps_info_;
}
inline ::pacote_posicao::t32_ent_gpsi* equip_posicao::mutable_entrada_gps_info() {
  set_has_entrada_gps_info();
  if (entrada_gps_info_ == NULL) {
    entrada_gps_info_ = new ::pacote_posicao::t32_ent_gpsi;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.entrada_gps_info)
  return entrada_gps_info_;
}
inline ::pacote_posicao::t32_ent_gpsi* equip_posicao::release_entrada_gps_info() {
  clear_has_entrada_gps_info();
  ::pacote_posicao::t32_ent_gpsi* temp = entrada_gps_info_;
  entrada_gps_info_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_entrada_gps_info(::pacote_posicao::t32_ent_gpsi* entrada_gps_info) {
  delete entrada_gps_info_;
  entrada_gps_info_ = entrada_gps_info;
  if (entrada_gps_info) {
    set_has_entrada_gps_info();
  } else {
    clear_has_entrada_gps_info();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.entrada_gps_info)
}

// optional int32 indice_posicao = 13;
inline bool equip_posicao::has_indice_posicao() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void equip_posicao::set_has_indice_posicao() {
  _has_bits_[0] |= 0x00001000u;
}
inline void equip_posicao::clear_has_indice_posicao() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void equip_posicao::clear_indice_posicao() {
  indice_posicao_ = 0;
  clear_has_indice_posicao();
}
inline ::google::protobuf::int32 equip_posicao::indice_posicao() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.indice_posicao)
  return indice_posicao_;
}
inline void equip_posicao::set_indice_posicao(::google::protobuf::int32 value) {
  set_has_indice_posicao();
  indice_posicao_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.indice_posicao)
}

// optional int32 gps_altitude = 14;
inline bool equip_posicao::has_gps_altitude() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void equip_posicao::set_has_gps_altitude() {
  _has_bits_[0] |= 0x00002000u;
}
inline void equip_posicao::clear_has_gps_altitude() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void equip_posicao::clear_gps_altitude() {
  gps_altitude_ = 0;
  clear_has_gps_altitude();
}
inline ::google::protobuf::int32 equip_posicao::gps_altitude() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.gps_altitude)
  return gps_altitude_;
}
inline void equip_posicao::set_gps_altitude(::google::protobuf::int32 value) {
  set_has_gps_altitude();
  gps_altitude_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.gps_altitude)
}

// optional .pacote_posicao.t32_inf_mot inf_motorista = 15;
inline bool equip_posicao::has_inf_motorista() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void equip_posicao::set_has_inf_motorista() {
  _has_bits_[0] |= 0x00004000u;
}
inline void equip_posicao::clear_has_inf_motorista() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void equip_posicao::clear_inf_motorista() {
  if (inf_motorista_ != NULL) inf_motorista_->::pacote_posicao::t32_inf_mot::Clear();
  clear_has_inf_motorista();
}
inline const ::pacote_posicao::t32_inf_mot& equip_posicao::inf_motorista() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.inf_motorista)
  return inf_motorista_ != NULL ? *inf_motorista_ : *default_instance_->inf_motorista_;
}
inline ::pacote_posicao::t32_inf_mot* equip_posicao::mutable_inf_motorista() {
  set_has_inf_motorista();
  if (inf_motorista_ == NULL) {
    inf_motorista_ = new ::pacote_posicao::t32_inf_mot;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.inf_motorista)
  return inf_motorista_;
}
inline ::pacote_posicao::t32_inf_mot* equip_posicao::release_inf_motorista() {
  clear_has_inf_motorista();
  ::pacote_posicao::t32_inf_mot* temp = inf_motorista_;
  inf_motorista_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_inf_motorista(::pacote_posicao::t32_inf_mot* inf_motorista) {
  delete inf_motorista_;
  inf_motorista_ = inf_motorista;
  if (inf_motorista) {
    set_has_inf_motorista();
  } else {
    clear_has_inf_motorista();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.inf_motorista)
}

// optional .pacote_posicao.t32_horimetro info_horimetro = 16;
inline bool equip_posicao::has_info_horimetro() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void equip_posicao::set_has_info_horimetro() {
  _has_bits_[0] |= 0x00008000u;
}
inline void equip_posicao::clear_has_info_horimetro() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void equip_posicao::clear_info_horimetro() {
  if (info_horimetro_ != NULL) info_horimetro_->::pacote_posicao::t32_horimetro::Clear();
  clear_has_info_horimetro();
}
inline const ::pacote_posicao::t32_horimetro& equip_posicao::info_horimetro() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.info_horimetro)
  return info_horimetro_ != NULL ? *info_horimetro_ : *default_instance_->info_horimetro_;
}
inline ::pacote_posicao::t32_horimetro* equip_posicao::mutable_info_horimetro() {
  set_has_info_horimetro();
  if (info_horimetro_ == NULL) {
    info_horimetro_ = new ::pacote_posicao::t32_horimetro;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.info_horimetro)
  return info_horimetro_;
}
inline ::pacote_posicao::t32_horimetro* equip_posicao::release_info_horimetro() {
  clear_has_info_horimetro();
  ::pacote_posicao::t32_horimetro* temp = info_horimetro_;
  info_horimetro_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_info_horimetro(::pacote_posicao::t32_horimetro* info_horimetro) {
  delete info_horimetro_;
  info_horimetro_ = info_horimetro;
  if (info_horimetro) {
    set_has_info_horimetro();
  } else {
    clear_has_info_horimetro();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.info_horimetro)
}

// optional int32 tmp_ult_val = 17;
inline bool equip_posicao::has_tmp_ult_val() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void equip_posicao::set_has_tmp_ult_val() {
  _has_bits_[0] |= 0x00010000u;
}
inline void equip_posicao::clear_has_tmp_ult_val() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void equip_posicao::clear_tmp_ult_val() {
  tmp_ult_val_ = 0;
  clear_has_tmp_ult_val();
}
inline ::google::protobuf::int32 equip_posicao::tmp_ult_val() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.tmp_ult_val)
  return tmp_ult_val_;
}
inline void equip_posicao::set_tmp_ult_val(::google::protobuf::int32 value) {
  set_has_tmp_ult_val();
  tmp_ult_val_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.tmp_ult_val)
}

// optional int32 ad1 = 18;
inline bool equip_posicao::has_ad1() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void equip_posicao::set_has_ad1() {
  _has_bits_[0] |= 0x00020000u;
}
inline void equip_posicao::clear_has_ad1() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void equip_posicao::clear_ad1() {
  ad1_ = 0;
  clear_has_ad1();
}
inline ::google::protobuf::int32 equip_posicao::ad1() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.ad1)
  return ad1_;
}
inline void equip_posicao::set_ad1(::google::protobuf::int32 value) {
  set_has_ad1();
  ad1_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.ad1)
}

// optional int32 ad2 = 19;
inline bool equip_posicao::has_ad2() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void equip_posicao::set_has_ad2() {
  _has_bits_[0] |= 0x00040000u;
}
inline void equip_posicao::clear_has_ad2() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void equip_posicao::clear_ad2() {
  ad2_ = 0;
  clear_has_ad2();
}
inline ::google::protobuf::int32 equip_posicao::ad2() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.ad2)
  return ad2_;
}
inline void equip_posicao::set_ad2(::google::protobuf::int32 value) {
  set_has_ad2();
  ad2_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.ad2)
}

// optional int32 ad3 = 20;
inline bool equip_posicao::has_ad3() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void equip_posicao::set_has_ad3() {
  _has_bits_[0] |= 0x00080000u;
}
inline void equip_posicao::clear_has_ad3() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void equip_posicao::clear_ad3() {
  ad3_ = 0;
  clear_has_ad3();
}
inline ::google::protobuf::int32 equip_posicao::ad3() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.ad3)
  return ad3_;
}
inline void equip_posicao::set_ad3(::google::protobuf::int32 value) {
  set_has_ad3();
  ad3_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.ad3)
}

// optional int32 ad4 = 21;
inline bool equip_posicao::has_ad4() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void equip_posicao::set_has_ad4() {
  _has_bits_[0] |= 0x00100000u;
}
inline void equip_posicao::clear_has_ad4() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void equip_posicao::clear_ad4() {
  ad4_ = 0;
  clear_has_ad4();
}
inline ::google::protobuf::int32 equip_posicao::ad4() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.ad4)
  return ad4_;
}
inline void equip_posicao::set_ad4(::google::protobuf::int32 value) {
  set_has_ad4();
  ad4_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.ad4)
}

// optional int32 estado_seguranca_saidas = 22;
inline bool equip_posicao::has_estado_seguranca_saidas() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void equip_posicao::set_has_estado_seguranca_saidas() {
  _has_bits_[0] |= 0x00200000u;
}
inline void equip_posicao::clear_has_estado_seguranca_saidas() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void equip_posicao::clear_estado_seguranca_saidas() {
  estado_seguranca_saidas_ = 0;
  clear_has_estado_seguranca_saidas();
}
inline ::google::protobuf::int32 equip_posicao::estado_seguranca_saidas() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.estado_seguranca_saidas)
  return estado_seguranca_saidas_;
}
inline void equip_posicao::set_estado_seguranca_saidas(::google::protobuf::int32 value) {
  set_has_estado_seguranca_saidas();
  estado_seguranca_saidas_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.estado_seguranca_saidas)
}

// optional int32 estado_seguranca_entradas = 23;
inline bool equip_posicao::has_estado_seguranca_entradas() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void equip_posicao::set_has_estado_seguranca_entradas() {
  _has_bits_[0] |= 0x00400000u;
}
inline void equip_posicao::clear_has_estado_seguranca_entradas() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void equip_posicao::clear_estado_seguranca_entradas() {
  estado_seguranca_entradas_ = 0;
  clear_has_estado_seguranca_entradas();
}
inline ::google::protobuf::int32 equip_posicao::estado_seguranca_entradas() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.estado_seguranca_entradas)
  return estado_seguranca_entradas_;
}
inline void equip_posicao::set_estado_seguranca_entradas(::google::protobuf::int32 value) {
  set_has_estado_seguranca_entradas();
  estado_seguranca_entradas_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.estado_seguranca_entradas)
}

// optional int32 vcc_alim = 24;
inline bool equip_posicao::has_vcc_alim() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void equip_posicao::set_has_vcc_alim() {
  _has_bits_[0] |= 0x00800000u;
}
inline void equip_posicao::clear_has_vcc_alim() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void equip_posicao::clear_vcc_alim() {
  vcc_alim_ = 0;
  clear_has_vcc_alim();
}
inline ::google::protobuf::int32 equip_posicao::vcc_alim() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.vcc_alim)
  return vcc_alim_;
}
inline void equip_posicao::set_vcc_alim(::google::protobuf::int32 value) {
  set_has_vcc_alim();
  vcc_alim_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.vcc_alim)
}

// optional int32 id_area = 25;
inline bool equip_posicao::has_id_area() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void equip_posicao::set_has_id_area() {
  _has_bits_[0] |= 0x01000000u;
}
inline void equip_posicao::clear_has_id_area() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void equip_posicao::clear_id_area() {
  id_area_ = 0;
  clear_has_id_area();
}
inline ::google::protobuf::int32 equip_posicao::id_area() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.id_area)
  return id_area_;
}
inline void equip_posicao::set_id_area(::google::protobuf::int32 value) {
  set_has_id_area();
  id_area_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.id_area)
}

// optional .pacote_posicao.t_telemetria info_telemetria = 26;
inline bool equip_posicao::has_info_telemetria() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void equip_posicao::set_has_info_telemetria() {
  _has_bits_[0] |= 0x02000000u;
}
inline void equip_posicao::clear_has_info_telemetria() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void equip_posicao::clear_info_telemetria() {
  if (info_telemetria_ != NULL) info_telemetria_->::pacote_posicao::t_telemetria::Clear();
  clear_has_info_telemetria();
}
inline const ::pacote_posicao::t_telemetria& equip_posicao::info_telemetria() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.info_telemetria)
  return info_telemetria_ != NULL ? *info_telemetria_ : *default_instance_->info_telemetria_;
}
inline ::pacote_posicao::t_telemetria* equip_posicao::mutable_info_telemetria() {
  set_has_info_telemetria();
  if (info_telemetria_ == NULL) {
    info_telemetria_ = new ::pacote_posicao::t_telemetria;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.info_telemetria)
  return info_telemetria_;
}
inline ::pacote_posicao::t_telemetria* equip_posicao::release_info_telemetria() {
  clear_has_info_telemetria();
  ::pacote_posicao::t_telemetria* temp = info_telemetria_;
  info_telemetria_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_info_telemetria(::pacote_posicao::t_telemetria* info_telemetria) {
  delete info_telemetria_;
  info_telemetria_ = info_telemetria;
  if (info_telemetria) {
    set_has_info_telemetria();
  } else {
    clear_has_info_telemetria();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.info_telemetria)
}

// optional int32 tipo = 27;
inline bool equip_posicao::has_tipo() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void equip_posicao::set_has_tipo() {
  _has_bits_[0] |= 0x04000000u;
}
inline void equip_posicao::clear_has_tipo() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void equip_posicao::clear_tipo() {
  tipo_ = 0;
  clear_has_tipo();
}
inline ::google::protobuf::int32 equip_posicao::tipo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.tipo)
  return tipo_;
}
inline void equip_posicao::set_tipo(::google::protobuf::int32 value) {
  set_has_tipo();
  tipo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.tipo)
}

// optional int32 origem = 28;
inline bool equip_posicao::has_origem() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void equip_posicao::set_has_origem() {
  _has_bits_[0] |= 0x08000000u;
}
inline void equip_posicao::clear_has_origem() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void equip_posicao::clear_origem() {
  origem_ = 0;
  clear_has_origem();
}
inline ::google::protobuf::int32 equip_posicao::origem() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.origem)
  return origem_;
}
inline void equip_posicao::set_origem(::google::protobuf::int32 value) {
  set_has_origem();
  origem_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.origem)
}

// repeated int32 ponto_ref = 29;
inline int equip_posicao::ponto_ref_size() const {
  return ponto_ref_.size();
}
inline void equip_posicao::clear_ponto_ref() {
  ponto_ref_.Clear();
}
inline ::google::protobuf::int32 equip_posicao::ponto_ref(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.ponto_ref)
  return ponto_ref_.Get(index);
}
inline void equip_posicao::set_ponto_ref(int index, ::google::protobuf::int32 value) {
  ponto_ref_.Set(index, value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.ponto_ref)
}
inline void equip_posicao::add_ponto_ref(::google::protobuf::int32 value) {
  ponto_ref_.Add(value);
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_posicao.ponto_ref)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_posicao::ponto_ref() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_posicao.ponto_ref)
  return ponto_ref_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_posicao::mutable_ponto_ref() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_posicao.ponto_ref)
  return &ponto_ref_;
}

// repeated int32 dist_ref = 30;
inline int equip_posicao::dist_ref_size() const {
  return dist_ref_.size();
}
inline void equip_posicao::clear_dist_ref() {
  dist_ref_.Clear();
}
inline ::google::protobuf::int32 equip_posicao::dist_ref(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.dist_ref)
  return dist_ref_.Get(index);
}
inline void equip_posicao::set_dist_ref(int index, ::google::protobuf::int32 value) {
  dist_ref_.Set(index, value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.dist_ref)
}
inline void equip_posicao::add_dist_ref(::google::protobuf::int32 value) {
  dist_ref_.Add(value);
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_posicao.dist_ref)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_posicao::dist_ref() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_posicao.dist_ref)
  return dist_ref_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_posicao::mutable_dist_ref() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_posicao.dist_ref)
  return &dist_ref_;
}

// repeated int32 ang_ref = 31;
inline int equip_posicao::ang_ref_size() const {
  return ang_ref_.size();
}
inline void equip_posicao::clear_ang_ref() {
  ang_ref_.Clear();
}
inline ::google::protobuf::int32 equip_posicao::ang_ref(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.ang_ref)
  return ang_ref_.Get(index);
}
inline void equip_posicao::set_ang_ref(int index, ::google::protobuf::int32 value) {
  ang_ref_.Set(index, value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.ang_ref)
}
inline void equip_posicao::add_ang_ref(::google::protobuf::int32 value) {
  ang_ref_.Add(value);
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_posicao.ang_ref)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_posicao::ang_ref() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_posicao.ang_ref)
  return ang_ref_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_posicao::mutable_ang_ref() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_posicao.ang_ref)
  return &ang_ref_;
}

// repeated int32 rota = 32;
inline int equip_posicao::rota_size() const {
  return rota_.size();
}
inline void equip_posicao::clear_rota() {
  rota_.Clear();
}
inline ::google::protobuf::int32 equip_posicao::rota(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.rota)
  return rota_.Get(index);
}
inline void equip_posicao::set_rota(int index, ::google::protobuf::int32 value) {
  rota_.Set(index, value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.rota)
}
inline void equip_posicao::add_rota(::google::protobuf::int32 value) {
  rota_.Add(value);
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_posicao.rota)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_posicao::rota() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_posicao.rota)
  return rota_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_posicao::mutable_rota() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_posicao.rota)
  return &rota_;
}

// repeated int32 operacao = 33;
inline int equip_posicao::operacao_size() const {
  return operacao_.size();
}
inline void equip_posicao::clear_operacao() {
  operacao_.Clear();
}
inline ::google::protobuf::int32 equip_posicao::operacao(int index) const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.operacao)
  return operacao_.Get(index);
}
inline void equip_posicao::set_operacao(int index, ::google::protobuf::int32 value) {
  operacao_.Set(index, value);
  // @@protoc_insertion_point(field_set:pacote_posicao.equip_posicao.operacao)
}
inline void equip_posicao::add_operacao(::google::protobuf::int32 value) {
  operacao_.Add(value);
  // @@protoc_insertion_point(field_add:pacote_posicao.equip_posicao.operacao)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
equip_posicao::operacao() const {
  // @@protoc_insertion_point(field_list:pacote_posicao.equip_posicao.operacao)
  return operacao_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
equip_posicao::mutable_operacao() {
  // @@protoc_insertion_point(field_mutable_list:pacote_posicao.equip_posicao.operacao)
  return &operacao_;
}

// optional .pacote_posicao.equip_flags eventoflag = 34;
inline bool equip_posicao::has_eventoflag() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void equip_posicao::set_has_eventoflag() {
  _has_bits_[1] |= 0x00000002u;
}
inline void equip_posicao::clear_has_eventoflag() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void equip_posicao::clear_eventoflag() {
  if (eventoflag_ != NULL) eventoflag_->::pacote_posicao::equip_flags::Clear();
  clear_has_eventoflag();
}
inline const ::pacote_posicao::equip_flags& equip_posicao::eventoflag() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.equip_posicao.eventoflag)
  return eventoflag_ != NULL ? *eventoflag_ : *default_instance_->eventoflag_;
}
inline ::pacote_posicao::equip_flags* equip_posicao::mutable_eventoflag() {
  set_has_eventoflag();
  if (eventoflag_ == NULL) {
    eventoflag_ = new ::pacote_posicao::equip_flags;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.equip_posicao.eventoflag)
  return eventoflag_;
}
inline ::pacote_posicao::equip_flags* equip_posicao::release_eventoflag() {
  clear_has_eventoflag();
  ::pacote_posicao::equip_flags* temp = eventoflag_;
  eventoflag_ = NULL;
  return temp;
}
inline void equip_posicao::set_allocated_eventoflag(::pacote_posicao::equip_flags* eventoflag) {
  delete eventoflag_;
  eventoflag_ = eventoflag;
  if (eventoflag) {
    set_has_eventoflag();
  } else {
    clear_has_eventoflag();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.equip_posicao.eventoflag)
}

// -------------------------------------------------------------------

// t32_flags

// optional int32 alt_setup = 1;
inline bool t32_flags::has_alt_setup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t32_flags::set_has_alt_setup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t32_flags::clear_has_alt_setup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t32_flags::clear_alt_setup() {
  alt_setup_ = 0;
  clear_has_alt_setup();
}
inline ::google::protobuf::int32 t32_flags::alt_setup() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.alt_setup)
  return alt_setup_;
}
inline void t32_flags::set_alt_setup(::google::protobuf::int32 value) {
  set_has_alt_setup();
  alt_setup_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.alt_setup)
}

// optional int32 pos_memoria = 2;
inline bool t32_flags::has_pos_memoria() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t32_flags::set_has_pos_memoria() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t32_flags::clear_has_pos_memoria() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t32_flags::clear_pos_memoria() {
  pos_memoria_ = 0;
  clear_has_pos_memoria();
}
inline ::google::protobuf::int32 t32_flags::pos_memoria() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.pos_memoria)
  return pos_memoria_;
}
inline void t32_flags::set_pos_memoria(::google::protobuf::int32 value) {
  set_has_pos_memoria();
  pos_memoria_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.pos_memoria)
}

// optional int32 gps_valido = 3;
inline bool t32_flags::has_gps_valido() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t32_flags::set_has_gps_valido() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t32_flags::clear_has_gps_valido() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t32_flags::clear_gps_valido() {
  gps_valido_ = 0;
  clear_has_gps_valido();
}
inline ::google::protobuf::int32 t32_flags::gps_valido() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.gps_valido)
  return gps_valido_;
}
inline void t32_flags::set_gps_valido(::google::protobuf::int32 value) {
  set_has_gps_valido();
  gps_valido_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.gps_valido)
}

// optional int32 gps_falha_ant = 4;
inline bool t32_flags::has_gps_falha_ant() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t32_flags::set_has_gps_falha_ant() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t32_flags::clear_has_gps_falha_ant() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t32_flags::clear_gps_falha_ant() {
  gps_falha_ant_ = 0;
  clear_has_gps_falha_ant();
}
inline ::google::protobuf::int32 t32_flags::gps_falha_ant() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.gps_falha_ant)
  return gps_falha_ant_;
}
inline void t32_flags::set_gps_falha_ant(::google::protobuf::int32 value) {
  set_has_gps_falha_ant();
  gps_falha_ant_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.gps_falha_ant)
}

// optional int32 gps_dr = 5;
inline bool t32_flags::has_gps_dr() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void t32_flags::set_has_gps_dr() {
  _has_bits_[0] |= 0x00000010u;
}
inline void t32_flags::clear_has_gps_dr() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void t32_flags::clear_gps_dr() {
  gps_dr_ = 0;
  clear_has_gps_dr();
}
inline ::google::protobuf::int32 t32_flags::gps_dr() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.gps_dr)
  return gps_dr_;
}
inline void t32_flags::set_gps_dr(::google::protobuf::int32 value) {
  set_has_gps_dr();
  gps_dr_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.gps_dr)
}

// optional int32 vel_excedida = 6;
inline bool t32_flags::has_vel_excedida() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void t32_flags::set_has_vel_excedida() {
  _has_bits_[0] |= 0x00000020u;
}
inline void t32_flags::clear_has_vel_excedida() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void t32_flags::clear_vel_excedida() {
  vel_excedida_ = 0;
  clear_has_vel_excedida();
}
inline ::google::protobuf::int32 t32_flags::vel_excedida() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.vel_excedida)
  return vel_excedida_;
}
inline void t32_flags::set_vel_excedida(::google::protobuf::int32 value) {
  set_has_vel_excedida();
  vel_excedida_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.vel_excedida)
}

// optional int32 exc_tmp_parado = 7;
inline bool t32_flags::has_exc_tmp_parado() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void t32_flags::set_has_exc_tmp_parado() {
  _has_bits_[0] |= 0x00000040u;
}
inline void t32_flags::clear_has_exc_tmp_parado() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void t32_flags::clear_exc_tmp_parado() {
  exc_tmp_parado_ = 0;
  clear_has_exc_tmp_parado();
}
inline ::google::protobuf::int32 t32_flags::exc_tmp_parado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.exc_tmp_parado)
  return exc_tmp_parado_;
}
inline void t32_flags::set_exc_tmp_parado(::google::protobuf::int32 value) {
  set_has_exc_tmp_parado();
  exc_tmp_parado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.exc_tmp_parado)
}

// optional int32 baixo_consumo = 8;
inline bool t32_flags::has_baixo_consumo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void t32_flags::set_has_baixo_consumo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void t32_flags::clear_has_baixo_consumo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void t32_flags::clear_baixo_consumo() {
  baixo_consumo_ = 0;
  clear_has_baixo_consumo();
}
inline ::google::protobuf::int32 t32_flags::baixo_consumo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.baixo_consumo)
  return baixo_consumo_;
}
inline void t32_flags::set_baixo_consumo(::google::protobuf::int32 value) {
  set_has_baixo_consumo();
  baixo_consumo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.baixo_consumo)
}

// optional int32 cfc = 9;
inline bool t32_flags::has_cfc() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void t32_flags::set_has_cfc() {
  _has_bits_[0] |= 0x00000100u;
}
inline void t32_flags::clear_has_cfc() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void t32_flags::clear_cfc() {
  cfc_ = 0;
  clear_has_cfc();
}
inline ::google::protobuf::int32 t32_flags::cfc() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.cfc)
  return cfc_;
}
inline void t32_flags::set_cfc(::google::protobuf::int32 value) {
  set_has_cfc();
  cfc_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.cfc)
}

// optional int32 tipo_login = 10;
inline bool t32_flags::has_tipo_login() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void t32_flags::set_has_tipo_login() {
  _has_bits_[0] |= 0x00000200u;
}
inline void t32_flags::clear_has_tipo_login() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void t32_flags::clear_tipo_login() {
  tipo_login_ = 0;
  clear_has_tipo_login();
}
inline ::google::protobuf::int32 t32_flags::tipo_login() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.tipo_login)
  return tipo_login_;
}
inline void t32_flags::set_tipo_login(::google::protobuf::int32 value) {
  set_has_tipo_login();
  tipo_login_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.tipo_login)
}

// optional int32 chamada_voz = 11;
inline bool t32_flags::has_chamada_voz() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void t32_flags::set_has_chamada_voz() {
  _has_bits_[0] |= 0x00000400u;
}
inline void t32_flags::clear_has_chamada_voz() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void t32_flags::clear_chamada_voz() {
  chamada_voz_ = 0;
  clear_has_chamada_voz();
}
inline ::google::protobuf::int32 t32_flags::chamada_voz() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.chamada_voz)
  return chamada_voz_;
}
inline void t32_flags::set_chamada_voz(::google::protobuf::int32 value) {
  set_has_chamada_voz();
  chamada_voz_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.chamada_voz)
}

// optional int32 satelital = 12;
inline bool t32_flags::has_satelital() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void t32_flags::set_has_satelital() {
  _has_bits_[0] |= 0x00000800u;
}
inline void t32_flags::clear_has_satelital() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void t32_flags::clear_satelital() {
  satelital_ = 0;
  clear_has_satelital();
}
inline ::google::protobuf::int32 t32_flags::satelital() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.satelital)
  return satelital_;
}
inline void t32_flags::set_satelital(::google::protobuf::int32 value) {
  set_has_satelital();
  satelital_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.satelital)
}

// optional int32 operacao = 13;
inline bool t32_flags::has_operacao() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void t32_flags::set_has_operacao() {
  _has_bits_[0] |= 0x00001000u;
}
inline void t32_flags::clear_has_operacao() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void t32_flags::clear_operacao() {
  operacao_ = 0;
  clear_has_operacao();
}
inline ::google::protobuf::int32 t32_flags::operacao() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.operacao)
  return operacao_;
}
inline void t32_flags::set_operacao(::google::protobuf::int32 value) {
  set_has_operacao();
  operacao_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.operacao)
}

// optional int32 forcar_gprs = 14;
inline bool t32_flags::has_forcar_gprs() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void t32_flags::set_has_forcar_gprs() {
  _has_bits_[0] |= 0x00002000u;
}
inline void t32_flags::clear_has_forcar_gprs() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void t32_flags::clear_forcar_gprs() {
  forcar_gprs_ = 0;
  clear_has_forcar_gprs();
}
inline ::google::protobuf::int32 t32_flags::forcar_gprs() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.forcar_gprs)
  return forcar_gprs_;
}
inline void t32_flags::set_forcar_gprs(::google::protobuf::int32 value) {
  set_has_forcar_gprs();
  forcar_gprs_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.forcar_gprs)
}

// optional int32 sleep = 15;
inline bool t32_flags::has_sleep() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void t32_flags::set_has_sleep() {
  _has_bits_[0] |= 0x00004000u;
}
inline void t32_flags::clear_has_sleep() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void t32_flags::clear_sleep() {
  sleep_ = 0;
  clear_has_sleep();
}
inline ::google::protobuf::int32 t32_flags::sleep() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.sleep)
  return sleep_;
}
inline void t32_flags::set_sleep(::google::protobuf::int32 value) {
  set_has_sleep();
  sleep_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.sleep)
}

// optional int32 urb_rodov = 16;
inline bool t32_flags::has_urb_rodov() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void t32_flags::set_has_urb_rodov() {
  _has_bits_[0] |= 0x00008000u;
}
inline void t32_flags::clear_has_urb_rodov() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void t32_flags::clear_urb_rodov() {
  urb_rodov_ = 0;
  clear_has_urb_rodov();
}
inline ::google::protobuf::int32 t32_flags::urb_rodov() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.urb_rodov)
  return urb_rodov_;
}
inline void t32_flags::set_urb_rodov(::google::protobuf::int32 value) {
  set_has_urb_rodov();
  urb_rodov_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.urb_rodov)
}

// optional int32 acoes_emb_cliente = 17;
inline bool t32_flags::has_acoes_emb_cliente() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void t32_flags::set_has_acoes_emb_cliente() {
  _has_bits_[0] |= 0x00010000u;
}
inline void t32_flags::clear_has_acoes_emb_cliente() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void t32_flags::clear_acoes_emb_cliente() {
  acoes_emb_cliente_ = 0;
  clear_has_acoes_emb_cliente();
}
inline ::google::protobuf::int32 t32_flags::acoes_emb_cliente() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.acoes_emb_cliente)
  return acoes_emb_cliente_;
}
inline void t32_flags::set_acoes_emb_cliente(::google::protobuf::int32 value) {
  set_has_acoes_emb_cliente();
  acoes_emb_cliente_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.acoes_emb_cliente)
}

// optional int32 analise_ponto = 18;
inline bool t32_flags::has_analise_ponto() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void t32_flags::set_has_analise_ponto() {
  _has_bits_[0] |= 0x00020000u;
}
inline void t32_flags::clear_has_analise_ponto() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void t32_flags::clear_analise_ponto() {
  analise_ponto_ = 0;
  clear_has_analise_ponto();
}
inline ::google::protobuf::int32 t32_flags::analise_ponto() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.analise_ponto)
  return analise_ponto_;
}
inline void t32_flags::set_analise_ponto(::google::protobuf::int32 value) {
  set_has_analise_ponto();
  analise_ponto_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.analise_ponto)
}

// optional int32 analise_area = 19;
inline bool t32_flags::has_analise_area() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void t32_flags::set_has_analise_area() {
  _has_bits_[0] |= 0x00040000u;
}
inline void t32_flags::clear_has_analise_area() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void t32_flags::clear_analise_area() {
  analise_area_ = 0;
  clear_has_analise_area();
}
inline ::google::protobuf::int32 t32_flags::analise_area() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.analise_area)
  return analise_area_;
}
inline void t32_flags::set_analise_area(::google::protobuf::int32 value) {
  set_has_analise_area();
  analise_area_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.analise_area)
}

// optional int32 analise_cerca = 20;
inline bool t32_flags::has_analise_cerca() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void t32_flags::set_has_analise_cerca() {
  _has_bits_[0] |= 0x00080000u;
}
inline void t32_flags::clear_has_analise_cerca() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void t32_flags::clear_analise_cerca() {
  analise_cerca_ = 0;
  clear_has_analise_cerca();
}
inline ::google::protobuf::int32 t32_flags::analise_cerca() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.analise_cerca)
  return analise_cerca_;
}
inline void t32_flags::set_analise_cerca(::google::protobuf::int32 value) {
  set_has_analise_cerca();
  analise_cerca_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.analise_cerca)
}

// optional int32 alarme = 21;
inline bool t32_flags::has_alarme() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void t32_flags::set_has_alarme() {
  _has_bits_[0] |= 0x00100000u;
}
inline void t32_flags::clear_has_alarme() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void t32_flags::clear_alarme() {
  alarme_ = 0;
  clear_has_alarme();
}
inline ::google::protobuf::int32 t32_flags::alarme() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.alarme)
  return alarme_;
}
inline void t32_flags::set_alarme(::google::protobuf::int32 value) {
  set_has_alarme();
  alarme_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.alarme)
}

// optional int32 acao_login = 22;
inline bool t32_flags::has_acao_login() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void t32_flags::set_has_acao_login() {
  _has_bits_[0] |= 0x00200000u;
}
inline void t32_flags::clear_has_acao_login() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void t32_flags::clear_acao_login() {
  acao_login_ = 0;
  clear_has_acao_login();
}
inline ::google::protobuf::int32 t32_flags::acao_login() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.acao_login)
  return acao_login_;
}
inline void t32_flags::set_acao_login(::google::protobuf::int32 value) {
  set_has_acao_login();
  acao_login_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.acao_login)
}

// optional int32 ancora = 23;
inline bool t32_flags::has_ancora() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void t32_flags::set_has_ancora() {
  _has_bits_[0] |= 0x00400000u;
}
inline void t32_flags::clear_has_ancora() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void t32_flags::clear_ancora() {
  ancora_ = 0;
  clear_has_ancora();
}
inline ::google::protobuf::int32 t32_flags::ancora() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.ancora)
  return ancora_;
}
inline void t32_flags::set_ancora(::google::protobuf::int32 value) {
  set_has_ancora();
  ancora_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.ancora)
}

// optional int32 ad2_filter_enable = 24;
inline bool t32_flags::has_ad2_filter_enable() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void t32_flags::set_has_ad2_filter_enable() {
  _has_bits_[0] |= 0x00800000u;
}
inline void t32_flags::clear_has_ad2_filter_enable() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void t32_flags::clear_ad2_filter_enable() {
  ad2_filter_enable_ = 0;
  clear_has_ad2_filter_enable();
}
inline ::google::protobuf::int32 t32_flags::ad2_filter_enable() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.ad2_filter_enable)
  return ad2_filter_enable_;
}
inline void t32_flags::set_ad2_filter_enable(::google::protobuf::int32 value) {
  set_has_ad2_filter_enable();
  ad2_filter_enable_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.ad2_filter_enable)
}

// optional int32 ad3_filter_enable = 25;
inline bool t32_flags::has_ad3_filter_enable() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void t32_flags::set_has_ad3_filter_enable() {
  _has_bits_[0] |= 0x01000000u;
}
inline void t32_flags::clear_has_ad3_filter_enable() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void t32_flags::clear_ad3_filter_enable() {
  ad3_filter_enable_ = 0;
  clear_has_ad3_filter_enable();
}
inline ::google::protobuf::int32 t32_flags::ad3_filter_enable() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.ad3_filter_enable)
  return ad3_filter_enable_;
}
inline void t32_flags::set_ad3_filter_enable(::google::protobuf::int32 value) {
  set_has_ad3_filter_enable();
  ad3_filter_enable_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.ad3_filter_enable)
}

// optional int32 ad4_filter_enable = 26;
inline bool t32_flags::has_ad4_filter_enable() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void t32_flags::set_has_ad4_filter_enable() {
  _has_bits_[0] |= 0x02000000u;
}
inline void t32_flags::clear_has_ad4_filter_enable() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void t32_flags::clear_ad4_filter_enable() {
  ad4_filter_enable_ = 0;
  clear_has_ad4_filter_enable();
}
inline ::google::protobuf::int32 t32_flags::ad4_filter_enable() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.ad4_filter_enable)
  return ad4_filter_enable_;
}
inline void t32_flags::set_ad4_filter_enable(::google::protobuf::int32 value) {
  set_has_ad4_filter_enable();
  ad4_filter_enable_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.ad4_filter_enable)
}

// optional int32 firmware_stored = 27;
inline bool t32_flags::has_firmware_stored() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void t32_flags::set_has_firmware_stored() {
  _has_bits_[0] |= 0x04000000u;
}
inline void t32_flags::clear_has_firmware_stored() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void t32_flags::clear_firmware_stored() {
  firmware_stored_ = 0;
  clear_has_firmware_stored();
}
inline ::google::protobuf::int32 t32_flags::firmware_stored() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.firmware_stored)
  return firmware_stored_;
}
inline void t32_flags::set_firmware_stored(::google::protobuf::int32 value) {
  set_has_firmware_stored();
  firmware_stored_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.firmware_stored)
}

// optional int32 jamming = 28;
inline bool t32_flags::has_jamming() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void t32_flags::set_has_jamming() {
  _has_bits_[0] |= 0x08000000u;
}
inline void t32_flags::clear_has_jamming() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void t32_flags::clear_jamming() {
  jamming_ = 0;
  clear_has_jamming();
}
inline ::google::protobuf::int32 t32_flags::jamming() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flags.jamming)
  return jamming_;
}
inline void t32_flags::set_jamming(::google::protobuf::int32 value) {
  set_has_jamming();
  jamming_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flags.jamming)
}

// -------------------------------------------------------------------

// t32_csq_rot

// optional int32 csq = 1;
inline bool t32_csq_rot::has_csq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t32_csq_rot::set_has_csq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t32_csq_rot::clear_has_csq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t32_csq_rot::clear_csq() {
  csq_ = 0;
  clear_has_csq();
}
inline ::google::protobuf::int32 t32_csq_rot::csq() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_csq_rot.csq)
  return csq_;
}
inline void t32_csq_rot::set_csq(::google::protobuf::int32 value) {
  set_has_csq();
  csq_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_csq_rot.csq)
}

// optional int32 id_rota = 2;
inline bool t32_csq_rot::has_id_rota() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t32_csq_rot::set_has_id_rota() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t32_csq_rot::clear_has_id_rota() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t32_csq_rot::clear_id_rota() {
  id_rota_ = 0;
  clear_has_id_rota();
}
inline ::google::protobuf::int32 t32_csq_rot::id_rota() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_csq_rot.id_rota)
  return id_rota_;
}
inline void t32_csq_rot::set_id_rota(::google::protobuf::int32 value) {
  set_has_id_rota();
  id_rota_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_csq_rot.id_rota)
}

// -------------------------------------------------------------------

// t32_sai_cfg

// optional int32 saidas = 1;
inline bool t32_sai_cfg::has_saidas() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t32_sai_cfg::set_has_saidas() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t32_sai_cfg::clear_has_saidas() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t32_sai_cfg::clear_saidas() {
  saidas_ = 0;
  clear_has_saidas();
}
inline ::google::protobuf::int32 t32_sai_cfg::saidas() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_sai_cfg.saidas)
  return saidas_;
}
inline void t32_sai_cfg::set_saidas(::google::protobuf::int32 value) {
  set_has_saidas();
  saidas_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_sai_cfg.saidas)
}

// optional int32 cargas = 2;
inline bool t32_sai_cfg::has_cargas() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t32_sai_cfg::set_has_cargas() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t32_sai_cfg::clear_has_cargas() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t32_sai_cfg::clear_cargas() {
  cargas_ = 0;
  clear_has_cargas();
}
inline ::google::protobuf::int32 t32_sai_cfg::cargas() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_sai_cfg.cargas)
  return cargas_;
}
inline void t32_sai_cfg::set_cargas(::google::protobuf::int32 value) {
  set_has_cargas();
  cargas_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_sai_cfg.cargas)
}

// optional int32 curtos = 3;
inline bool t32_sai_cfg::has_curtos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t32_sai_cfg::set_has_curtos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t32_sai_cfg::clear_has_curtos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t32_sai_cfg::clear_curtos() {
  curtos_ = 0;
  clear_has_curtos();
}
inline ::google::protobuf::int32 t32_sai_cfg::curtos() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_sai_cfg.curtos)
  return curtos_;
}
inline void t32_sai_cfg::set_curtos(::google::protobuf::int32 value) {
  set_has_curtos();
  curtos_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_sai_cfg.curtos)
}

// optional int32 tempos = 4;
inline bool t32_sai_cfg::has_tempos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t32_sai_cfg::set_has_tempos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t32_sai_cfg::clear_has_tempos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t32_sai_cfg::clear_tempos() {
  tempos_ = 0;
  clear_has_tempos();
}
inline ::google::protobuf::int32 t32_sai_cfg::tempos() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_sai_cfg.tempos)
  return tempos_;
}
inline void t32_sai_cfg::set_tempos(::google::protobuf::int32 value) {
  set_has_tempos();
  tempos_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_sai_cfg.tempos)
}

// -------------------------------------------------------------------

// t32_odo_vel

// optional int32 odometro = 1;
inline bool t32_odo_vel::has_odometro() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t32_odo_vel::set_has_odometro() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t32_odo_vel::clear_has_odometro() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t32_odo_vel::clear_odometro() {
  odometro_ = 0;
  clear_has_odometro();
}
inline ::google::protobuf::int32 t32_odo_vel::odometro() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_odo_vel.odometro)
  return odometro_;
}
inline void t32_odo_vel::set_odometro(::google::protobuf::int32 value) {
  set_has_odometro();
  odometro_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_odo_vel.odometro)
}

// optional int32 velocidade = 2;
inline bool t32_odo_vel::has_velocidade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t32_odo_vel::set_has_velocidade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t32_odo_vel::clear_has_velocidade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t32_odo_vel::clear_velocidade() {
  velocidade_ = 0;
  clear_has_velocidade();
}
inline ::google::protobuf::int32 t32_odo_vel::velocidade() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_odo_vel.velocidade)
  return velocidade_;
}
inline void t32_odo_vel::set_velocidade(::google::protobuf::int32 value) {
  set_has_velocidade();
  velocidade_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_odo_vel.velocidade)
}

// -------------------------------------------------------------------

// t32_ent_gpsi

// optional int32 ent01ad1 = 1;
inline bool t32_ent_gpsi::has_ent01ad1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t32_ent_gpsi::set_has_ent01ad1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t32_ent_gpsi::clear_has_ent01ad1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t32_ent_gpsi::clear_ent01ad1() {
  ent01ad1_ = 0;
  clear_has_ent01ad1();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent01ad1() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent01ad1)
  return ent01ad1_;
}
inline void t32_ent_gpsi::set_ent01ad1(::google::protobuf::int32 value) {
  set_has_ent01ad1();
  ent01ad1_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent01ad1)
}

// optional int32 ent02ad2 = 2;
inline bool t32_ent_gpsi::has_ent02ad2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t32_ent_gpsi::set_has_ent02ad2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t32_ent_gpsi::clear_has_ent02ad2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t32_ent_gpsi::clear_ent02ad2() {
  ent02ad2_ = 0;
  clear_has_ent02ad2();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent02ad2() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent02ad2)
  return ent02ad2_;
}
inline void t32_ent_gpsi::set_ent02ad2(::google::protobuf::int32 value) {
  set_has_ent02ad2();
  ent02ad2_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent02ad2)
}

// optional int32 ent03ad3 = 3;
inline bool t32_ent_gpsi::has_ent03ad3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t32_ent_gpsi::set_has_ent03ad3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t32_ent_gpsi::clear_has_ent03ad3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t32_ent_gpsi::clear_ent03ad3() {
  ent03ad3_ = 0;
  clear_has_ent03ad3();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent03ad3() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent03ad3)
  return ent03ad3_;
}
inline void t32_ent_gpsi::set_ent03ad3(::google::protobuf::int32 value) {
  set_has_ent03ad3();
  ent03ad3_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent03ad3)
}

// optional int32 ent04ad4 = 4;
inline bool t32_ent_gpsi::has_ent04ad4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t32_ent_gpsi::set_has_ent04ad4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t32_ent_gpsi::clear_has_ent04ad4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t32_ent_gpsi::clear_ent04ad4() {
  ent04ad4_ = 0;
  clear_has_ent04ad4();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent04ad4() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent04ad4)
  return ent04ad4_;
}
inline void t32_ent_gpsi::set_ent04ad4(::google::protobuf::int32 value) {
  set_has_ent04ad4();
  ent04ad4_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent04ad4)
}

// optional int32 ent05gnd1 = 5;
inline bool t32_ent_gpsi::has_ent05gnd1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void t32_ent_gpsi::set_has_ent05gnd1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void t32_ent_gpsi::clear_has_ent05gnd1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void t32_ent_gpsi::clear_ent05gnd1() {
  ent05gnd1_ = 0;
  clear_has_ent05gnd1();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent05gnd1() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent05gnd1)
  return ent05gnd1_;
}
inline void t32_ent_gpsi::set_ent05gnd1(::google::protobuf::int32 value) {
  set_has_ent05gnd1();
  ent05gnd1_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent05gnd1)
}

// optional int32 ent06gnd2 = 6;
inline bool t32_ent_gpsi::has_ent06gnd2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void t32_ent_gpsi::set_has_ent06gnd2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void t32_ent_gpsi::clear_has_ent06gnd2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void t32_ent_gpsi::clear_ent06gnd2() {
  ent06gnd2_ = 0;
  clear_has_ent06gnd2();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent06gnd2() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent06gnd2)
  return ent06gnd2_;
}
inline void t32_ent_gpsi::set_ent06gnd2(::google::protobuf::int32 value) {
  set_has_ent06gnd2();
  ent06gnd2_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent06gnd2)
}

// optional int32 ent07gnd3 = 7;
inline bool t32_ent_gpsi::has_ent07gnd3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void t32_ent_gpsi::set_has_ent07gnd3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void t32_ent_gpsi::clear_has_ent07gnd3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void t32_ent_gpsi::clear_ent07gnd3() {
  ent07gnd3_ = 0;
  clear_has_ent07gnd3();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent07gnd3() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent07gnd3)
  return ent07gnd3_;
}
inline void t32_ent_gpsi::set_ent07gnd3(::google::protobuf::int32 value) {
  set_has_ent07gnd3();
  ent07gnd3_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent07gnd3)
}

// optional int32 ent08vcc1 = 8;
inline bool t32_ent_gpsi::has_ent08vcc1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void t32_ent_gpsi::set_has_ent08vcc1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void t32_ent_gpsi::clear_has_ent08vcc1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void t32_ent_gpsi::clear_ent08vcc1() {
  ent08vcc1_ = 0;
  clear_has_ent08vcc1();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent08vcc1() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent08vcc1)
  return ent08vcc1_;
}
inline void t32_ent_gpsi::set_ent08vcc1(::google::protobuf::int32 value) {
  set_has_ent08vcc1();
  ent08vcc1_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent08vcc1)
}

// optional int32 ent09pan = 9;
inline bool t32_ent_gpsi::has_ent09pan() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void t32_ent_gpsi::set_has_ent09pan() {
  _has_bits_[0] |= 0x00000100u;
}
inline void t32_ent_gpsi::clear_has_ent09pan() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void t32_ent_gpsi::clear_ent09pan() {
  ent09pan_ = 0;
  clear_has_ent09pan();
}
inline ::google::protobuf::int32 t32_ent_gpsi::ent09pan() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.ent09pan)
  return ent09pan_;
}
inline void t32_ent_gpsi::set_ent09pan(::google::protobuf::int32 value) {
  set_has_ent09pan();
  ent09pan_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.ent09pan)
}

// optional int32 gps_reserv01 = 10;
inline bool t32_ent_gpsi::has_gps_reserv01() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void t32_ent_gpsi::set_has_gps_reserv01() {
  _has_bits_[0] |= 0x00000200u;
}
inline void t32_ent_gpsi::clear_has_gps_reserv01() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void t32_ent_gpsi::clear_gps_reserv01() {
  gps_reserv01_ = 0;
  clear_has_gps_reserv01();
}
inline ::google::protobuf::int32 t32_ent_gpsi::gps_reserv01() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.gps_reserv01)
  return gps_reserv01_;
}
inline void t32_ent_gpsi::set_gps_reserv01(::google::protobuf::int32 value) {
  set_has_gps_reserv01();
  gps_reserv01_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.gps_reserv01)
}

// optional int32 gps_reserv02 = 11;
inline bool t32_ent_gpsi::has_gps_reserv02() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void t32_ent_gpsi::set_has_gps_reserv02() {
  _has_bits_[0] |= 0x00000400u;
}
inline void t32_ent_gpsi::clear_has_gps_reserv02() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void t32_ent_gpsi::clear_gps_reserv02() {
  gps_reserv02_ = 0;
  clear_has_gps_reserv02();
}
inline ::google::protobuf::int32 t32_ent_gpsi::gps_reserv02() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.gps_reserv02)
  return gps_reserv02_;
}
inline void t32_ent_gpsi::set_gps_reserv02(::google::protobuf::int32 value) {
  set_has_gps_reserv02();
  gps_reserv02_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.gps_reserv02)
}

// optional int32 gps_reserv03 = 12;
inline bool t32_ent_gpsi::has_gps_reserv03() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void t32_ent_gpsi::set_has_gps_reserv03() {
  _has_bits_[0] |= 0x00000800u;
}
inline void t32_ent_gpsi::clear_has_gps_reserv03() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void t32_ent_gpsi::clear_gps_reserv03() {
  gps_reserv03_ = 0;
  clear_has_gps_reserv03();
}
inline ::google::protobuf::int32 t32_ent_gpsi::gps_reserv03() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.gps_reserv03)
  return gps_reserv03_;
}
inline void t32_ent_gpsi::set_gps_reserv03(::google::protobuf::int32 value) {
  set_has_gps_reserv03();
  gps_reserv03_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.gps_reserv03)
}

// optional int32 gps_reserv04 = 13;
inline bool t32_ent_gpsi::has_gps_reserv04() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void t32_ent_gpsi::set_has_gps_reserv04() {
  _has_bits_[0] |= 0x00001000u;
}
inline void t32_ent_gpsi::clear_has_gps_reserv04() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void t32_ent_gpsi::clear_gps_reserv04() {
  gps_reserv04_ = 0;
  clear_has_gps_reserv04();
}
inline ::google::protobuf::int32 t32_ent_gpsi::gps_reserv04() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.gps_reserv04)
  return gps_reserv04_;
}
inline void t32_ent_gpsi::set_gps_reserv04(::google::protobuf::int32 value) {
  set_has_gps_reserv04();
  gps_reserv04_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.gps_reserv04)
}

// optional int32 gps_reserv05 = 14;
inline bool t32_ent_gpsi::has_gps_reserv05() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void t32_ent_gpsi::set_has_gps_reserv05() {
  _has_bits_[0] |= 0x00002000u;
}
inline void t32_ent_gpsi::clear_has_gps_reserv05() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void t32_ent_gpsi::clear_gps_reserv05() {
  gps_reserv05_ = 0;
  clear_has_gps_reserv05();
}
inline ::google::protobuf::int32 t32_ent_gpsi::gps_reserv05() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.gps_reserv05)
  return gps_reserv05_;
}
inline void t32_ent_gpsi::set_gps_reserv05(::google::protobuf::int32 value) {
  set_has_gps_reserv05();
  gps_reserv05_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.gps_reserv05)
}

// optional int32 gps_reserv06 = 15;
inline bool t32_ent_gpsi::has_gps_reserv06() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void t32_ent_gpsi::set_has_gps_reserv06() {
  _has_bits_[0] |= 0x00004000u;
}
inline void t32_ent_gpsi::clear_has_gps_reserv06() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void t32_ent_gpsi::clear_gps_reserv06() {
  gps_reserv06_ = 0;
  clear_has_gps_reserv06();
}
inline ::google::protobuf::int32 t32_ent_gpsi::gps_reserv06() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.gps_reserv06)
  return gps_reserv06_;
}
inline void t32_ent_gpsi::set_gps_reserv06(::google::protobuf::int32 value) {
  set_has_gps_reserv06();
  gps_reserv06_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.gps_reserv06)
}

// optional int32 gps_reserv07 = 16;
inline bool t32_ent_gpsi::has_gps_reserv07() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void t32_ent_gpsi::set_has_gps_reserv07() {
  _has_bits_[0] |= 0x00008000u;
}
inline void t32_ent_gpsi::clear_has_gps_reserv07() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void t32_ent_gpsi::clear_gps_reserv07() {
  gps_reserv07_ = 0;
  clear_has_gps_reserv07();
}
inline ::google::protobuf::int32 t32_ent_gpsi::gps_reserv07() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.gps_reserv07)
  return gps_reserv07_;
}
inline void t32_ent_gpsi::set_gps_reserv07(::google::protobuf::int32 value) {
  set_has_gps_reserv07();
  gps_reserv07_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.gps_reserv07)
}

// optional int32 dir = 17;
inline bool t32_ent_gpsi::has_dir() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void t32_ent_gpsi::set_has_dir() {
  _has_bits_[0] |= 0x00010000u;
}
inline void t32_ent_gpsi::clear_has_dir() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void t32_ent_gpsi::clear_dir() {
  dir_ = 0;
  clear_has_dir();
}
inline ::google::protobuf::int32 t32_ent_gpsi::dir() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.dir)
  return dir_;
}
inline void t32_ent_gpsi::set_dir(::google::protobuf::int32 value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.dir)
}

// optional int32 svn = 18;
inline bool t32_ent_gpsi::has_svn() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void t32_ent_gpsi::set_has_svn() {
  _has_bits_[0] |= 0x00020000u;
}
inline void t32_ent_gpsi::clear_has_svn() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void t32_ent_gpsi::clear_svn() {
  svn_ = 0;
  clear_has_svn();
}
inline ::google::protobuf::int32 t32_ent_gpsi::svn() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.svn)
  return svn_;
}
inline void t32_ent_gpsi::set_svn(::google::protobuf::int32 value) {
  set_has_svn();
  svn_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.svn)
}

// optional int32 hdop = 19;
inline bool t32_ent_gpsi::has_hdop() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void t32_ent_gpsi::set_has_hdop() {
  _has_bits_[0] |= 0x00040000u;
}
inline void t32_ent_gpsi::clear_has_hdop() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void t32_ent_gpsi::clear_hdop() {
  hdop_ = 0;
  clear_has_hdop();
}
inline ::google::protobuf::int32 t32_ent_gpsi::hdop() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_ent_gpsi.hdop)
  return hdop_;
}
inline void t32_ent_gpsi::set_hdop(::google::protobuf::int32 value) {
  set_has_hdop();
  hdop_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_ent_gpsi.hdop)
}

// -------------------------------------------------------------------

// t32_inf_mot

// optional int32 id_motorista = 1;
inline bool t32_inf_mot::has_id_motorista() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t32_inf_mot::set_has_id_motorista() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t32_inf_mot::clear_has_id_motorista() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t32_inf_mot::clear_id_motorista() {
  id_motorista_ = 0;
  clear_has_id_motorista();
}
inline ::google::protobuf::int32 t32_inf_mot::id_motorista() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_inf_mot.id_motorista)
  return id_motorista_;
}
inline void t32_inf_mot::set_id_motorista(::google::protobuf::int32 value) {
  set_has_id_motorista();
  id_motorista_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_inf_mot.id_motorista)
}

// optional int32 est_bat_int = 2;
inline bool t32_inf_mot::has_est_bat_int() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t32_inf_mot::set_has_est_bat_int() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t32_inf_mot::clear_has_est_bat_int() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t32_inf_mot::clear_est_bat_int() {
  est_bat_int_ = 0;
  clear_has_est_bat_int();
}
inline ::google::protobuf::int32 t32_inf_mot::est_bat_int() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_inf_mot.est_bat_int)
  return est_bat_int_;
}
inline void t32_inf_mot::set_est_bat_int(::google::protobuf::int32 value) {
  set_has_est_bat_int();
  est_bat_int_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_inf_mot.est_bat_int)
}

// optional int32 est_bat_ext = 3;
inline bool t32_inf_mot::has_est_bat_ext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t32_inf_mot::set_has_est_bat_ext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t32_inf_mot::clear_has_est_bat_ext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t32_inf_mot::clear_est_bat_ext() {
  est_bat_ext_ = 0;
  clear_has_est_bat_ext();
}
inline ::google::protobuf::int32 t32_inf_mot::est_bat_ext() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_inf_mot.est_bat_ext)
  return est_bat_ext_;
}
inline void t32_inf_mot::set_est_bat_ext(::google::protobuf::int32 value) {
  set_has_est_bat_ext();
  est_bat_ext_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_inf_mot.est_bat_ext)
}

// optional int32 est_alim = 4;
inline bool t32_inf_mot::has_est_alim() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t32_inf_mot::set_has_est_alim() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t32_inf_mot::clear_has_est_alim() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t32_inf_mot::clear_est_alim() {
  est_alim_ = 0;
  clear_has_est_alim();
}
inline ::google::protobuf::int32 t32_inf_mot::est_alim() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_inf_mot.est_alim)
  return est_alim_;
}
inline void t32_inf_mot::set_est_alim(::google::protobuf::int32 value) {
  set_has_est_alim();
  est_alim_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_inf_mot.est_alim)
}

// optional int32 ad1range = 5;
inline bool t32_inf_mot::has_ad1range() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void t32_inf_mot::set_has_ad1range() {
  _has_bits_[0] |= 0x00000010u;
}
inline void t32_inf_mot::clear_has_ad1range() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void t32_inf_mot::clear_ad1range() {
  ad1range_ = 0;
  clear_has_ad1range();
}
inline ::google::protobuf::int32 t32_inf_mot::ad1range() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_inf_mot.ad1range)
  return ad1range_;
}
inline void t32_inf_mot::set_ad1range(::google::protobuf::int32 value) {
  set_has_ad1range();
  ad1range_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_inf_mot.ad1range)
}

// -------------------------------------------------------------------

// t32_horimetro

// optional int32 horimetro = 1;
inline bool t32_horimetro::has_horimetro() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t32_horimetro::set_has_horimetro() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t32_horimetro::clear_has_horimetro() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t32_horimetro::clear_horimetro() {
  horimetro_ = 0;
  clear_has_horimetro();
}
inline ::google::protobuf::int32 t32_horimetro::horimetro() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.horimetro)
  return horimetro_;
}
inline void t32_horimetro::set_horimetro(::google::protobuf::int32 value) {
  set_has_horimetro();
  horimetro_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.horimetro)
}

// optional int32 pre_td = 2;
inline bool t32_horimetro::has_pre_td() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t32_horimetro::set_has_pre_td() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t32_horimetro::clear_has_pre_td() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t32_horimetro::clear_pre_td() {
  pre_td_ = 0;
  clear_has_pre_td();
}
inline ::google::protobuf::int32 t32_horimetro::pre_td() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.pre_td)
  return pre_td_;
}
inline void t32_horimetro::set_pre_td(::google::protobuf::int32 value) {
  set_has_pre_td();
  pre_td_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.pre_td)
}

// optional int32 pre_img = 3;
inline bool t32_horimetro::has_pre_img() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t32_horimetro::set_has_pre_img() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t32_horimetro::clear_has_pre_img() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t32_horimetro::clear_pre_img() {
  pre_img_ = 0;
  clear_has_pre_img();
}
inline ::google::protobuf::int32 t32_horimetro::pre_img() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.pre_img)
  return pre_img_;
}
inline void t32_horimetro::set_pre_img(::google::protobuf::int32 value) {
  set_has_pre_img();
  pre_img_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.pre_img)
}

// optional int32 pre_ev = 4;
inline bool t32_horimetro::has_pre_ev() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t32_horimetro::set_has_pre_ev() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t32_horimetro::clear_has_pre_ev() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t32_horimetro::clear_pre_ev() {
  pre_ev_ = 0;
  clear_has_pre_ev();
}
inline ::google::protobuf::int32 t32_horimetro::pre_ev() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.pre_ev)
  return pre_ev_;
}
inline void t32_horimetro::set_pre_ev(::google::protobuf::int32 value) {
  set_has_pre_ev();
  pre_ev_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.pre_ev)
}

// optional int32 pre_telem = 5;
inline bool t32_horimetro::has_pre_telem() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void t32_horimetro::set_has_pre_telem() {
  _has_bits_[0] |= 0x00000010u;
}
inline void t32_horimetro::clear_has_pre_telem() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void t32_horimetro::clear_pre_telem() {
  pre_telem_ = 0;
  clear_has_pre_telem();
}
inline ::google::protobuf::int32 t32_horimetro::pre_telem() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.pre_telem)
  return pre_telem_;
}
inline void t32_horimetro::set_pre_telem(::google::protobuf::int32 value) {
  set_has_pre_telem();
  pre_telem_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.pre_telem)
}

// optional int32 pre_delta_tm = 6;
inline bool t32_horimetro::has_pre_delta_tm() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void t32_horimetro::set_has_pre_delta_tm() {
  _has_bits_[0] |= 0x00000020u;
}
inline void t32_horimetro::clear_has_pre_delta_tm() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void t32_horimetro::clear_pre_delta_tm() {
  pre_delta_tm_ = 0;
  clear_has_pre_delta_tm();
}
inline ::google::protobuf::int32 t32_horimetro::pre_delta_tm() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.pre_delta_tm)
  return pre_delta_tm_;
}
inline void t32_horimetro::set_pre_delta_tm(::google::protobuf::int32 value) {
  set_has_pre_delta_tm();
  pre_delta_tm_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.pre_delta_tm)
}

// optional int32 pre_ev_tm = 7;
inline bool t32_horimetro::has_pre_ev_tm() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void t32_horimetro::set_has_pre_ev_tm() {
  _has_bits_[0] |= 0x00000040u;
}
inline void t32_horimetro::clear_has_pre_ev_tm() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void t32_horimetro::clear_pre_ev_tm() {
  pre_ev_tm_ = 0;
  clear_has_pre_ev_tm();
}
inline ::google::protobuf::int32 t32_horimetro::pre_ev_tm() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.pre_ev_tm)
  return pre_ev_tm_;
}
inline void t32_horimetro::set_pre_ev_tm(::google::protobuf::int32 value) {
  set_has_pre_ev_tm();
  pre_ev_tm_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.pre_ev_tm)
}

// optional int32 hor_reserv03 = 8;
inline bool t32_horimetro::has_hor_reserv03() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void t32_horimetro::set_has_hor_reserv03() {
  _has_bits_[0] |= 0x00000080u;
}
inline void t32_horimetro::clear_has_hor_reserv03() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void t32_horimetro::clear_hor_reserv03() {
  hor_reserv03_ = 0;
  clear_has_hor_reserv03();
}
inline ::google::protobuf::int32 t32_horimetro::hor_reserv03() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.hor_reserv03)
  return hor_reserv03_;
}
inline void t32_horimetro::set_hor_reserv03(::google::protobuf::int32 value) {
  set_has_hor_reserv03();
  hor_reserv03_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.hor_reserv03)
}

// optional int32 hor_reserv04 = 9;
inline bool t32_horimetro::has_hor_reserv04() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void t32_horimetro::set_has_hor_reserv04() {
  _has_bits_[0] |= 0x00000100u;
}
inline void t32_horimetro::clear_has_hor_reserv04() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void t32_horimetro::clear_hor_reserv04() {
  hor_reserv04_ = 0;
  clear_has_hor_reserv04();
}
inline ::google::protobuf::int32 t32_horimetro::hor_reserv04() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_horimetro.hor_reserv04)
  return hor_reserv04_;
}
inline void t32_horimetro::set_hor_reserv04(::google::protobuf::int32 value) {
  set_has_hor_reserv04();
  hor_reserv04_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_horimetro.hor_reserv04)
}

// -------------------------------------------------------------------

// t_telemetria

// optional int32 versao = 1;
inline bool t_telemetria::has_versao() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t_telemetria::set_has_versao() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t_telemetria::clear_has_versao() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t_telemetria::clear_versao() {
  versao_ = 0;
  clear_has_versao();
}
inline ::google::protobuf::int32 t_telemetria::versao() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.versao)
  return versao_;
}
inline void t_telemetria::set_versao(::google::protobuf::int32 value) {
  set_has_versao();
  versao_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.versao)
}

// optional int32 temp_motor = 2;
inline bool t_telemetria::has_temp_motor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t_telemetria::set_has_temp_motor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t_telemetria::clear_has_temp_motor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t_telemetria::clear_temp_motor() {
  temp_motor_ = 0;
  clear_has_temp_motor();
}
inline ::google::protobuf::int32 t_telemetria::temp_motor() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.temp_motor)
  return temp_motor_;
}
inline void t_telemetria::set_temp_motor(::google::protobuf::int32 value) {
  set_has_temp_motor();
  temp_motor_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.temp_motor)
}

// optional int32 nivel_combustivel = 3;
inline bool t_telemetria::has_nivel_combustivel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t_telemetria::set_has_nivel_combustivel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t_telemetria::clear_has_nivel_combustivel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t_telemetria::clear_nivel_combustivel() {
  nivel_combustivel_ = 0;
  clear_has_nivel_combustivel();
}
inline ::google::protobuf::int32 t_telemetria::nivel_combustivel() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.nivel_combustivel)
  return nivel_combustivel_;
}
inline void t_telemetria::set_nivel_combustivel(::google::protobuf::int32 value) {
  set_has_nivel_combustivel();
  nivel_combustivel_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.nivel_combustivel)
}

// optional int32 num_sensores = 4;
inline bool t_telemetria::has_num_sensores() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t_telemetria::set_has_num_sensores() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t_telemetria::clear_has_num_sensores() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t_telemetria::clear_num_sensores() {
  num_sensores_ = 0;
  clear_has_num_sensores();
}
inline ::google::protobuf::int32 t_telemetria::num_sensores() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.num_sensores)
  return num_sensores_;
}
inline void t_telemetria::set_num_sensores(::google::protobuf::int32 value) {
  set_has_num_sensores();
  num_sensores_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.num_sensores)
}

// optional int32 ts_motor_giro = 5;
inline bool t_telemetria::has_ts_motor_giro() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void t_telemetria::set_has_ts_motor_giro() {
  _has_bits_[0] |= 0x00000010u;
}
inline void t_telemetria::clear_has_ts_motor_giro() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void t_telemetria::clear_ts_motor_giro() {
  ts_motor_giro_ = 0;
  clear_has_ts_motor_giro();
}
inline ::google::protobuf::int32 t_telemetria::ts_motor_giro() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.ts_motor_giro)
  return ts_motor_giro_;
}
inline void t_telemetria::set_ts_motor_giro(::google::protobuf::int32 value) {
  set_has_ts_motor_giro();
  ts_motor_giro_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.ts_motor_giro)
}

// optional int32 ts_fx_azul = 6;
inline bool t_telemetria::has_ts_fx_azul() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void t_telemetria::set_has_ts_fx_azul() {
  _has_bits_[0] |= 0x00000020u;
}
inline void t_telemetria::clear_has_ts_fx_azul() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void t_telemetria::clear_ts_fx_azul() {
  ts_fx_azul_ = 0;
  clear_has_ts_fx_azul();
}
inline ::google::protobuf::int32 t_telemetria::ts_fx_azul() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.ts_fx_azul)
  return ts_fx_azul_;
}
inline void t_telemetria::set_ts_fx_azul(::google::protobuf::int32 value) {
  set_has_ts_fx_azul();
  ts_fx_azul_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.ts_fx_azul)
}

// optional int32 ts_fx_amare = 7;
inline bool t_telemetria::has_ts_fx_amare() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void t_telemetria::set_has_ts_fx_amare() {
  _has_bits_[0] |= 0x00000040u;
}
inline void t_telemetria::clear_has_ts_fx_amare() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void t_telemetria::clear_ts_fx_amare() {
  ts_fx_amare_ = 0;
  clear_has_ts_fx_amare();
}
inline ::google::protobuf::int32 t_telemetria::ts_fx_amare() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.ts_fx_amare)
  return ts_fx_amare_;
}
inline void t_telemetria::set_ts_fx_amare(::google::protobuf::int32 value) {
  set_has_ts_fx_amare();
  ts_fx_amare_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.ts_fx_amare)
}

// optional int32 ts_fx_verde = 8;
inline bool t_telemetria::has_ts_fx_verde() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void t_telemetria::set_has_ts_fx_verde() {
  _has_bits_[0] |= 0x00000080u;
}
inline void t_telemetria::clear_has_ts_fx_verde() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void t_telemetria::clear_ts_fx_verde() {
  ts_fx_verde_ = 0;
  clear_has_ts_fx_verde();
}
inline ::google::protobuf::int32 t_telemetria::ts_fx_verde() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.ts_fx_verde)
  return ts_fx_verde_;
}
inline void t_telemetria::set_ts_fx_verde(::google::protobuf::int32 value) {
  set_has_ts_fx_verde();
  ts_fx_verde_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.ts_fx_verde)
}

// optional int32 ts_fx_verme = 9;
inline bool t_telemetria::has_ts_fx_verme() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void t_telemetria::set_has_ts_fx_verme() {
  _has_bits_[0] |= 0x00000100u;
}
inline void t_telemetria::clear_has_ts_fx_verme() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void t_telemetria::clear_ts_fx_verme() {
  ts_fx_verme_ = 0;
  clear_has_ts_fx_verme();
}
inline ::google::protobuf::int32 t_telemetria::ts_fx_verme() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.ts_fx_verme)
  return ts_fx_verme_;
}
inline void t_telemetria::set_ts_fx_verme(::google::protobuf::int32 value) {
  set_has_ts_fx_verme();
  ts_fx_verme_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.ts_fx_verme)
}

// optional int32 ts_movimento = 10;
inline bool t_telemetria::has_ts_movimento() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void t_telemetria::set_has_ts_movimento() {
  _has_bits_[0] |= 0x00000200u;
}
inline void t_telemetria::clear_has_ts_movimento() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void t_telemetria::clear_ts_movimento() {
  ts_movimento_ = 0;
  clear_has_ts_movimento();
}
inline ::google::protobuf::int32 t_telemetria::ts_movimento() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.ts_movimento)
  return ts_movimento_;
}
inline void t_telemetria::set_ts_movimento(::google::protobuf::int32 value) {
  set_has_ts_movimento();
  ts_movimento_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.ts_movimento)
}

// optional int32 ts_parado = 11;
inline bool t_telemetria::has_ts_parado() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void t_telemetria::set_has_ts_parado() {
  _has_bits_[0] |= 0x00000400u;
}
inline void t_telemetria::clear_has_ts_parado() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void t_telemetria::clear_ts_parado() {
  ts_parado_ = 0;
  clear_has_ts_parado();
}
inline ::google::protobuf::int32 t_telemetria::ts_parado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.ts_parado)
  return ts_parado_;
}
inline void t_telemetria::set_ts_parado(::google::protobuf::int32 value) {
  set_has_ts_parado();
  ts_parado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.ts_parado)
}

// optional .pacote_posicao.t32_odo_vel odometro_velocidade = 12;
inline bool t_telemetria::has_odometro_velocidade() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void t_telemetria::set_has_odometro_velocidade() {
  _has_bits_[0] |= 0x00000800u;
}
inline void t_telemetria::clear_has_odometro_velocidade() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void t_telemetria::clear_odometro_velocidade() {
  if (odometro_velocidade_ != NULL) odometro_velocidade_->::pacote_posicao::t32_odo_vel::Clear();
  clear_has_odometro_velocidade();
}
inline const ::pacote_posicao::t32_odo_vel& t_telemetria::odometro_velocidade() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.odometro_velocidade)
  return odometro_velocidade_ != NULL ? *odometro_velocidade_ : *default_instance_->odometro_velocidade_;
}
inline ::pacote_posicao::t32_odo_vel* t_telemetria::mutable_odometro_velocidade() {
  set_has_odometro_velocidade();
  if (odometro_velocidade_ == NULL) {
    odometro_velocidade_ = new ::pacote_posicao::t32_odo_vel;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.t_telemetria.odometro_velocidade)
  return odometro_velocidade_;
}
inline ::pacote_posicao::t32_odo_vel* t_telemetria::release_odometro_velocidade() {
  clear_has_odometro_velocidade();
  ::pacote_posicao::t32_odo_vel* temp = odometro_velocidade_;
  odometro_velocidade_ = NULL;
  return temp;
}
inline void t_telemetria::set_allocated_odometro_velocidade(::pacote_posicao::t32_odo_vel* odometro_velocidade) {
  delete odometro_velocidade_;
  odometro_velocidade_ = odometro_velocidade;
  if (odometro_velocidade) {
    set_has_odometro_velocidade();
  } else {
    clear_has_odometro_velocidade();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.t_telemetria.odometro_velocidade)
}

// optional .pacote_posicao.t32_flg_tm flags_telemetria = 13;
inline bool t_telemetria::has_flags_telemetria() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void t_telemetria::set_has_flags_telemetria() {
  _has_bits_[0] |= 0x00001000u;
}
inline void t_telemetria::clear_has_flags_telemetria() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void t_telemetria::clear_flags_telemetria() {
  if (flags_telemetria_ != NULL) flags_telemetria_->::pacote_posicao::t32_flg_tm::Clear();
  clear_has_flags_telemetria();
}
inline const ::pacote_posicao::t32_flg_tm& t_telemetria::flags_telemetria() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.flags_telemetria)
  return flags_telemetria_ != NULL ? *flags_telemetria_ : *default_instance_->flags_telemetria_;
}
inline ::pacote_posicao::t32_flg_tm* t_telemetria::mutable_flags_telemetria() {
  set_has_flags_telemetria();
  if (flags_telemetria_ == NULL) {
    flags_telemetria_ = new ::pacote_posicao::t32_flg_tm;
  }
  // @@protoc_insertion_point(field_mutable:pacote_posicao.t_telemetria.flags_telemetria)
  return flags_telemetria_;
}
inline ::pacote_posicao::t32_flg_tm* t_telemetria::release_flags_telemetria() {
  clear_has_flags_telemetria();
  ::pacote_posicao::t32_flg_tm* temp = flags_telemetria_;
  flags_telemetria_ = NULL;
  return temp;
}
inline void t_telemetria::set_allocated_flags_telemetria(::pacote_posicao::t32_flg_tm* flags_telemetria) {
  delete flags_telemetria_;
  flags_telemetria_ = flags_telemetria;
  if (flags_telemetria) {
    set_has_flags_telemetria();
  } else {
    clear_has_flags_telemetria();
  }
  // @@protoc_insertion_point(field_set_allocated:pacote_posicao.t_telemetria.flags_telemetria)
}

// optional int32 rpm = 14;
inline bool t_telemetria::has_rpm() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void t_telemetria::set_has_rpm() {
  _has_bits_[0] |= 0x00002000u;
}
inline void t_telemetria::clear_has_rpm() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void t_telemetria::clear_rpm() {
  rpm_ = 0;
  clear_has_rpm();
}
inline ::google::protobuf::int32 t_telemetria::rpm() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.rpm)
  return rpm_;
}
inline void t_telemetria::set_rpm(::google::protobuf::int32 value) {
  set_has_rpm();
  rpm_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.rpm)
}

// optional int32 tensao_alternador_pos_chave = 15;
inline bool t_telemetria::has_tensao_alternador_pos_chave() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void t_telemetria::set_has_tensao_alternador_pos_chave() {
  _has_bits_[0] |= 0x00004000u;
}
inline void t_telemetria::clear_has_tensao_alternador_pos_chave() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void t_telemetria::clear_tensao_alternador_pos_chave() {
  tensao_alternador_pos_chave_ = 0;
  clear_has_tensao_alternador_pos_chave();
}
inline ::google::protobuf::int32 t_telemetria::tensao_alternador_pos_chave() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t_telemetria.tensao_alternador_pos_chave)
  return tensao_alternador_pos_chave_;
}
inline void t_telemetria::set_tensao_alternador_pos_chave(::google::protobuf::int32 value) {
  set_has_tensao_alternador_pos_chave();
  tensao_alternador_pos_chave_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t_telemetria.tensao_alternador_pos_chave)
}

// -------------------------------------------------------------------

// t32_flg_tm

// optional int32 falha_pressao_oleo = 1;
inline bool t32_flg_tm::has_falha_pressao_oleo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void t32_flg_tm::set_has_falha_pressao_oleo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void t32_flg_tm::clear_has_falha_pressao_oleo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void t32_flg_tm::clear_falha_pressao_oleo() {
  falha_pressao_oleo_ = 0;
  clear_has_falha_pressao_oleo();
}
inline ::google::protobuf::int32 t32_flg_tm::falha_pressao_oleo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.falha_pressao_oleo)
  return falha_pressao_oleo_;
}
inline void t32_flg_tm::set_falha_pressao_oleo(::google::protobuf::int32 value) {
  set_has_falha_pressao_oleo();
  falha_pressao_oleo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.falha_pressao_oleo)
}

// optional int32 exc_pe_embreagem = 2;
inline bool t32_flg_tm::has_exc_pe_embreagem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void t32_flg_tm::set_has_exc_pe_embreagem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void t32_flg_tm::clear_has_exc_pe_embreagem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void t32_flg_tm::clear_exc_pe_embreagem() {
  exc_pe_embreagem_ = 0;
  clear_has_exc_pe_embreagem();
}
inline ::google::protobuf::int32 t32_flg_tm::exc_pe_embreagem() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.exc_pe_embreagem)
  return exc_pe_embreagem_;
}
inline void t32_flg_tm::set_exc_pe_embreagem(::google::protobuf::int32 value) {
  set_has_exc_pe_embreagem();
  exc_pe_embreagem_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.exc_pe_embreagem)
}

// optional int32 limpador_ligado = 3;
inline bool t32_flg_tm::has_limpador_ligado() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void t32_flg_tm::set_has_limpador_ligado() {
  _has_bits_[0] |= 0x00000004u;
}
inline void t32_flg_tm::clear_has_limpador_ligado() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void t32_flg_tm::clear_limpador_ligado() {
  limpador_ligado_ = 0;
  clear_has_limpador_ligado();
}
inline ::google::protobuf::int32 t32_flg_tm::limpador_ligado() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.limpador_ligado)
  return limpador_ligado_;
}
inline void t32_flg_tm::set_limpador_ligado(::google::protobuf::int32 value) {
  set_has_limpador_ligado();
  limpador_ligado_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.limpador_ligado)
}

// optional int32 est_caixa_marcha = 4;
inline bool t32_flg_tm::has_est_caixa_marcha() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void t32_flg_tm::set_has_est_caixa_marcha() {
  _has_bits_[0] |= 0x00000008u;
}
inline void t32_flg_tm::clear_has_est_caixa_marcha() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void t32_flg_tm::clear_est_caixa_marcha() {
  est_caixa_marcha_ = 0;
  clear_has_est_caixa_marcha();
}
inline ::google::protobuf::int32 t32_flg_tm::est_caixa_marcha() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.est_caixa_marcha)
  return est_caixa_marcha_;
}
inline void t32_flg_tm::set_est_caixa_marcha(::google::protobuf::int32 value) {
  set_has_est_caixa_marcha();
  est_caixa_marcha_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.est_caixa_marcha)
}

// optional int32 est_freio_motor = 5;
inline bool t32_flg_tm::has_est_freio_motor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void t32_flg_tm::set_has_est_freio_motor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void t32_flg_tm::clear_has_est_freio_motor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void t32_flg_tm::clear_est_freio_motor() {
  est_freio_motor_ = 0;
  clear_has_est_freio_motor();
}
inline ::google::protobuf::int32 t32_flg_tm::est_freio_motor() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.est_freio_motor)
  return est_freio_motor_;
}
inline void t32_flg_tm::set_est_freio_motor(::google::protobuf::int32 value) {
  set_has_est_freio_motor();
  est_freio_motor_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.est_freio_motor)
}

// optional int32 est_saida = 6;
inline bool t32_flg_tm::has_est_saida() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void t32_flg_tm::set_has_est_saida() {
  _has_bits_[0] |= 0x00000020u;
}
inline void t32_flg_tm::clear_has_est_saida() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void t32_flg_tm::clear_est_saida() {
  est_saida_ = 0;
  clear_has_est_saida();
}
inline ::google::protobuf::int32 t32_flg_tm::est_saida() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.est_saida)
  return est_saida_;
}
inline void t32_flg_tm::set_est_saida(::google::protobuf::int32 value) {
  set_has_est_saida();
  est_saida_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.est_saida)
}

// optional int32 flag_banguela = 7;
inline bool t32_flg_tm::has_flag_banguela() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void t32_flg_tm::set_has_flag_banguela() {
  _has_bits_[0] |= 0x00000040u;
}
inline void t32_flg_tm::clear_has_flag_banguela() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void t32_flg_tm::clear_flag_banguela() {
  flag_banguela_ = 0;
  clear_has_flag_banguela();
}
inline ::google::protobuf::int32 t32_flg_tm::flag_banguela() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.flag_banguela)
  return flag_banguela_;
}
inline void t32_flg_tm::set_flag_banguela(::google::protobuf::int32 value) {
  set_has_flag_banguela();
  flag_banguela_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.flag_banguela)
}

// optional int32 ign_sem_giro_motor = 8;
inline bool t32_flg_tm::has_ign_sem_giro_motor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void t32_flg_tm::set_has_ign_sem_giro_motor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void t32_flg_tm::clear_has_ign_sem_giro_motor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void t32_flg_tm::clear_ign_sem_giro_motor() {
  ign_sem_giro_motor_ = 0;
  clear_has_ign_sem_giro_motor();
}
inline ::google::protobuf::int32 t32_flg_tm::ign_sem_giro_motor() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.ign_sem_giro_motor)
  return ign_sem_giro_motor_;
}
inline void t32_flg_tm::set_ign_sem_giro_motor(::google::protobuf::int32 value) {
  set_has_ign_sem_giro_motor();
  ign_sem_giro_motor_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.ign_sem_giro_motor)
}

// optional int32 exc_marcha_lenta = 9;
inline bool t32_flg_tm::has_exc_marcha_lenta() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void t32_flg_tm::set_has_exc_marcha_lenta() {
  _has_bits_[0] |= 0x00000100u;
}
inline void t32_flg_tm::clear_has_exc_marcha_lenta() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void t32_flg_tm::clear_exc_marcha_lenta() {
  exc_marcha_lenta_ = 0;
  clear_has_exc_marcha_lenta();
}
inline ::google::protobuf::int32 t32_flg_tm::exc_marcha_lenta() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.exc_marcha_lenta)
  return exc_marcha_lenta_;
}
inline void t32_flg_tm::set_exc_marcha_lenta(::google::protobuf::int32 value) {
  set_has_exc_marcha_lenta();
  exc_marcha_lenta_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.exc_marcha_lenta)
}

// optional int32 exc_velocidade = 10;
inline bool t32_flg_tm::has_exc_velocidade() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void t32_flg_tm::set_has_exc_velocidade() {
  _has_bits_[0] |= 0x00000200u;
}
inline void t32_flg_tm::clear_has_exc_velocidade() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void t32_flg_tm::clear_exc_velocidade() {
  exc_velocidade_ = 0;
  clear_has_exc_velocidade();
}
inline ::google::protobuf::int32 t32_flg_tm::exc_velocidade() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.exc_velocidade)
  return exc_velocidade_;
}
inline void t32_flg_tm::set_exc_velocidade(::google::protobuf::int32 value) {
  set_has_exc_velocidade();
  exc_velocidade_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.exc_velocidade)
}

// optional int32 exc_rotacao = 11;
inline bool t32_flg_tm::has_exc_rotacao() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void t32_flg_tm::set_has_exc_rotacao() {
  _has_bits_[0] |= 0x00000400u;
}
inline void t32_flg_tm::clear_has_exc_rotacao() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void t32_flg_tm::clear_exc_rotacao() {
  exc_rotacao_ = 0;
  clear_has_exc_rotacao();
}
inline ::google::protobuf::int32 t32_flg_tm::exc_rotacao() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.exc_rotacao)
  return exc_rotacao_;
}
inline void t32_flg_tm::set_exc_rotacao(::google::protobuf::int32 value) {
  set_has_exc_rotacao();
  exc_rotacao_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.exc_rotacao)
}

// optional int32 falha_tmp_liq_arref = 12;
inline bool t32_flg_tm::has_falha_tmp_liq_arref() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void t32_flg_tm::set_has_falha_tmp_liq_arref() {
  _has_bits_[0] |= 0x00000800u;
}
inline void t32_flg_tm::clear_has_falha_tmp_liq_arref() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void t32_flg_tm::clear_falha_tmp_liq_arref() {
  falha_tmp_liq_arref_ = 0;
  clear_has_falha_tmp_liq_arref();
}
inline ::google::protobuf::int32 t32_flg_tm::falha_tmp_liq_arref() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.falha_tmp_liq_arref)
  return falha_tmp_liq_arref_;
}
inline void t32_flg_tm::set_falha_tmp_liq_arref(::google::protobuf::int32 value) {
  set_has_falha_tmp_liq_arref();
  falha_tmp_liq_arref_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.falha_tmp_liq_arref)
}

// optional int32 tensao_alternador = 13;
inline bool t32_flg_tm::has_tensao_alternador() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void t32_flg_tm::set_has_tensao_alternador() {
  _has_bits_[0] |= 0x00001000u;
}
inline void t32_flg_tm::clear_has_tensao_alternador() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void t32_flg_tm::clear_tensao_alternador() {
  tensao_alternador_ = 0;
  clear_has_tensao_alternador();
}
inline ::google::protobuf::int32 t32_flg_tm::tensao_alternador() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.tensao_alternador)
  return tensao_alternador_;
}
inline void t32_flg_tm::set_tensao_alternador(::google::protobuf::int32 value) {
  set_has_tensao_alternador();
  tensao_alternador_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.tensao_alternador)
}

// optional int32 motor_funcionando = 14;
inline bool t32_flg_tm::has_motor_funcionando() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void t32_flg_tm::set_has_motor_funcionando() {
  _has_bits_[0] |= 0x00002000u;
}
inline void t32_flg_tm::clear_has_motor_funcionando() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void t32_flg_tm::clear_motor_funcionando() {
  motor_funcionando_ = 0;
  clear_has_motor_funcionando();
}
inline ::google::protobuf::int32 t32_flg_tm::motor_funcionando() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.motor_funcionando)
  return motor_funcionando_;
}
inline void t32_flg_tm::set_motor_funcionando(::google::protobuf::int32 value) {
  set_has_motor_funcionando();
  motor_funcionando_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.motor_funcionando)
}

// optional int32 est_freio = 15;
inline bool t32_flg_tm::has_est_freio() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void t32_flg_tm::set_has_est_freio() {
  _has_bits_[0] |= 0x00004000u;
}
inline void t32_flg_tm::clear_has_est_freio() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void t32_flg_tm::clear_est_freio() {
  est_freio_ = 0;
  clear_has_est_freio();
}
inline ::google::protobuf::int32 t32_flg_tm::est_freio() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.est_freio)
  return est_freio_;
}
inline void t32_flg_tm::set_est_freio(::google::protobuf::int32 value) {
  set_has_est_freio();
  est_freio_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.est_freio)
}

// optional int32 est_embreagem = 16;
inline bool t32_flg_tm::has_est_embreagem() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void t32_flg_tm::set_has_est_embreagem() {
  _has_bits_[0] |= 0x00008000u;
}
inline void t32_flg_tm::clear_has_est_embreagem() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void t32_flg_tm::clear_est_embreagem() {
  est_embreagem_ = 0;
  clear_has_est_embreagem();
}
inline ::google::protobuf::int32 t32_flg_tm::est_embreagem() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.est_embreagem)
  return est_embreagem_;
}
inline void t32_flg_tm::set_est_embreagem(::google::protobuf::int32 value) {
  set_has_est_embreagem();
  est_embreagem_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.est_embreagem)
}

// optional int32 est_pressao_oleo = 17;
inline bool t32_flg_tm::has_est_pressao_oleo() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void t32_flg_tm::set_has_est_pressao_oleo() {
  _has_bits_[0] |= 0x00010000u;
}
inline void t32_flg_tm::clear_has_est_pressao_oleo() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void t32_flg_tm::clear_est_pressao_oleo() {
  est_pressao_oleo_ = 0;
  clear_has_est_pressao_oleo();
}
inline ::google::protobuf::int32 t32_flg_tm::est_pressao_oleo() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.est_pressao_oleo)
  return est_pressao_oleo_;
}
inline void t32_flg_tm::set_est_pressao_oleo(::google::protobuf::int32 value) {
  set_has_est_pressao_oleo();
  est_pressao_oleo_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.est_pressao_oleo)
}

// optional int32 est_limpador = 18;
inline bool t32_flg_tm::has_est_limpador() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void t32_flg_tm::set_has_est_limpador() {
  _has_bits_[0] |= 0x00020000u;
}
inline void t32_flg_tm::clear_has_est_limpador() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void t32_flg_tm::clear_est_limpador() {
  est_limpador_ = 0;
  clear_has_est_limpador();
}
inline ::google::protobuf::int32 t32_flg_tm::est_limpador() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.est_limpador)
  return est_limpador_;
}
inline void t32_flg_tm::set_est_limpador(::google::protobuf::int32 value) {
  set_has_est_limpador();
  est_limpador_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.est_limpador)
}

// optional int32 padding = 19;
inline bool t32_flg_tm::has_padding() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void t32_flg_tm::set_has_padding() {
  _has_bits_[0] |= 0x00040000u;
}
inline void t32_flg_tm::clear_has_padding() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void t32_flg_tm::clear_padding() {
  padding_ = 0;
  clear_has_padding();
}
inline ::google::protobuf::int32 t32_flg_tm::padding() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.padding)
  return padding_;
}
inline void t32_flg_tm::set_padding(::google::protobuf::int32 value) {
  set_has_padding();
  padding_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.padding)
}

// optional int32 id_delta_cfg = 20;
inline bool t32_flg_tm::has_id_delta_cfg() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void t32_flg_tm::set_has_id_delta_cfg() {
  _has_bits_[0] |= 0x00080000u;
}
inline void t32_flg_tm::clear_has_id_delta_cfg() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void t32_flg_tm::clear_id_delta_cfg() {
  id_delta_cfg_ = 0;
  clear_has_id_delta_cfg();
}
inline ::google::protobuf::int32 t32_flg_tm::id_delta_cfg() const {
  // @@protoc_insertion_point(field_get:pacote_posicao.t32_flg_tm.id_delta_cfg)
  return id_delta_cfg_;
}
inline void t32_flg_tm::set_id_delta_cfg(::google::protobuf::int32 value) {
  set_has_id_delta_cfg();
  id_delta_cfg_ = value;
  // @@protoc_insertion_point(field_set:pacote_posicao.t32_flg_tm.id_delta_cfg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pacote_posicao

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pacote_posicao::dispositivo_id> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pacote_posicao::dispositivo_id>() {
  return ::pacote_posicao::dispositivo_id_descriptor();
}
template <> struct is_proto_enum< ::pacote_posicao::evento_id> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pacote_posicao::evento_id>() {
  return ::pacote_posicao::evento_id_descriptor();
}
template <> struct is_proto_enum< ::pacote_posicao::teclado_id> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pacote_posicao::teclado_id>() {
  return ::pacote_posicao::teclado_id_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pacote_5fposicao_2eproto__INCLUDED
